var store = [{
        "title": "[F/E] HTML",
        "excerpt":"이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   HTML (Hyper Text Transfer Protocol) : 웹 문서의 모양을 기술하기 위해 사용하는 마크업 언어     인터넷에서 데이터를 주고받을 수 있는 텍스트 기반의 통신 프로토콜 (Transfer Protocol)   제목, 단락, 목록 등과 같이 본문을 위한 구조적 의미를 표현할 수 있고, 링크, 인용 등을 통해 구조적 문서를 구성할 수 있음   입력 :   &lt;html&gt; \t&lt;head&gt; \t\t&lt;div style=\" \t\t\tcolor: blue; \t\t\tfont-size: 15px; \t\t\"&gt; \t\t\tHello World! \t\t&lt;/div&gt; \t&lt;/head&gt; &lt;/html&gt;   출력 :    \t \t\t \t\t\tHello World! \t\t \t           HTML 엘리먼트 (HTML Elements) : HTML 문서나 웹 페이지를 이루는 개별적인 요소            HTML 태그 (HTML Tags) &lt;tag&gt;&lt;/tag&gt; : 엘리먼트의 시작과 끝을 표시하는 마크업 기호            HTML 속성 (HTML Attributes) &lt;tag element=\"\"&gt; : 여는 태그 내에서 명령어를 구체화하는 속성            HTML 변수 (HTML Arguments) &lt;tag element=\"value\"&gt; : 태그 내의 속성에 해당되는 변수            HTML 주석 &lt;!-- 주석 --&gt;       &lt;html&gt; : HTML으로 작성된 문서임을 선언하는 태그   &lt;html&gt; ... &lt;/html&gt;   &lt;!DOCTYPE html&gt; : 마크업 언어에서의 문서 형식을 정의하는 태그       DTD 태그 (Document Type Definition)   웹 브라우저의 렌더링 엔진이 관용 모드 (Quirks Mode)가 아닌 표준 모드로 렌더링   HTML5 :&lt;!DOCTYPE html&gt;으로 선언   &lt;!DOCTYPE html&gt; ... &lt;/html&gt;   &lt;html lang=\"\"&gt; : 웹 문서의 텍스트가 어떤 언어로 작성되었는지 나타내는 속성    &lt;!DOCTYPE html lang=\"ko\"&gt; ... &lt;/html&gt;   &lt;head&gt; : 웹 문서의 속성을 선언하는 태그     실제 웹 브라우저 화면 상에는 출력되지 않음   HTML 문서의 부가적인 정보들을 넣음   &lt;!DOCTYPE html lang=\"ko\"&gt; \t&lt;head&gt; \t... \t&lt;/head&gt; &lt;/html&gt;   &lt;title&gt; : 웹 문서의 제목을 나타내는 태그       브라우저의 탭에 표시되는 제목을 출력   &lt;title&gt; \t웹 문서 제목 &lt;/title&gt;   &lt;meta&gt; : 웹 서버와 웹 브라우저 간 상호 교환되는 정보를 선언하는 태그     \t  \t\t  \t\t\tmeta 태그의 속성 값  \t\t\t설명  \t\t  \t  \t  \t\t  \t\t\tname  \t\t\t메타 정보의 이름 선언  \t\t  \t\t  \t\t\tcontent  \t\t\t메타 정보의 내용 선언  \t\t  \t\t  \t\t\thttp-equiv  \t\t\tHTTP 문서의 초기 정보 선언  \t\t  \t   &lt;meta name=\"\"&gt; : 웹 서버가 웹 브라우저의 요청에 대해 응답할 정보들을 선언하는 속성    &lt;meta \tname=\"...\"     \tcontent=\"...\" /&gt;   &lt;meta name=\"description\"&gt; : 웹 브라우저의 검색 결과에 표시될 웹 문서의 설명을 선언하는 name 변수       content 값은 공백을 포함해 최대 150글자여야 함   &lt;meta \tname=\"description\"       \tcontent=\"설명\" /&gt;   &lt;meta name=\"keywords\"&gt; : 웹 브라우저의 검색 엔진에 의해 검색될 검색 키워드를 선언하는 name 변수    &lt;meta     name=\"keywords\"       \tcontent=\"키워드1, 키워드2,...\" /&gt;   &lt;meta name=\"robots\"&gt; :  검색 로봇을 제어하는 name 변수     \t \t\t \t\t\trobots 태그의 content 변수 \t\t\t설명 \t\t \t \t \t\t \t\t\tFollow \t\t\t해당 문서를 수집 대상으로 지정 \t\t \t\t \t\t\tIndex \t\t\t해당 문서를 포함해 링크가 걸린 곳을 수집 대상으로 지정 \t\t \t\t \t\t\tNoindex \t\t\t해당 문서를 수집 대상에서 제외 \t\t \t\t \t\t\tNofollow \t\t\t해당 문서를 포함해 링크가 걸린 곳을 수집 대상에서 제외 \t\t \t\t \t\t\tAll \t\t\t'Index, Follow'와 동일 \t\t \t\t \t\t\tNone \t\t\t'Noindex, Nofollow'와 동일 \t\t \t   &lt;meta     name=\"robots\"       \tcontent=\"명령1, 명령2\" /&gt;   &lt;meta name=\"date\"&gt; : 웹 문서가 작성된 날짜를 선언하는 name 변수       content 값은 “2022-09-21T17:38:06+09:00”와 같이 “연도-월-일T시:분:초+(GMT)” 형식으로 작성   GMT는 그리니치 표준시와 현 국가/지역 사이의 시차를 의미   &lt;meta    \tname=\"date\"       \tcontent=\"날짜\" /&gt;   &lt;meta name=\"viewport\"&gt; : 모든 장치에서 웹 문서가 잘 보이도록 뷰 포트를 설정하는 name 변수    &lt;meta    \tname =\"viewport\"       \tcontent=\" \t\t\twidth=device-width, \t\t\tinitial-scale=1.0 \t\t\t\" /&gt;   &lt;meta name=\"twitter\"&gt; : twitter의 ‘미리보기’ 기능을 설정하는 name 변수     \t \t\t \t\t\t'twitter 미리보기' 설정 변수 \t\t\t설명 \t\t \t    \t \t\t \t\t\ttwitter:card \t\t\t트위터 미리보기를 표시 \t\t \t\t \t\t\ttwitter:url \t\t\t트위터 미리보기에서 표시될 웹 페이지 주소 \t\t \t\t \t\t\ttwitter:title \t\t\t트위터 미리보기에서 표시될 웹 페이지 제목 \t\t \t\t \t\t\ttwitter:description \t\t\t트위터 미리보기에서 표시될 웹 페이지 설명 \t\t \t\t \t\t\ttwitter:image \t\t\t트위터 미리보기에서 표시될 웹 페이지 이미지 \t\t \t   &lt;meta     name=\"twitter:card\"     \tcontent=\"summary\" /&gt; &lt;meta     name=\"twitter:url\"     \tcontent=\"website_url\" /&gt; &lt;meta     name=\"twitter:title\"     \tcontent=\"website_name\" /&gt;  &lt;meta     name=\"twitter:description\"     \tcontent=\"website_description\" /&gt;  &lt;meta     name=\"twitter:image\"     \tcontent=\"website_image\" /&gt;   &lt;meta name=\"apple-mobile-web-app\"&gt; : ios Safari의 ‘홈 화면에 추가’ 기능을  설정하는 name 변수       애플 메타 태그 (apple meta tag)    \t \t\t \t\t\tSafari '홈 화면에 추가' 설정 변수 \t\t\t설명 \t\t \t    \t \t\t \t\t\tapple-mobile-web-app-title \t\t\t홈 화면에 추가 기능을 사용할 때 표시될 웹 사이트의 이름 \t\t \t\t \t\t\tapple-mobile-web-app-capable \t\t\t홈 화면에 추가 기능을 사용할 때 브라우저의 UI 사용 여부 \t\t \t\t \t\t\tapple-mobile-web-app-status-bar-style \t\t\t홈 화면에 추가 기능을 사용할 때 표시될 상태바의 색상 (default : 회색, black : 검정, black-translucent : 반투명) \t\t \t   &lt;meta     name=\"apple-mobile-web-app-title\"     \tcontent=\"website_name\" /&gt; &lt;meta     name=\"apple-mobile-web-app-capable\"       \tcontent=\"yes\" /&gt; &lt;meta     name=\"apple-mobile-web-app-status-bar-style\"     \tcontent=\"black-translucent\" /&gt;    &lt;meta http-equiv=\"\"&gt; : 웹 서버가 웹 문서 내에 HTML 응답 헤더를 넣어 웹 브라우저가 초기 정보를 지정하게 하는 속성    &lt;meta     http-equiv=\"...\"     \tcontent=\"...\" /&gt;   &lt;meta http-equiv=\"subject\"&gt; : 웹 사이트의 주제를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"subject\" \t\tcontent=\"웹 사이트 주제\" /&gt;   &lt;meta http-equiv=\"title\"&gt; : 웹 사이트의 제목을 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"title\" \t\tcontent=\"웹 사이트 제목\" /&gt;   &lt;meta http-equiv=\"author\"&gt; : 웹 문서를 작성한 저자를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"author\" \t\tcontent=\"저자\" /&gt;   &lt;meta http-equiv=\"distribution\"&gt; : 웹 문서를 배포하는 배포자를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"distribution\" \t\tcontent=\"배포자\" /&gt;   &lt;meta http-equiv=\"generator\"&gt; : 웹 문서를 작성한 제작 도구를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"generator\" \t\tcontent=\"제작 도구\" /&gt;   &lt;meta http-equiv=\"reply-to\"&gt; : 문의받을 이메일을 지정하는 http-equiv 변수 (“reply-to” 대신 “email“도 가능)    &lt;meta \thttp-equiv=\"reply-to\"       \tcontent=\"이메일\" /&gt; &lt;meta \thttp-equiv=\"email\"       \tcontent=\"이메일\" /&gt;   &lt;meta http-equiv=\"filename\"&gt; : 파일 이름을 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"filename\"       \tcontent=\"파일 이름\" /&gt;   &lt;meta http-equiv=\"location\"&gt; : 위치를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"location\"       \tcontent=\"위치\" /&gt;   &lt;meta http-equiv=\"copyright\"&gt; : 저작권를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"copyright\"       \tcontent=\"copyright@저작권 이메일 주소\" /&gt;   &lt;meta http-equiv=\"build\"&gt; : 웹 문서의 최초 제작 연도, 월, 일을 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"build\"       \tcontent=\"최초 수정일\" /&gt;   &lt;meta http-equiv=\"last-modified\"&gt; : 웹 문서의 최종 수정 연도, 월, 일을 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"build\"       \tcontent=\"최종 수정일\" /&gt;   &lt;meta http-equiv=\"X-UA-Compatible\"&gt; : 웹 문서를 렌더링할 IE 버전을 명시해 웹의 호환성을 지정하는 http-equiv 변수     \t \t\t \t\t\tX-UA-Compatible의 content 변수  \t\t\t설명 \t\t \t    \t \t\t     \t\tIE=5 \t\t\t관용 모드 (quirks mode)로 지정된 DOCTYPE에 상관없이 IE5 렌더링 방식을 사용        \t     \t       \t\tIE=7, IE=8 \t\t\tIE7, IE8 표준 모드로 지정된 DOCTYPE에 상관없이 IE7, IE8 표준 모드 렌더링 방식을 사용        \t          \t\t\tIE=EmulateIE7, IE=EmulateIE8   \t\t\tIE7, IE8 에뮬레이션 모드로 지정된 DOCTYPE에 따라 IE7, IE8 표준모드나 관용모드로 렌더링        \t     \t     \t\tIE=edge   \t\t\t최신 모드로 지정된 DOCTYPE에 상관없이 IE8 이상 버전에서는 항상 최신 표준 모드로 렌더링 \t\t \t\t    \t     \t\tIE=edge, chrome=1   \t\t\t최신 모드로 지정된 DOCTYPE에 상관없이 IE8 이상 버전에서는 항상 최신 표준 모드로 렌더링,  만약 Google Chrome이 설치되어 있다면 Goggle Chrome으로 렌더링 \t\t  \t   &lt;!--? HTTP 문서에 대한 브라우저의 렌더링 방식을 항상 최신 표준 모드로 렌더링할 경우 --&gt; &lt;meta \thttp-equiv=\"X-UA-Compatible\" \t\tcontent=\"IE=edge\" &gt;   &lt;meta http-equiv=\"content-type\"&gt; : 웹 문서에 대한 웹 브라우저의 문자 인코딩 방식을 지정하는 http-equiv 변수       ‘호환성 보기’   HTML5 : charset 속성으로 대체 가능    \t \t\t \t\t\t문자 코드의 종류 \t\t\t설명 \t\t \t    \t \t\t     \t\tEUC-KR (ISO-2022-KR) \t\t\tISO-숫자 타입 문자 인코딩 : 한글을 2비트로 변환해 인코딩        \t \t\t     \t\tUTF-8, UTF-16, UTF-32 \t\t\t유니코드 변환 포맷 인코딩 : 모든 문자를 8, 16, 32비트로 변환해 인코딩         \t  \t   &lt;!--? 문자 인코딩 방식으로 유니코드를 위한 문자셋인 UTF-8을 사용할 경우 --&gt;  &lt;!--? http-equiv에서 content-type 태그를 사용할 경우 --&gt; &lt;meta \thttp-equiv=\"content-type\" \t\tcontent=\"text/html; \t\tcharset=UTF-8\" &gt;  &lt;!--? charset 속성을 사용할 경우 --&gt; &lt;meta charset=\"UTF-8\"&gt;   &lt;meta http-equiv=\"content-language\"&gt; : 웹 문서 내의 언어를 명시하는 http-equiv 변수    &lt;!--? HTML 문서의 기본 언어로 한국어를 사용할 경우 --&gt; &lt;meta \thttp-equiv=\"content-language\" \t\tcontent=\"ko\" &gt;   &lt;meta http-equiv=\"content-security-policy\"&gt; : 웹 문서에 대한 컨텐츠 정책을 명시하는 http-equiv 변수       XSS, 데이터 삽입 공격 등을 감지하고 완화하기 위해 사용                            \tCSP 지시문       \t\t설명          \t \t                    \tdefault-src           \t모든 컨텐츠는 현재 도메인에서만 제공 (디폴트 설정)                           \tconnect-src           \t연결 가능한 URL를 제한                             \tscript-src           \t스크립트 관련 권한 집합 제어                             \tstyle-src           \t스타일시트 관련 권한 집합 제어                             \timg-src           \t이미지 관련 권한 집합 제어                             \tfont-src           \t웹 글꼴을 제공할 수 있는 URL 지정          \t\t \t\t\tframe-src \t\t\tiframe 태그 : 상위의 iframe 도메인에서 하위의 iframe 도메인을 확인하고 제어 \t\t \t\t \t\t\treport-uri \t\t\t컨텐츠 보안 정책 위반 시 브라우저가 보고서를 보낼 URL 지정 (메타 태그에서는 이 지시문 사용 불가) \t\t      \t \t\t \t\t\tCSP 옵션 \t\t\t설명 \t\t \t \t                    \t*.trusted.com           \t접근 허용할 도메인 지정                             \t'none'           \t모든 도메인을 차단                             \t'self'           \t현재 도메인만 허용                             \t'unsafe-inline'         \t소스 코드 내 인라인 자바스크립트 및 CSS 허용                             \t'nonce-(암호화된 문자)'           \t암호화된 방식으로 인라인 자바스크립트 및 CSS 허용                 &lt;!--? CSP : 모든 컨텐츠를 현재 도메인에서만 제공 --&gt; &lt;meta \thttp-equiv=\"Content-Security-Policy\" \t\tcontent=\" \t\t\tdefault-src 'self' \t\t\" &gt;  &lt;!--? CSP : 특정 도메인과 모든 하위 도메인의 컨텐츠를 허용 --&gt; &lt;meta \thttp-equiv=\"Content-Security-Policy\" \t\tcontent=\" \t\t\tdefault-src 'self' *.trusted.com \t\t\" &gt;  &lt;!--? CSP : 이미지는 모든 도메인, 스크립트와 스타일시트는 특정 도메인만 허용 --&gt; &lt;meta \thttp-equiv=\"Content-Security-Policy\" \t\tcontent=\" \t\t\tdefault-src 'self'; \t\t\timg-src *; \t\t\tscript-src 'self' trusted1.com; \t\t\tstyle-src 'self' trusted2.com \t\t\" &gt;   &lt;meta http-equiv=\"content-script-type\"&gt; : 웹 문서에 사용된 프로그래밍 언어를 명시하는 http-equiv 변수    &lt;!--? HTML 문서에 javascript와 css가 사용된 경우 --&gt; &lt;meta \thttp-equiv=\"content-script-type\" \t\tcontent=\"text/javascript\" &gt; &lt;meta \thttp-equiv=\"content-script-type\" \t\tcontent=\"text/css\" &gt;   &lt;meta http-equiv=\"default-style\"&gt; : 웹 문서에 우선적으로 적용할 스타일 시트를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"default-style\" \t\tcontent=\"some stylesheet\" &gt;   &lt;meta http-equiv=\"refresh\"&gt; : 웹 문서를 새로고침하는 시간 간격을 지정하는 http-equiv 변수    &lt;!--? HTML 문서를 새로고침하는 시간 간격을 180초로 할 경우 --&gt; &lt;meta \thttp-equiv=\"refresh\" \t\tcontent=\"180\" &gt;   &lt;meta http-equiv=\"refresh; url=\"&gt; : 웹 문서를 새로고침하는 시간 간격을 지정하는 http-equiv 변수    &lt;!--? HTML 문서에서 10초 후 http://pocj8ur4in.github.io/로 이동할 경우 --&gt; &lt;meta \thttp-equiv=\"refresh\" \t\tcontent=\"10\"; url=\"http://pocj8ur4in.github.io/ &gt;   &lt;meta http-equiv=\"cache-control\"&gt; : 웹 캐시 사용 여부를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"cache-control\" \t\tcontent=\"no-cache\" &gt;   &lt;meta http-equiv=\"pragma\"&gt; : 현재의 웹 문서를 캐시로 저장할지 여부를 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"pragma\" \t\tcontent=\"no-cache\" &gt;      사용자의 웹 브라우저가 항상 캐시를 읽도록 설정되어 있어도 이를 무시하고 페이지를 갱신하려면,     &lt;meta http-equiv=\"cache-control\"  content=\"no-cache\"&gt; &lt;meta http-equiv=\"pragma\" content=\"no-cache\"&gt;          장점 : 자주 내용이 수정되는 웹 페이지의 경우 항상 사용자에게 바뀐 내용을 보여줄 수 있음     단점 : 매번 서버로부터 웹 페이지를 갱신하므로 페이지 출력 속도가 떨어짐      &lt;meta http-equiv=\"expires\"&gt; : 현재의 웹 문서의 웹 캐시 만료일을 지정하는 http-equiv 변수    &lt;meta \thttp-equiv=\"expires\" \t\tcontent=\"캐시 만료일\" &gt;   &lt;meta http-equiv=\"page/site-enter/exit\"&gt; : 특정 상황에서의 장면 전환 효과를 지정하는 http-equiv 변수     \t \t\t \t\t\t장면 전환 http-equiv 변수 \t\t\t설명 \t\t \t \t \t\t \t\t\tpage-enter \t\t\t현재 페이지 접속 시 \t\t \t\t \t\t\tpage-exit \t\t\t현재 페이지 종료 시 \t\t \t\t \t\t\tsite-enter \t\t\t현재 사이트 접속 시 \t\t \t\t \t\t\tsite-exit \t\t\t현재 사이트 종료 시 \t\t \t      revealtrans() :  문서 전환 효과 지정            (duration=) : 장면 전환 효과를 수행할 시간 설정       (transition=) : 장면 전환 효과를 수행할 방법 설정           &lt;!--? 현재 문서를 나갈 때 흩어뿌리기 장면 전환을 1초간 --&gt; &lt;meta \thttp-equiv=\"page-exit\" \t\tcontent=\"revealtrans(duration=1, transition=12)\" &gt;   &lt;meta http-equiv=\"origin-trial\"&gt; : 웹 개발자가 웹 문서에 실험단계인 속성을 명시하는 http-equiv 변수    &lt;!--? NETFILX에서 PIP 내 음소거 기능 추가 코드 --&gt; &lt;meta \thttp-equiv=\"origin-trial\" \t\tdata-feature=\"Mute in Picture-in-Picture window\" \t\tdata-expires=\"2099-00-00\" \t\tcontent=\"....\" /&gt;   &lt;meta property=\"og\"&gt; : 네이버, 카카오톡 등의 SNS에 게시될 때 데이터 설정을 최적화하는 property 변수       오픈그래프 (OpenGraph) 태그   property= : http-equiv와 비슷한 역할을 하는 속성    \t \t\t \t\t\tog 필수 변수 \t\t\t설명 \t\t \t    \t     \t\t    \t\t\t:title    \t\t\t웹 사이트 제목    \t\t    \t\t    \t\t\t:type    \t\t\t웹 문서의 타입    \t\t     \t\t    \t\t\t:image    \t\t\t표시될 이미지    \t\t      \t\t    \t\t\t:url    \t\t\t웹 문서의 대표 URL    \t\t  \t \t \t\t \t\t\tog 옵션 변수 \t\t\t설명 \t\t \t    \t      \t\t    \t\t\t:description    \t\t\t웹 문서 설명    \t\t    \t\t    \t\t\t:locale    \t\t\t웹 문서 내 언어    \t\t     \t\t    \t\t\t:locale:alternate    \t\t\t웹 문서 내 다국적 언어    \t\t    \t\t    \t\t\t:site_name    \t\t\t웹 문서 내 카테고리 제목    \t\t      \t\t    \t\t\t:audio    \t\t\t웹 문서에 포함되는 오디오 파일 URL    \t\t     \t\t    \t\t\t:video    \t\t\t웹 문서에 포함되는 비디오 파일 URL    \t\t \t \t \t\t \t\t\tog 오브젝트 변수 \t\t\t설명 \t\t \t    \t    \t\t    \t\t\t:width    \t\t\t표시될 오브젝트의 가로 길이    \t\t    \t\t    \t\t\t:height    \t\t\t표시될 오브젝트의 세로 길이    \t\t     \t\t    \t\t\t:url    \t\t\t표시될 오브젝트의 URL    \t\t       \t\t    \t\t\t:secure_url    \t\t\t표시될 오브젝트의 HTTPS URL    \t\t     \t\t    \t\t\t:alt    \t\t\t표시될 오브젝트에 대한 설명    \t\t    \t   &lt;meta \tproperty=\"og:type\"     \tcontent=\"website_type\" /&gt; &lt;meta     property=\"og:locale\"     \tcontent=\"website_language\" /&gt; &lt;meta \tproperty=\"og:site_name\"     \tcontent=\"website_name\" /&gt; &lt;meta \tproperty=\"og:url\"     \tcontent=\"website_url\"     /&gt; &lt;meta     property=\"og:description\"       \tcontent=\"website_description\" /&gt; &lt;meta     property=\"og:image\"     \tcontent=\"website_image\"     /&gt; &lt;meta     property=\"og:image:width\"     \tcontent=\"512\"     /&gt; &lt;meta     property=\"og:image:height\"     content=\"512\" /&gt;   &lt;link&gt; : 현재 웹 문서와 외부 소스 간의 관계를 정의하는 태그       오로지 속성만을 포함 : 여는 태그만 존재    \t \t\t \t\t\tlink 속성 \t\t\t설명 \t\t \t \t \t\t \t\t\trel \t\t\t현재 웹 문서와 외부 소스 간의 관계 \t\t \t\t \t\t\thref \t\t\t외부 소스의 주소 \t\t \t\t \t\t\ttype \t\t\t외부 소스의 타입 \t\t \t\t \t\t\tsizes \t\t\t외부 소스가 표시될 때의 사이즈 \t\t \t   &lt;!--? 현재 웹 문서와 manifest.json (웹 익스텐션이 포함하는 json 형식의 파일)을 연결할 때 --&gt; &lt;link     rel=\"manifest\"     href=\"manifest.json\" /&gt;   &lt;link rel=\"canonical\"&gt; : 검색 엔진을 위한 대표 URL 주소를 설정하는 rel 변수       웹 문서 내의 URL 주소는 다르나 동일한 내용의 중복된 웹 문서가 있을 때 사용   &lt;link \trel=\"canonical\"     \thref=\"대표 URL\" /&gt;   &lt;link rel=\"shortcut icon\"&gt; : 브라우저 탭에 표시될 아이콘을 설정하는 rel 변수    &lt;link \trel=\"shortcut icon\" \thref=\"PUBLIC_URL%/favicon.ico\" \ttype=\"image/x-icon\" \tsizes=\"16x16\" &gt;   &lt; link rel=\"apple-touch-icon\"&gt; : 브라우저 탭에 표시될 아이콘을 설정하는 rel 변수       애플 메타 태그 (apple meta tag)   &lt;link \trel=\"shortcut icon\" \thref=\"PUBLIC_URL%/favicon.ico\" \ttype=\"image/x-icon\" \tsizes=\"16x16\" &gt;   &lt;link rel=\"apple-touch\"&gt; :  ios Safari의 ‘홈 화면에 추가’ 기능을 설정하는 rel 변수       애플 메타 태그 (apple meta tag)    \t \t\t \t\t\tSafari '홈 화면에 추가' 설정 변수 \t\t\t설명 \t\t \t \t \t\t \t\t\tapple-touch-icon \t\t\t홈 화면에 추가 기능을 사용할 때 표시될 웹 사이트의 아이콘 \t\t \t\t \t\t\tapple-touch-startup-image \t\t\t홈 화면에 추가 기능을 사용할 때 로딩 시 스타트업 이미지  \t\t\t(단, 이미지의 크기가 각 기기에 맞게끔 정확히 맞춰져 있어야 제대로 화면에 표시) \t\t \t   &lt;link     rel=\"apple-touch-icon\"     sizes=\"12x57\"     href=\"%PUBLIC_URL%/img/apple-icon-57x57.png\" /&gt; &lt;link     rel=\"apple-touch-startup-icon\"     sizes=\"320x460\"     href=\"%PUBLIC_URL%/img/apple-icon-320x460.png\" /&gt;   &lt;script&gt; : javascript나 CSS와 같은 외부 스크립트 파일을 참조하는 태그    &lt;!--? 구조화된 JSON-LD 데이터 스니펫 : 제목, 작성자 및 기타 세부 정보를 Google이 수집 --&gt; &lt;script type=\"application/ld+json\"&gt;       {         \"@context\": \"https://schema.org\",                    \"@type\": \"website\",           \"name\": \"website_name\",           \"author\": {             \"@type\": \"Person\",             \"name\": \"Person_name\"           },           \"description\": \"website_description\",           \"url\": \"website_url\"       } &lt;/script&gt;   &lt;style&gt; : 현재 웹 문서의 스타일 정보를 정의하는 태그    &lt;style&gt; \tbody { \t\tbackground-color: #fff; \t} \tdiv { \t\tcolor: #000; \t} &lt;/style&gt;   &lt;body&gt; : 웹 문서의 모양을 선언하는 태그     실제 웹 브라우저 화면 상에는 출력   HTML 문서의 레이아웃을 넣음   &lt;!DOCTYPE html&gt; \t... \t&lt;body&gt; \t... \t&lt;/body&gt; &lt;/html&gt;   # 텍스트 관련 태그   &lt;font&gt; : 글자를 넣는 태그            &lt;font size=\"\"&gt; : 글자의 크기를 지정하는 속성            &lt;font color=\"\"&gt; : 글자의 색상을 지정하는 속성            &lt;font face=\"\"&gt; : 글자의 끌골을 지정하는 속성       입력 :  &lt;font size=\"10\" color=\"aqua\"&gt; \thello world! &lt;/font&gt;  출력 :   \t \t\thello world! \t   &lt;h1&gt;~&lt;h6&gt; : 제목을 표현하는 태그    &lt;h1&gt;h1&lt;/h1&gt; &lt;h2&gt;h2&lt;/h2&gt; &lt;h3&gt;h3&lt;/h3&gt; &lt;h4&gt;h4&lt;/h4&gt; &lt;h5&gt;h5&lt;/h5&gt; &lt;h6&gt;h6&lt;/h6&gt;   \th1  \th2  \th3  \th4  \th5  \th6    &lt;p&gt; : 문단을 묶는 태그    입력 :  &lt;p align=\"center\"&gt;문단 1 : 가운데 정렬&lt;/p&gt; &lt;p align=\"right\"&gt;문단 2 : 오른쪽 정렬&lt;/p&gt;  출력 :   \t문단 1 : 가운데 정렬  \t문단 2 : 오른쪽 정렬    &lt;b&gt; : 텍스트를 굵게 표시하는 태그    입력 :  &lt;b&gt;굵게&lt;/b&gt;  출력 :   \t굵게   &lt;strong&gt;,&lt;em&gt; : 텍스트를 강하게/ 약하게 강조하는 태그    입력 :  &lt;strong&gt;강하게 강조&lt;/strong&gt; &lt;em&gt;약하게 강조&lt;/em&gt;  출력 :   \t강하게 강조 \t약하게 강조   &lt;i&gt; : 텍스트를 기울임꼴로 표시하는 태그    입력 :  &lt;i&gt;기울임꼴로&lt;/i&gt;  출력 :   \t기울임꼴로   &lt;ins&gt; : 텍스트에 밑줄을 표시하는 태그    입력 :  &lt;ins&gt;밑줄&lt;/ins&gt;  출력 :   \t밑줄   &lt;del&gt; : 텍스트에 취소선을 표시하는 태그    입력 :  &lt;del&gt;취소선&lt;/del&gt;  출력 :   \t취소선   &lt;small&gt;: 텍스트를 조금 더 작게 표시하는 태그    입력 :  A &lt;small&gt;A&lt;/small&gt; &lt;small&gt;&lt;small&gt;A&lt;/small&gt;&lt;/small&gt;  출력 :   \tA \tA \tA   &lt;br&gt; : 문단을 개행하는 태그    입력 :  B&lt;br&gt;B&lt;br&gt;B  출력 :   \tB B B   &lt;hr&gt; : 가로줄을 넣는 태그    입력 :  ↓ 가로줄 &lt;hr&gt; ↑ 가로줄  출력 :   \t↓ 가로줄 \t \t↑ 가로줄   &lt;code&gt; : 소스 코드를 넣는 태그       `을 3번 쓰는 것으로 대체 가능   &lt;code&gt; \tprint(\"Hello World!\") &lt;code&gt;   # 목록 관련 태그   &lt;li&gt; : 목록을 표시할 때 각 항목들을 표시하는 태그    입력 :  &lt;li&gt;X&lt;/li&gt; &lt;li&gt;Y&lt;/li&gt; &lt;li&gt;Z&lt;/li&gt;  출력 :   \tX \tY \tZ   &lt;ul&gt; : 순서 없는 목록을 표시하는 태그    입력 :  &lt;ul&gt; \t&lt;li&gt;X&lt;/li&gt; \t&lt;li&gt;Y&lt;/li&gt; \t&lt;li&gt;Z&lt;/li&gt; &lt;/ul&gt;  출력 :   \t \t\tX \t\tY \t\tZ \t   &lt;ol&gt; : 순서 있는 목록을 표시하는 태그    입력 :  &lt;ol&gt; \t&lt;li&gt;X&lt;/li&gt; \t&lt;li&gt;Y&lt;/li&gt; \t&lt;li&gt;Z&lt;/li&gt; &lt;/ol&gt;  출력 :   \t \t\tX \t\tY \t\tZ \t   # 링크, 이미지 관련 태그   &lt;a&gt; : 하이퍼링크를 생성하는 태그            &lt;a href=\"\"&gt; : 링크된 문서를 입력하는 속성            &lt;a target=\"\"&gt; : 링크된 문서를 어떻게 열지 지정하는 속성            &lt;a title=\"\"&gt; : 링크의 이름을 지정하는 속성            &lt;a name=\"\"&gt; : 링크의 이름을 지정하는 속성 (문서 내에서도 이 이름을 이용해 이동 가능)       입력 :  &lt;a \thref=\"https://pocj8ur4in.github.io\" \ttarget=\"_blank\" \ttitle=\"pocj8ur4in\" &gt; \tpocj8ur4in &lt;/a&gt;  출력 :   \t \t\tpocj8ur4in \t   &lt;img&gt; : 이미지를 추가하는 태그            &lt;img src=\"\"&gt; : 이미지 파일의 경로를 지정하는 속성             절대 경로 : http:// 또는 https://       상대 경로 : path/filename                &lt;img alt=\"\"&gt; : 이미지가 출력되지 않을 경우 이미지에 대한 설명을 제공하는 속성            &lt;img title=\"\"&gt; : 이미지에 대한 추가 정보를 제공하는 속성 (마우스가 접근하면 말풍선으로 표시)            &lt;img height=\"\" width=\"\"&gt; : 이미지의 세로, 가로의 길이를 지정하는 속성 (HTML5: 픽셀만 지정 가능, %는 CSS 대체)            &lt;img border=\"\"&gt; : 이미지의 경계선의 두께를 지정하는 속성 (기본값 : 1px)       입력 :  &lt;img \tsrc=\"https://cdn.pixabay.com/photo/2020/10/21/04/01/leaves-5672036_1280.png\" \talt=\"leaves-5672036_1280.png\" \ttitle=\"이미지\" \theight=\"720px\" \twidth=\"720px\" \tborder=\"0px\" &gt;  출력 :   \t   &lt;figure&gt; : 이미지나 다이어그램을 감싸는 태그            &lt;figcaption&gt; : &lt;figure&gt;에 제목을 추가하는 태그       입력 :  &lt;figure&gt; \t&lt;figcaption&gt; \t\tfigure \t&lt;/figcaption&gt; \t&lt;img \t\tsrc=\"https://cdn.pixabay.com/photo/2020/10/21/04/01/leaves-5672036_1280.png\" \t\talt=\"leaves-5672036_1280.png\" \t\ttitle=\"이미지\" \t\theight=\"720px\" \t\twidth=\"720px\" \t&gt; &lt;/figure&gt;  출력 :   \t \t\tfigure \t \t   # 표 관련 태그   &lt;table&gt; : 표를 만드는 태그            &lt;tr&gt; : 표의 행을 만드는 태그            &lt;td&gt; : 표의 내용을 표현하는 태그            &lt;th&gt; : 표의 머리말을 표현하는 태그            &lt;colspan&gt; : 표에서 열을 병합하는 태그            &lt;rowspan&gt; : 표에서 행을 병합하는 태그            &lt;caption&gt; : 표의 제목 부분을 기술하는 태그            &lt;col&gt; : 표의 열 정보를 기술하는 태그            &lt;thead&gt; : 표의 상단 부분을 기술하는 태그            &lt;tbody&gt; : 표의 본문 부분을 기술하는 태그            &lt;tfoot&gt; : 표의 하단 부분을 기술하는 태그       입력 :  &lt;table&gt; \t&lt;caption&gt;OO고등학교 시간표&lt;/caption&gt; \t&lt;thead&gt; \t\t&lt;tr&gt; \t\t\t&lt;th&gt; &lt;/th&gt; \t\t\t&lt;th&gt;월&lt;/th&gt; \t\t\t&lt;th&gt;화&lt;/th&gt; \t\t\t&lt;th&gt;수&lt;/th&gt; \t\t\t&lt;th&gt;목&lt;/th&gt; \t\t\t&lt;th&gt;금&lt;/th&gt; \t\t&lt;/tr&gt; \t&lt;/thead&gt; \t&lt;tbody&gt; \t\t&lt;tr&gt; \t\t\t&lt;th&gt;1교시&lt;/th&gt; \t\t\t&lt;td&gt;수학&lt;/td&gt; \t\t\t&lt;td rowspan=\"2\"&gt;국어&lt;/td&gt; \t\t\t&lt;td&gt;수학&lt;/td&gt; \t\t\t&lt;td&gt;과학&lt;/td&gt; \t\t\t&lt;td&gt;영어&lt;/td&gt; \t　　&lt;/tr&gt; \t\t&lt;tr&gt; \t\t\t&lt;th&gt;2교시&lt;/th&gt; \t\t\t&lt;td rowspan=\"2\"&gt;사회&lt;/td&gt; \t\t\t&lt;td&gt;영어&lt;/td&gt; \t\t\t&lt;td&gt;국어&lt;/td&gt; \t\t\t&lt;td rowspan=\"3\"&gt;음악&lt;/td&gt; \t　　&lt;/tr&gt; \t\t&lt;tr&gt; \t\t\t&lt;th&gt;3교시&lt;/th&gt; \t\t\t&lt;td&gt;수학&lt;/td&gt; \t\t\t&lt;td rowspan=\"2\"&gt;미술&lt;/td&gt; \t\t\t&lt;td&gt;영어&lt;/td&gt; \t\t&lt;/tr&gt; \t\t&lt;tr&gt; \t\t\t&lt;th&gt;4교시&lt;/th&gt; \t\t\t&lt;td&gt;체육&lt;/td&gt; \t\t\t&lt;td&gt;사회&lt;/td&gt; \t\t\t&lt;td&gt;영어&lt;/td&gt; \t　　&lt;/tr&gt; \t&lt;/tbody&gt; &lt;/table&gt;   출력 :   \tOO고등학교 시간표 \t \t\t \t\t\t  \t\t\t월 \t\t\t화 \t\t\t수 \t\t\t목 \t\t\t금 \t\t \t \t \t\t \t\t\t1교시 \t\t\t수학 \t\t\t국어 \t\t\t수학 \t\t\t과학 \t\t\t영어 \t　　 \t\t \t\t\t2교시 \t\t\t사회 \t\t\t영어 \t\t\t국어 \t\t\t음악 \t　　 \t\t \t\t\t3교시 \t\t\t수학 \t\t\t미술 \t\t\t영어 \t\t \t\t \t\t\t4교시 \t\t\t체육 \t\t\t사회 \t\t\t영어 \t　　 \t   # 폼 관련 태그     입력 양식 (form) : 사용자로부터 정보를 받을 때 사용    &lt;form&gt; : CGI와 상호 작용을 위한 입력값을 받는 태그            &lt;form method=\"\"&gt; : 웹 서버와의 통신 방식을 지정하는 속성            &lt;form action=\"\"&gt; : 입력 양식에 입력된 값을 저장할 DB 문서를 지정하는 속성 (PHP나 ASP으로 작성)       &lt;label&gt; : 폼의 양식에 이름을 지정하는 태그            &lt;label for=\"\"&gt; : label의 for의 값과 양식의 id의 값이 같으면 연결하는 속성       입력 :  &lt;label for=\"input-label\"&gt;input-text&lt;/label&gt; &lt;input type=\"text\" id=\"input-text\"&gt; &lt;label for=\"checkbox-label\"&gt;checkbox-text&lt;/label&gt; &lt;input type=\"checkbox\" id=\"checkbox-text\"&gt;  출력 :   \tinput-text \t \tcheckbox-text \t   &lt;input&gt; : 입력값을 입력받을 필드를 선언하는 태그            &lt;input name=\"\"&gt; : 필드의 이름을 지정하는 속성            &lt;input type=\"\"&gt; : 필드의 종류를 지정하는 속성                      &lt;input type=\"text\"&gt; : 한 줄의 문자열을 생성하는 type 변수 (기본 변수)                        &lt;input type=\"password\"&gt; : 비밀번호를 생성하는 type 변수                        &lt;input type=\"range\"&gt; : 지정한 범위의 숫자를 생성하는 type 변수                        &lt;input type=\"checkbox\"&gt; : 선택/해제할 수 있는 항목 (중복 가능)을 생성하는 type 변수                        &lt;input type=\"radio\"&gt; : 선택/해제할 수 있는 항목 (중복 불가)을 생성하는 type 변수                        &lt;input type=\"submit\"&gt; : 클릭할 경우 입력값을 전송하는 버튼을 생성하는 type 변수                        &lt;input type=\"reset\"&gt; : 클릭할 경우 입력값을 초기화하는 버튼을 생성하는 type 변수                        &lt;input type=\"file\"&gt; : 파일 업로드 버튼                        &lt;input type=\"hidden\"&gt; : 입력값 없이 폼과 함께 전송해야 하는 정보를 감싸는 type 변수 (hidden flied)                   입력 :  &lt;input type=\"text\" name=\"text\"&gt;  출력 :   \t   입력 :  &lt;input type=\"password\" name=\"password\"&gt;  출력 :   \t   입력 :  &lt;input type=\"range\" name=\"range\"&gt;   출력 :   \t   입력 :  &lt;input type=\"checkbox\" name=\"checkbox\" value=\"1\"&gt;1 &lt;input type=\"checkbox\" name=\"checkbox\" value=\"2\"&gt;2 &lt;input type=\"checkbox\" name=\"checkbox\" value=\"3\"&gt;3 &lt;input type=\"checkbox\" name=\"checkbox\" value=\"4\"&gt;4 &lt;input type=\"checkbox\" name=\"checkbox\" value=\"5\"&gt;5   출력 :   \t1  \t2  \t3  \t4  \t5   입력 :  &lt;input type=\"radio\" name=\"radio\" value=\"1\"&gt;1 &lt;input type=\"radio\" name=\"radio\" value=\"2\"&gt;2 &lt;input type=\"radio\" name=\"radio\" value=\"3\"&gt;3 &lt;input type=\"radio\" name=\"radio\" value=\"4\"&gt;4 &lt;input type=\"radio\" name=\"radio\" value=\"5\"&gt;5   출력 :   \t1  \t2  \t3  \t4  \t5   입력 :  &lt;input type=\"submit\" name=\"submit\"&gt;  출력 :   \t   입력 :  &lt;input type=\"reset\" name=\"reset\"&gt;  출력 :   \t   입력 :  &lt;input type=\"file\" name=\"file\"&gt;  출력 :   \t   &lt;textarea&gt; : 여러 줄의 문자열 값을 입력받는 태그            &lt;textarea rows=\"\"&gt; col=\"\"  : 텍스트 에이리어의 너비와 높이를 지정하는 속성       입력 :  &lt;textarea cols=\"50\" rows=\"10\"&gt;&lt;/textarea&gt;  출력 :   \t   &lt;button&gt; : 클릭 가능한 버튼을 생성하는 태그  입력 :  &lt;button name=\"button\"&gt; \t버튼 &lt;/button&gt;  출력 :   \t버튼    &lt;select&gt; : 드롭다운 목록을 생성하는 태그            &lt;option&gt; : 드롭다운 목록의 항목을 생성하는 태그            &lt;select autofocus&gt; : 페이지가 로드 시 해당 목록으로 바로 이동하게끔 하는 속성            &lt;select disabled&gt; : 화면에는 보이지만 사용할 수 없도록 만드는 속성            &lt;select multiple&gt; : 여러 값들을 선택할 수 있게끔 하는 속성            &lt;select name=\"\"&gt; : 목록에 이름을 붙이는 속성            &lt;select size=\"\"&gt; : 목록을 펼치기 전에 보여질 목록의 개수를 정하는 속성       입력 :  &lt;form&gt;     &lt;select&gt;         &lt;option&gt;a&lt;/option&gt;         &lt;option&gt;b&lt;/option&gt;         &lt;option&gt;c&lt;/option&gt;         &lt;option&gt;d&lt;/option&gt;     &lt;/select&gt; &lt;/form&gt; &lt;form&gt;     &lt;select autofocus&gt;         &lt;option&gt;e&lt;/option&gt;         &lt;option&gt;f&lt;/option&gt;         &lt;option&gt;g&lt;/option&gt;         &lt;option&gt;h&lt;/option&gt;     &lt;/select&gt; &lt;/form&gt; &lt;form&gt;     &lt;select disabled&gt;         &lt;option&gt;i&lt;/option&gt;         &lt;option&gt;j&lt;/option&gt;         &lt;option&gt;k&lt;/option&gt;         &lt;option&gt;l&lt;/option&gt;     &lt;/select&gt; &lt;/form&gt; &lt;form&gt;     &lt;select multiple&gt;         &lt;option&gt;m&lt;/option&gt;         &lt;option&gt;n&lt;/option&gt;         &lt;option&gt;o&lt;/option&gt;         &lt;option&gt;p&lt;/option&gt;     &lt;/select&gt; &lt;/form&gt; &lt;form&gt;     &lt;select name=\"select box\" size=\"2\"&gt;         &lt;option&gt;q&lt;/option&gt;         &lt;option&gt;r&lt;/option&gt;         &lt;option&gt;s&lt;/option&gt;         &lt;option&gt;t&lt;/option&gt;     &lt;/select&gt; &lt;/form&gt;  출력 :                a         b         c         d                     e         f         g         h                     i         j         k         l                     m         n         o         p                     q         r         s         t        # 멀티미디어 관련 태그   &lt;video&gt; : 비디오를 추가하는 태그            &lt;video source src=\"\"&gt; : 삽입할 비디오의 주소를 입력받는 속성            &lt;video source type=\"\"&gt; : 삽입할 비디오의 타입을 지정하는 속성            &lt;video height=\"\" width=\"\"&gt; : 비디오의 출력 영역 높이와 너비를 지정하는 속성            &lt;video poster=\"\"&gt; : 비디오 포스터 프레임의 주소를 입력받는 속성            &lt;video autoplay=\"\"&gt; : 비디오의 자동 재생 여부를 지정하는 속성            &lt;video control=\"\"&gt; : 비디오의 소리 조절, 시간대 탐색, 일시정지 및 재시작을 할 수 있는 컨트롤러를 생성하는 속성            &lt;video loop=\"\"&gt; : 비디오의 재시작 여부를 지정하는 속성            &lt;video preload=\"\"&gt; : 웹 문서를 열 때 동영상, 메타데이터 로드 여부를 지정하는 속성                      &lt;video preload=\"auto\"&gt; : 웹 문서를 열 때 동영상과 메타데이터 모두 로드하는 preload 변수                        &lt;video preload=\"metadata\"&gt; : 웹 문서를 열 때 메타데이터만 로드하는 preload 변수                        &lt;video preload=\"none\"&gt; : 웹 문서를 열 때 동영상과 메타데이터 모두 로드하지 않는 preload 변수                   &lt;audio&gt; : 오디오를 추가하는 태그            &lt;audio src=\"\"&gt; : 삽입할 오디오의 주소를 입력받는 속성            &lt;audio autoplay=\"\"&gt; : 오디오의 자동 재생 여부를 지정하는 속성            &lt;audio control=\"\"&gt; : 오디오의 소리 조절, 시간대 탐색, 일시정지 및 재시작을 할 수 있는 컨트롤러를 생성하는 속성       # 프레임 관련 태그   &lt;iframe&gt; : 웹 문서 안에 박스형으로 프레임을 넣어 문서 안의 문서를 표현하는 태그            &lt;iframe src=\"\"&gt; : 넣을 웹 문서의 주소을 입력받는 속성            &lt;iframe height=\"\" width=\"\"&gt; : 프레임의 높이, 너비를 지정하는 속성            &lt;iframe sandbox=\"\"&gt; : 샌드박스 정책을 실행하는 속성          샌드박스 정책 : 프로그램 실행 시 격리된 공간인 샌드박스를 제공해 그곳을 벗아난 작업을 하지 않도록 방지하는 기술            &lt;iframe frameborder=\"\"&gt; : 프레임의 테두리 표시 여부를 지정하는 속성            &lt;iframe allowfullscreen=\"\"&gt; : 프레임의 전체 화면 모드 전환 여부를 지정하는 속성       입력 :  &lt;div&gt; \t&lt;iframe \t\tsrc=\"https://github.com/pocj8ur4in\" \t\twidth=\"720\" \t\theight=\"720\" \t\tscrolling=\"no\" \t\tframeborder=\"1\" \t\tallowfullscreen=\"true\" \t\tallow=\" \t\t\tclipboard-write; \t\t\tencrypted-media; \t\t\tpicture-in-picture; \t\t\tweb-share\" \t\tsandbox=\" \t\t\tallow-same-origin \t\t\tallow-popups \t\t\tallow-scripts\" \t\t&gt; \t&lt;/iframe&gt; &lt;/div&gt;   출력 :   \t \t   # 외부 페이지 삽입 관련 태그   &lt;object&gt;, &lt;embed&gt; : 웹 문서나 외부 프로그램을 임베드하는 태그    ","categories": ["Frontend"],
        "tags": ["HTML"],
        "url": "/frontend/html1/",
        "teaser": null
      },{
        "title": "[Algorithm] 알고리즘 (Algorithm)과 복잡도 (Complexity)",
        "excerpt":"이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   알고리즘 (Algorithm) : 어떠한 문제를 해결하기 위한 절차나 방법     입력 : 외부에서 제공된 자료가 존재하거나 존재하지 않아야 함   출력 : 최소 1개 이상의 결과를 가져야 함   알고리즘의 복잡도 (Complexity) : 알고리즘의 성능을 나타내는 척도   공간 복잡도 (Space Complexity) : 문제를 해결할 때 걸리는 공간과 입력의 함수 관계     특정한 크기의 입력에 대해 알고리즘이 얼마나 많은 메모리를 차지하는가?   알고리즘을 위해 필요한 메모리의 양   시간 복잡도 (Time Complexity) : 문제를 해결할 때 걸리는 시간과 입력의 함수 관계     특정한 크기의 입력에 대해 알고리즘이 얼마나 오래 걸리는가?   알고리즘을 위해 필요한 연산의 횟수   만약 프로그램을 비효율적으로 작성하여 시간 제한 (Time Limit)를 넘기면, 시간 초과 (Time Limit Exceeded)로 오답 처리   빅 오 표기법 (Big-O) : 최악의 경우만을 고려해 시간 복잡도를 계산     이를 위해 가장 빠르게 증가할, 즉 가장 높은 차수의 항만을 고려하고 계수와 나머지 차수의 항들은 계산에서 제외   만약 크기 N의 모든 입력에 대한 알고리즘에 필요한 시간이 최대 N의 식을 가진다면, 이 알고리즘의 점근적 시간 복잡도는 O(N)   공통 시간 복잡도 표 (Common Time Complexity Table)   \t \t\t \t\t\t빅 오 표기법 \t\t\t설명 \t\t \t    \t                      O(1)             상수 시간                               O(logN)             로그 시간                               O(N)             선형 시간                               O(N * logN)             로그 선형 시간                               O(N^2)             2차 시간                               O(N^3)             3차 시간                               O(N^4)             4차 시간                    만약 시간 제한이 1초인 문제를 해결할 때, 시간 복잡도 …인 알고리즘을 설계해야 한다.         N의 범위가 500인 경우 : O(N^3)     N의 범위가 2,000인 경우 : O(N^2)     N의 범위가 100,000인 경우 : O(N * logN)     N의 범위가 10,000,000인 경우 : O(N^3)              수행 시간 측정 Code by Python       import time start_time = time.time() # 측정 시작 ... end_time = time.time() # 측정 종료 print(end_time - start_time) # 수행 시간 출력  ","categories": ["Algorithm"],
        "tags": ["Python"],
        "url": "/algorithm/algorithm1/",
        "teaser": null
      },{
        "title": "[Algorithm] 구현 알고리즘 (Implementation Algorithm)",
        "excerpt":"이 항목은 현재 작성중입니다. &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   구현 알고리즘 (Implementation Algorithm)     구현 : 알고리즘을 소스 코드로 바꾸는 과정   구현 알고리즘은 결국 모든 범위의 문제 유형을 포괄하는 개념   문제 해결 분야에서의 구현 유형은 ‘풀이를 떠오르는 것은 쉽지만 소스 코드로 옮기기 어려운 문제’를 의미   대체로 사소한 조건 설정이 많은 문제일수록 구현이 까다로움   Python으로 구현 시 고려해야 할 제약 사항   Python에서의 변수 표현 범위     C/C++/JAVA와 달리, Python은 프로그래머가 직접 정수형 변수 자료형을 지정할 필요가 없고 아주 큰 수의 연산 역시 기본으로 지원   실수형 변수는 유효 숫자에 따라 연산하기에 원하는 결과가 나오지 않을 수 있음   Python에서의 list 크기     Python에서 여러 개의 변수를 사용할 때 list를 이용하는데, 이때 제한된 메모리를 초과할 수 있음    \t \t\t \t\t\tlist의 길이 \t\t\t메모리 사용량 \t\t \t    \t                      1,000             약 4KB                               1,000,000             약 4MB                               1,000,000,000             약 40MB                 문제 : 상하좌우  ","categories": ["Algorithm"],
        "tags": ["Python"],
        "url": "/algorithm/algorithm2/",
        "teaser": null
      },{
        "title": "[macOS] 홈브류 (Homebrew)",
        "excerpt":"이 항목은 macOS 기반으로 작성되었습니다. &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   Homebrew      Ruby로 작성된 macOS용 패키지 관리 어플리케이션 (Package Management Application)   커맨드라인 도구나 시스템 패키지 설치에 사용   cask Package : GUI 어플리케이션 설치도 가능하게 해주는 Homebrew 확장 패키지   mas Package : App Store 어플리케이션 설치도 가능하게 해주는 Homebrew 확장 패키지   Homebrew 설치     터미널 실행 후 다음 명령어를 입력   /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"      터미널 창에 다음 명령어를 입력해 Homebrew가 정상적으로 설치되었는지 확인   brew --version // \"Homebrew X.X.X\" 출력 : 정상 설치 // \"zsh: command not found: brew\" 출력 : 설치 오류   cask Package 설치     터미널 창에 다음 명령어를 입력   brew install cask      터미널 창에 다음 명령어를 입력해 cask Package가 정상적으로 설치되었는지 확인   brew list   mas Package 설치     터미널 창에 다음 명령어를 입력   brew install mas      터미널 창에 다음 명령어를 입력해 mas Package가 정상적으로 설치되었는지 확인   brew list   Homebrew 명령어                              Homebrew 명령어 이름             Homebrew 명령어 설명                                         brew --version             Homebrew의 버전 정보 확인                               brew doctor             Homebrew 설치 환경을 검사                               brew update             Homebrew를 최신 버전으로 업데이트                               brew list             설치된 패키지를 확인                               brew upgrade             설치된 모든 패키지를 업데이트                               brew search (패키지명)             해당 패키지가 설치되어 있는지 검색                               brew install (패키지명)             해당 패키지를 최신 버전으로 설치                               brew info (패키지명)             해당 패키지의 정보 확인                               brew upgrade (패키지명)             해당 패키지를 업데이트                               brew uninstall (패키지명)             해당 패키지를 삭제                               brew outdated             최신 버전이 존재하는 패키지 확인                               brew cleanup (패키지명)             해당 패키지의 구버전에 해당하는 파일 삭제                 cask 명령어     기존의 brew 명령어 뒤에 --cask를 추가   mas 명령어                              mas 명령어 이름             mas 명령어 설명                                         mas version             mas의 버전 정보 확인                               mas list             mas로 설치된 패키지 확인                               mas upgrade             mas로 설치된 모든 패키지를 최신 버전으로 업데이트                               mas search (검색어)             앱스토어에서 해당 검색어와 일치하는 패키지 검색                               mas install (패키지 ID)             해당되는 ID를 가진 패키지를 최신 버전으로 설치                               mas upgrade (패키지 ID)             해당되는 ID를 가진 패키지를 최신 버전으로 업데이트                               mas uninstall (패키지명)             mas로 설치된 해당 패키지를 삭제                               mas outdated             mas로 설치된 패키지 중 최신 버전이 존재하는 패키지 확인                 Homebrew 삭제     터미널 실행 후 다음 명령어를 입력   // Homebrew로 설치한 모든 package를 일괄 삭제 brew remove --force --ignore-dependencies $(brew list)  // Homebrew 삭제 ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)\"      터미널 창에 다음 명령어를 입력해 Homebrew가 정상적으로 삭제되었는지 확인   brew --version // \"zsh: command not found: brew\" 출력 : 정상 삭제 // \"Homebrew X.X.X\" 출력 : 삭제 오류  ","categories": ["Mac"],
        "tags": [],
        "url": "/mac/homebrew1/",
        "teaser": null
      },{
        "title": "[F/E] CSS",
        "excerpt":"이 항목은 현재 작성중입니다. &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   CSS (Cascading Style Sheet) : HTML 문서가 웹 사이트에 표현되는 방법을 정하는 스타일 시트 언어     레이아웃 및 디자인 정보로 인해 구조화된 HTML을 만드는 데에 어려움을 겪자 디자인적 요소들을 분리하기 위해 사용   CSS 선택자 {     CSS 속성 : CSS 값; }           CSS 선택자 : 어떤 것을 꾸밀지?     CSS 속성 : 어떤 모양을 꾸밀지?     CSS 값 : 어떻게 꾸밀지?      # CSS를 HTML에 적용시키는 방법   - Inline Style Sheet : HTML 태그의 속성 style=\"\"에 CSS 코드를 넣는 방법    입력 :   &lt;p style=\"color: blue\"&gt;     hello world &lt;/p&gt;   출력 :       hello world    - Internal Style Sheet : HTML 문서 내 태그 &lt;style&gt;&lt;/style&gt;에 CSS 코드를 넣는 방법    &lt;head&gt;     &lt;style&gt;         p {             color: blue;         }     &lt;/style&gt; &lt;/head&gt; &lt;body&gt;     &lt;p style=\"color: blue\"&gt;         hello world     &lt;/p&gt; &lt;/body&gt;   - Linking Style Sheet : 별도의 .CSS 파일을 만들고 이를 HTML 문서와 연결하는 방법    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;   CSS 선언 (CSS declaration) : CSS 속성과 CSS 값을 지정       세미클론 (;)으로 선언을 구분해 여러 번의 선언 가능   CSS 선택자 {     CSS 속성1 : CSS 값1;     CSS 속성2 : CSS 값2; }      작은따옴표 ('') 혹은 큰따옴표 (\"\")으로 값의 공백 처리   CSS 선택자 {     CSS 속성1 : 'CSS 값1';     CSS 속성2 : \"CSS 값2\"; }      값은 속성을 여러 번 선언하였다면, 나중에 설정된 값이 적용   CSS 선택자 {     CSS 속성1 : CSS 값1;     CSS 속성1 : CSS 값2; } /* CSS 속성 1에는 CSS 값2가 적용된다. */      !important : 값은 속성을 여러 번 선언하였다면, 나중에 설정된 값이 아닌 CSS 값 뒤에 !important가 사용된 것을 우선시   CSS 선택자 {     CSS 속성1 : CSS 값1 !important;     CSS 속성1 : CSS 값2; } /* CSS 속성 1에는 CSS 값1가 적용된다. */   CSS 주석 : /**/    /* (주석 1) */  /* (주석 2) */  /*/*(주석 3)*/*/   CSS 변수 (CSS variables) : CSS 변수를 선언할 경우, 변수를 정의한 요소와 하위 요소에서 CSS 변수를 사용 가능    --variable-name: value;  :root : CSS 변수를 전역 변수로 정의    :root {        --variable-name: value; }   CSS 상속 (CSS inheritance) : 부모 태그의 상속하는 속성은 자식 태그에 영향을 미침            부모-자식 관계 : 어떤 태그 안에 다른 태그가 있는 관계       &lt;p&gt;     &lt;span&gt;         &lt;span&gt; 태그는 &lt;p&gt; 태그의 자식         &lt;p&gt; 태그는 &lt;span&gt; 태그의 부모     &lt;/span&gt; &lt;/p&gt;           형제 관계 : 어떤 태그 안에 같이 있는 관계       &lt;p&gt;     &lt;span&gt;         &lt;span&gt; 태그는 &lt;img&gt; 태그와 형제     &lt;/span&gt;     &lt;img&gt; &lt;/p&gt;           캐스케이딩 (Cascading) : 부모 태그에서 정의된 속성은 자식 태그로 상속, 자식 태그에 정의된 속성은 변경 가능       입력 :  &lt;p style=\"color: red\"&gt;     &lt;span style=\"color: blue\"&gt;         - CSS 우선순위 : span의 font-color 속성이 p의 font-color 속성보다 높다.     &lt;/span&gt; &lt;/p&gt;    출력 :                CSS 우선순위 : span의 font-color 속성이 p의 font-color 속성보다 높다.         CSS 선택자 (CSS Selector) : HTML 문서에 스타일을 입힐 요소를 선택하는 문자    CSS 선택자 {     CSS 속성 : CSS 값; }          여러 종류의 선택자를 중첩 가능 (p.span)     여러 종류의 선택자를 space 키로 구분해 동시에 선택 가능  (p.span p.img)              전체 선택자 * : 모든 요소를 선택하는 선택자       * {   color: blue; }           태그 선택자 tag : 해당 태그의 요소를 선택하는 선택자       tag {   color: aqua; }           아이디 선택자 #id : 해당 아이디의 요소를 선택하는 선택자       #tag {   color: red; }           클래스 선택자 .class : 해당 클래스의 요소를 선택하는 선택자       .tag {   color: green; }      아이디 (id)와 클래스 (class)의 차이점 : 클래스는 한 문서에 여러 개를 사용 가능하나, 아이디는 한 문서에 한번만 사용 가능            후손 선택자 (selector1)(selector2) : 해당 선택자의 모든 하위 요소 중 하나를 지정해 선택하는 선택자       div tag{      color: yellow; } ... &lt;div&gt;     &lt;tag&gt;         hello world     &lt;/tag&gt; &lt;/div&gt; &lt;div&gt;     &lt;span&gt;         &lt;tag&gt;             hello world         &lt;/tag&gt;     &lt;/span&gt; &lt;/div&gt;           자손 선택자 (selector1)&gt;(selector2) : 해당 선택자의 자식 요소 중 하나를 지정해 선택하는 선택자       div &gt; tag{      color: purple; } ... &lt;div&gt;     &lt;tag&gt;         hello world     &lt;/tag&gt; &lt;/div&gt;           형제 선택자 (selector1)~(selector2) : 해당 선택자의 형제 요소 중 하나를 지정해 선택하는 선택자       div ~ tag{      color: pink; } ... &lt;div&gt;     hello world &lt;/div&gt; &lt;tag&gt;     ! &lt;/tag&gt;           인접 형제 선택자 (selector1)+(selector2) : 선택자의 형제 중 바로 다음에 오는 선택자를 지정해 선택하는 선택자       div + tag{      color: gray; } ... &lt;div&gt;     hello world &lt;/div&gt; &lt;tag&gt;     ? &lt;/tag&gt; &lt;tag&gt;     ! &lt;/tag&gt; /* 첫번째 형제 요소인 \"?\"가 회색으로 출력 */           속성 선택자 [속성] : 태그에 해당 속성이 명시되어 있는 요소들을 선택하는 선택자       tag[attributes]{      color: white; } ... &lt;tag attributes=\"true\"&gt;     hello world &lt;/tag&gt;           속성 선택자 [속성=문자열] : 태그에 해당 속성이 명시되어 있고 그 값이 문자열인 요소들을 선택하는 선택자       tag[attributes=\"attr\"]{      color: yellow; } ... &lt;tag attributes=\"attr\"&gt;     hello world &lt;/tag&gt;   가상 요소 선택자 (Pseudo-elements Selector) : 요소의 특정 부분을 선택하는 선택자            ::first-line : 요소의 첫번째 줄을 선택하는 선택자       tag::first-line {   color: orange; }   CSS 속성 (CSS attributes) : 웹 사이트에 표현되는 방법을 지정하는 요소   CSS 속성 : CSS 값;   # 폰트 (font) 관련 속성   color: : 색상을 지정하는 속성                                                color: 속성                 설명                                                             기본값                 #000000                                           상속 여부                 Y                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  color: 값                                     설명                                                                                                                                                                 color                                     색상 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"color:red\"&gt;     hello world &lt;/div&gt;   출력 :       hello world   font-size: : 글자 크기를 지정하는 속성                                                font-size: 속성                 설명                                                             기본값                 medium                                           상속 여부                 Y                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  font-size: 값                                     설명                                                                                                                                                                 medium                                     웹 브라우저에서 정한 기본값                                                                                                       xx-small, x-small, small, large, x-large, xx-large                                     기본값에 대한 상대적인 크기                                                                                                       smaller, larger                                     부모 요소의 글자 크기에 대한 상대적인 크기                                                                                                       px                                     글자 크기를 직접 지정                                                                                                       %, em                                     부모 요소의 글자 크기에 대한 상대적인 글자 크기의 비율을 직접 지정                                                                                                       rem                                     최상위 요소의 글자 크기에 대한 상대적인 글자 크기의 비율을 직접 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"font-size: xx-small\"&gt;xx-small&lt;/div&gt; &lt;div style=\"font-size: x-small\"&gt;x-small&lt;/div&gt; &lt;div style=\"font-size: small\"&gt;small&lt;/div&gt; &lt;div style=\"font-size: medium\"&gt;medium&lt;/div&gt; &lt;div style=\"font-size: large\"&gt;large&lt;/div&gt; &lt;div style=\"font-size: x-large\"&gt;x-large&lt;/div&gt; &lt;div style=\"font-size: xx-large\"&gt;xx-large&lt;/div&gt;   출력 :       xx-small     x-small     small     medium     large     x-large     xx-large    입력 :   &lt;div style=\"font-size: smaller\"&gt;smaller&lt;/div&gt; &lt;div&gt;medium&lt;/div&gt; &lt;div style=\"font-size: larger\"&gt;larger&lt;/div&gt;   출력 :       smaller     medium     larger    입력 :   &lt;div style=\"font-size: 10px\"&gt;     10px     &lt;i style=\"font-size: 200%;\"&gt;         20px         &lt;span style=\"font-size: 0.8em\"&gt;             16px             &lt;b style=\"font-size: 1rem\"&gt;                 1rem             &lt;/b&gt;         &lt;/span&gt;     &lt;/i&gt; &lt;/div&gt;   출력 :       10px              20px                      16px                              1rem                              font-family: : 글꼴을 지정하는 속성                                                font-family: 속성                 설명                                                             기본값                 웹 브라우저의 기본 글꼴                                           상속 여부                 Y                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  font-family: 값                                     설명                                                                                                                                                                 font                                     글꼴 이름 / 글꼴 유형                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           &lt;div style=\"font-family: (지정할 글꼴);\"&gt;     지정된 글꼴로 출력합니다. &lt;/div&gt;   &lt;div style=\"font-family: (지정할 글꼴1), (지정할 글꼴2);\"&gt;     지정된 글꼴1로 출력하되 (i) 해당 글꼴이 존재하지 않는다면 (ii) 표현할 수 없다면, 지정된 글꼴2로 출력합니다. &lt;/div&gt;   font-weight: : 글자의 굵기 정도를 지정하는 속성       나타낼 수 있는 굵기의 정도는 글꼴마다 다름                                                font-weight: 속성                 설명                                                             기본값                 normal                                           상속 여부                 Y                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  font-weight: 값                                     설명                                                                                                                                                                 normal                                     보통 굵기 (400)                                                                                                       bold                                     굵은 굵기 (700)                                                                                                       bolder                                     상속된 값보다 굵은 크기                                                                                                       lighter                                     상속된 값보다 얇은 크기                                                                                                       number                                     굵기 정도를 직접 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"font-weight: normal\"&gt;     &lt;div style=\"font-weight: lighter\"&gt;normal-lighter&lt;/div&gt;     normal     &lt;div style=\"font-weight: bolder\"&gt;normal-bolder&lt;/div&gt; &lt;/div&gt; &lt;div style=\"font-weight: bold\"&gt;     &lt;div style=\"font-weight: lighter\"&gt;bold-lighter&lt;/div&gt;     bold     &lt;div style=\"font-weight: bolder\"&gt;bold-bolder&lt;/div&gt; &lt;/div&gt;   출력 :                normal-lighter         normal         normal-bolder                   bold-lighter         bold         bold-bolder        # 텍스트 (text) 관련 속성   text-align: : 텍스트를 정렬하는 속성                                                text-align: 문법                 설명                                                             left                 왼쪽 정렬                                           right                 오른쪽 정렬                                           center                 가운데 정렬                                           justify                 양쪽 정렬                                           initial                 현재의 속성값을 기본값으로 지정                                           inherit                 부모 요소의 속성값 상속                              입력 :   &lt;div style=\"text-align: left;\"&gt;바다는 크레파스보다 진한 푸르고 육중한 비늘을 무겁게 뒤채면서, 숨을 쉰다.&lt;/div&gt; &lt;div style=\"text-align: right;\"&gt;중립국으로 가는 석방 포로를 실은 인도 배 타고르호는, 흰 페인트로 말쑥하게 칠한 삼천 톤의 몸을 떨면서, 물건처럼 빼곡이 들어찬 동지나 바다의 훈김을 헤치며 미끄려져 간다.&lt;/div&gt; &lt;div style=\"text-align: center;\"&gt;석방 포로 이명준(李明俊)은, 오른편의 곧장 갑판으로 통한 사닥다리를 타고 내려가, 배 뒤쪽 난간에 가서, 거기에 기대어 선다.&lt;/div&gt; &lt;div style=\"text-align: justify;\"&gt;담배를 꺼내 물고 라이터를 켜댔으나 바람에 이내 꺼지고 하여, 몇 번이나 그르친 끝에, 그 자리에 쭈그리고 앉아서 오른팔로 얼굴을 가리고 간신히 댕긴다.&lt;/div&gt;   출력 :       바다는 크레파스보다 진한 푸르고 육중한 비늘을 무겁게 뒤채면서, 숨을 쉰다.     중립국으로 가는 석방 포로를 실은 인도 배 타고르호는, 흰 페인트로 말쑥하게 칠한 삼천 톤의 몸을 떨면서, 물건처럼 빼곡이 들어찬 동지나 바다의 훈김을 헤치며 미끄려져 간다.     석방 포로 이명준(李明俊)은, 오른편의 곧장 갑판으로 통한 사닥다리를 타고 내려가, 배 뒤쪽 난간에 가서, 거기에 기대어 선다.     담배를 꺼내 물고 라이터를 켜댔으나 바람에 이내 꺼지고 하여, 몇 번이나 그르친 끝에, 그 자리에 쭈그리고 앉아서 오른팔로 얼굴을 가리고 간신히 댕긴다.   text-decoration: : 텍스트을 꾸미는 선을 지정하는 속성                                                text-decoration: 속성                 설명                                                             기본값                 none                                           상속 여부                 N                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  text-decoration: 값                                     설명                                                                                                                                                                 none                                     선을 만들지 않음                                                                                                       line-through                                     취소선 생성                                                                                                       overline                                     윗줄 생성                                                                                                       underline                                     밑줄 생성                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"text-decoration: none\"&gt;none&lt;/div&gt; &lt;div style=\"text-decoration: line-through\"&gt;line-through&lt;/div&gt; &lt;div style=\"text-decoration: overline\"&gt;overline&lt;/div&gt; &lt;div style=\"text-decoration: underline\"&gt;underline&lt;/div&gt; &lt;div style=\"text-decoration: line-through overline underline\"&gt;text-decoration&lt;/div&gt;   출력 :       none     line-through     overline     underline     text-decoration   columns: : 여러 개의 문단을 만드는 속성                                                columns: 속성                 설명                                                             기본값                 auto                                           속성값                 문단의 최대 개수 or 문단의 최소 가로 길이                               입력 :   &lt;div style=\"columns: 3;\"&gt;자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.&lt;/div&gt;   출력 :       자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.    입력 :   &lt;div style=\"columns: 150px;\"&gt;자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.&lt;/div&gt;   출력 :       자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.   # 박스 모델 (Box Model) : 모든 HTML 엘리멘트들은 박스 모양으로 구성되어 있음                 마진 영역 (Margin Area)                      테두리 영역 (Border Area)                              패딩 영역 (Padding Area)                                      컨텐츠 영역 (Content Area)                                               margin 속성 : 마진에 값을 부여하는 속성    .box {     margin: xx yy zz ww;     /* xx는 위쪽 마진, yy는 오른쪽 마진, zz는 아랫쪽 마진, ww는 왼쪽 마진 */     margin-top: xx;     margin-right: xx;     margin-bottom: xx;     margin-left: xx; }   padding 속성 : 패딩에 값을 부여하는 속성    .box {     padding: xx yy zz ww;     /* xx는 위쪽 패딩, yy는 오른쪽 패딩, zz는 아랫쪽 패딩, ww는 왼쪽 패딩 */     padding-top: xx;     padding-right: xx;     padding-bottom: xx;     padding-left: xx; }   border 속성 : 테두리에 값을 부여하는 속성                                                border: 속성                 설명                                                             기본값                 medium, none, color                                           상속 여부                 N                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  border: 값                                     설명                                                                                                                                                                 border-width                                                                                                                                                                                                                                 border-width: 값                                                     테두리의 두께 정도 지정                                                                                                                                                                                                                                                 medium                                                     기본값                                                                                                                                                       thick                                                     기본값보다 굵게                                                                                                                                                       thin                                                     기본값보다 얇게                                                                                                                                                       %, px, em, rem                                                     직접 테두리의 두께 정도 지정                                                                                                                                                       initial                                                     현재의 속성값을 기본값으로 지정                                                                                                                                                       inherit                                                     부모 요소의 속성값 상속                                                                                                                                                                                                                                                                                   border-style                                                                                                                                                                                                                                 border-style: 값                                                     테두리의 모양 지정                                                                                                                                                                                                                                                 none                                                     테두리를 생성하지 않음 (기본값)                                                                                                                                                       dashed, dotted, double, groove, hidden, inset,  outset, ridge, solid                                                     여러 모양의 테두리를 생성                                                                                                                                                       initial                                                     현재의 속성값을 기본값으로 지정                                                                                                                                                       inherit                                                     부모 요소의 속성값 상속                                                                                                                                                                                                                                                                                   border-color                                     테두리의 색상 지정                                                                                                       border-radius                                     %, px, em, rem 등으로 테두리의 모서리에 대한 둥근 정도 지정                                                                                      top-left-x                                             top-right-x                                             bottom-right-x                                             bottom-left-x                                             top-left-y                                             top-right-y                                             bottom-right-y                                             bottom-left-y                                                                                                                                                                                     initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"     background-color: black;     text-align: center;     margin-left: auto;     margin-right: auto;     padding-top: 2%;     padding-bottom: 2%;     \"&gt;     &lt;div style=\"         border: dashed 5px red;         margin-left: 5%;         margin-right: 5%;         border-radius: 25%;         padding-bottom: inherit;\"&gt;     dashed 5px red (border-radius: 25%)         &lt;div style=\"             border: dotted 3px blue;             margin-left: inherit;             margin-right: inherit;             padding-bottom: inherit;\"&gt;         dotted 3px blue             &lt;div style=\"                 border: double 7px green;                 margin-left: inherit;                 margin-right: inherit;                 padding-bottom: inherit;\"&gt;             double 7px green                 &lt;div style=\"                     border: solid 3px gray;                     margin-left: inherit;                     margin-right: inherit;                     padding-bottom: inherit;\"&gt;                     solid 3px gray                 &lt;/div&gt;             &lt;/div&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt;             dashed 5px red (border-radius: 25%)                  dotted 3px blue                          double 7px green                                      solid 3px gray                                               width, height 속성 : 박스의 가로, 세로 길이를 지정하는 속성    &lt;div style=\"     postion: relative;     background-color: black;     margin-left: auto;     margin-right: auto;     width: 200px;     height: 200px;\"&gt;     &lt;div style=\"         postion: absolute;         background-color: white;         margin-left: auto;         margin-right: auto;         width: 70%;         height: 70%;\"&gt;     &lt;/div&gt; &lt;/div&gt;                box-sizing 속성 : 박스 크기의 기준을 지정하는 속성                                                box-sizing: 속성                 설명                                                             기본값                 content-box                                           상속 여부                 N                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  box-sizing: 값                                     설명                                                                                                                                                                 content-box                                     컨텐츠 영역을 기준으로 지정                                                                                                       border-box                                     테두리 영역을 기준으로 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           .cb {     box-sizing: content-box; } .bb {     box-sizing: border-box; } .iib {     box-sizing: initial; } .ihb {     box-sizing: inherit; }   # 배경 (background) 관련 속성   background-color: : 배경색을 지정하는 속성                                                background-color: 속성                 설명                                                             기본값                 transparent                                           상속 여부                 N                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  background-color: 값                                     설명                                                                                                                                                                 transparent                                     배경색 없음                                                                                                       color                                     배경색 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"     postion: relative;     background-color: black;     width: 200px;     height: 200px;\"&gt;     &lt;div style=\"         postion: absolute;         background-color: white;         margin-left: auto;         margin-right: auto;         width: 70%;         height: 70%;\"&gt;         &lt;div style=\"             postion: absolute;             background-color: black;             margin-left: auto;             margin-right: auto;             width: 70%;             height: 70%;\"&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt;   출력 :                                 background-image: : 배경 이미지를 지정하는 속성                                                background-image: 속성                 설명                                                             기본값                 none                                           상속 여부                 N                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  background-image: 값                                     설명                                                                                                                                                                 none                                     배경 이미지 사용 안함                                                                                                       url(\"\")                                     배경 이미지 URL 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"     postion: relative;     background-color: black;     width: 200px;     height: 200px;\"&gt;     &lt;div style=\"         background-image: url(\"images/image.png\");     \"&gt; &lt;/div&gt;   background-image: : 배경 이미지를 지정하는 속성                                                background-image: 속성                 설명                                                             기본값                 none                                           상속 여부                 N                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  background-image: 값                                     설명                                                                                                                                                                 none                                     배경 이미지 사용 안함                                                                                                       url(\"\")                                     배경 이미지 URL 지정                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           입력 :   &lt;div style=\"     postion: relative;     background-color: black;     width: 200px;     height: 200px;\"&gt;     &lt;div style=\"         background-image: url(\"images/image.png\");     \"&gt; &lt;/div&gt;   background-attachment: : 배경 이미지의 스크롤 여부를 지정하는 속성                                                background-attachment: 속성                 설명                                                             기본값                 scroll                                           상속 여부                 N                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  background-attachment: 값                                     설명                                                                                                                                                                 scroll                                     내용을 스크롤하면 배경 이미지는 스크롤되지 않음                                                                                                       fixed                                     배경 이미지가 움직이지 않음                                                                                                       local                                     내용을 스크롤하면 배경 이미지는 스크롤                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           background-position: : 배경 이미지의 위치를 지정하는 속성                                                background-position: 속성                 설명                                                             기본값                 0% 0%                                           상속 여부                 N                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  background-position: 값                                     설명                                                                                                                                                                 x y                                     가로와 세로 위치 지정 (left-right, center, top-bottom, %, length)                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           background-size: : 배경 이미지의 크기를 지정하는 속성                                                background-size: 속성                 설명                                                             기본값                 auto                                           상속 여부                 N                                           애니메이션 여부                 Y                                           문법                                                                                                                                                                  background-size: 값                                     설명                                                                                                                                                                 auto                                     이미지 크기 유지                                                                                                       length                                     배경 이미지의 가로와 세로 크기나 백분율을 직접 지정                                                                                                       cover                                     가로/세로 비율을 유지하면서, 배경을 다 채울 수 있도록 이미지 조절                                                                                                       contain                                     가로/세로 비율을 유지하면서, 배경을 벗어나지 않도록 이미지 조절                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           overflow: : 컨텐츠가 요소의 크기를 벗어날 때의 처리 방법을 지정하는 속성                                                overflow: 속성                 설명                                                             기본값                 visible                                           상속 여부                 N                                           애니메이션 여부                 N                                           문법                                                                                                                                                                  overflow: 값                                     설명                                                                                                                                                                 visible                                     박스를 넘어가도 내용을 표시                                                                                                       hidden                                     박스를 넘어간 부분은 표시하지 않음                                                                                                       scroll                                     무조건 스크롤바 표시                                                                                                       auto                                     박스를 넘어가면 스크롤바 표시                                                                                                       initial                                     현재의 속성값을 기본값으로 지정                                                                                                       inherit                                     부모 요소의 속성값 상속                                                                                                                                                           z-index : 형제 요소들이 중첩될 때 우선순위를 지정하는 속성 (숫자가 크면 위로)   # 레이아웃 (layout)   고정형 레이아웃     margin: : 선택한 요소를 가운데에 정렬   float:, clear: : 다단 레이아웃 생성   반응형 레이아웃     @media : 일정 조건일 때 특정한 작업 수행   @media ( max-width: 1280px ) {   body { color: blue; } }      모바일 우선 (Mobile First) : 작은 가로폭부터 큰 가로폭 순서로      기본 모양이 A, 768px 이상일 때는 B, 1024px 이상일 때는 C    A @media ( min-width: 768px ) {   B } @media ( min-width: 1024px ) {   C }         데스크톱 우선 (Desktop First) : 큰 가로폭부터 작은 가로폭 순서로      기본 모양이 A, 1023px 이하일 때는 B, 767px 이하일 때는 C    A @media ( max-width: 1023px ) {   B } @media ( max-width: 767px ) {   C }      # 애니메이션 (animation) 관련 속성    animation: : 요소에 애니메이션의 여러 속성값을 지정해 애니메이션 효과를 넣는 속성  animation:    (@keyframes)    (animation-name)   (animation-duration)   (animation-timing-function)   (animation-delay)   (animation-iteration-count)   (animation-direction)   (animation-fill-mode)   (animation-play-state);   @keyframes [이름] {...} : 애니메이션에 이름을 붙이고, 어떤 모양에서 어떤 모양으로 바꿀지 지정함       0% {} : 시작할 때 요소의 모양 지정   n% {} : n%일 때 요소의 모양 지정   100% {} : 끝날 때 요소의 모양 지정   @keyframes name {   0% { ... }   n% { ... }   100% { ... } }   animation-name: : 어떤 이름의 @keyframes를 사용할지 지정하는 속성    animation-name: (이름);   animation-duration: : 애니메이션의 총 시간을 지정하는 속성       time: 애니메이션이 진행될 시간 지정 (단위: s 또는 ms)   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   animation-duration: 3s;   animation-timing-function: : 애니메이션의 진행 속도를 지정하는 속성       cubic-bezier(n,n,n,n) 함수 : 애니메이션을 3차원 베지에 곡선에 맞게 표현            linear : cubic-bezier(0,0,1,1) 애니메이션 효과가 처음부터 끝까지 일정한 속도로 진행       ease : 기본값. cubic-bezier(0.25,0.1,0.25,1) 애니메이션 효과가 천천히 시작되어 빨라졌다가 다시 느려짐       ease-in : cubic-bezier(0.42,0,1,1) 애니메이션 효과가 천천히 시작됨       ease-out : cubic-bezier(0,0,0.58,1) 애니메이션 효과가 천천히 끝남       ease-in-out : cubic-bezier(0.42,0,0.58,1) 애니메이션 효과가 천천히 시작되어 천천히 끝남           steps(1,...) 함수 : 애니메이션을 스텝에 맞게 끝어서 표현            step-start : steps(1,start) 시작하는 지점에 스텝       step-end : steps(1,end) 끝나는 지점에 스텝           initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   animation-timing-function: linear;   animation-delay: : 애니메이션이 시작하기 전에 대기하는 시간을 지정하는 속성       time: 애니메이션이 진행될 시간 지정 (단위: s 또는 ms)   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   animation-delay: 1s;   animation-iteration-count: : 애니메이션이 반복하는 횟수를 지정하는 속성    animation-iteration-count: 1;   animation-direction: : 애니메이션이 진행하는 방향을 지정하는 속성       normal : 기본값. 정해진 순서로 진행   reverse : 반대 순서로 진행   alternate : 정해진 순서로 진행했다가 반대 순서로 진행   alternate-reverse : 반대 순서로 진행햇다가 정해진 순서로 진행   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   animation-direction: normal;   animation-fill-mode: : 애니메이션을 종료한 후 어떤 상태로 만들지 지정하는 속성       none, forwards, backwards, both, initial, inherit   animation-fill-mode: forwards;   animation-play-state: : 애니메이션의 진행 여부를 지정하는 속성       running : 애니메이션을 진행함   paused : 애니메이션을 진행하지 않음   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   animation-play-state: running;   transform: : 요소의 형태를 변화시키는 속성    transform: rotate() : 요소를 회전시키는 속성       angle에는 각의 크기를 입력 (단위: deg, turn)   transform: rotate( angle ) transform: rotateX( angle ) // 가로를 축으로 회전 transform: rotateY( angle ) // 세로를 축으로 회전   transform: translate() : 요소를 이동시키는 속성    transform: translate( Xpx, Ypx ) transform: translateX( px ) // 가로축을 기준으로 이동 transform: translateY( px ) // 세로축을 기준으로 이동   transform: scale() : 요소의 크기를 변화시키는 속성    transform: scale( X ) // 가로와 세로를 모두 X배만큼 확대 transform: scale( X, Y ) // 가로로 X배만큼 확대, 세로로 Y배만큼 확대 transform: scaleX( X ) // 가로로 X배만큼 확대 transform: scaleY( Y ) // 세로로 Y배만큼 확대   transform: skew() : 요소를 비트는 속성    transform: skewX( 15deg ) // 가로 뱡향으로 15도만큼 비틈 transform: skewY( 30deg ) // 세로 뱡향으로 30도만큼 비틈 transform: skewX( 45deg, 60deg ) // 가로 뱡향으로 45도만큼, 세로 방향으로 60도만큼 비틈   transition: : 요소에 트랜지션의 여러 속성값을 지정해 트랜지션 효과를 넣는 속성    transition:    (transition-property)    (transition-timing-function)   (transition-duration)   (transition-delay);   transition-property: : 트랜지션의 진행 속도를 지정하는 속성       none : 모든 속성에 적용하지 않음   all : 모든 속성에 적용   property : 속성을 지정   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   transition-timing-function: : 트랜지션의 진행 속도를 지정하는 속성       cubic-bezier(n,n,n,n) 함수 : 트랜지션을 3차원 베지에 곡선에 맞게 표현            linear : cubic-bezier(0,0,1,1) 트랜지션 효과가 처음부터 끝까지 일정한 속도로 진행       ease : 기본값. cubic-bezier(0.25,0.1,0.25,1) 트랜지션 효과가 천천히 시작되어 빨라졌다가 다시 느려짐       ease-in : cubic-bezier(0.42,0,1,1) 트랜지션 효과가 천천히 시작됨       ease-out : cubic-bezier(0,0,0.58,1) 트랜지션 효과가 천천히 끝남       ease-in-out : cubic-bezier(0.42,0,0.58,1) 트랜지션 효과가 천천히 시작되어 천천히 끝남           steps(1,...) 함수 : 트랜지션을 스텝에 맞게 끝어서 표현            step-start : steps(1,start) 시작하는 지점에 스텝       step-end : steps(1,end) 끝나는 지점에 스텝           initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   transition-timing-function: linear;   transition-duration: : 트랜지션의 총 시간을 지정하는 속성       time: 트랜지션이 진행될 시간 지정 (단위: s 또는 ms)   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   transition-duration: 3s;   transition-delay: : 트랜지션이 시작하기 전에 대기하는 시간을 지정하는 속성       time: 트랜지션이 진행될 시간 지정 (단위: s 또는 ms)   initial : 현재의 속성값을 기본값으로 지정   inherit : 부모 요소의 속성값 상속   transition-delay: 1s;  ","categories": ["Frontend"],
        "tags": ["HTML","CSS"],
        "url": "/frontend/css1/",
        "teaser": null
      },{
        "title": "[Git] Minimal Mistakes으로 Github Blog 만들기",
        "excerpt":"이 항목은 macOS 기반으로 작성되었습니다. &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   기본 환경 설정   Ruby 설치     macOS에서는 Ruby가 기본적으로 설치되어 있음   터미널 실행 후 다음 명령어를 입력해 설치 여부 확인   ruby -v // ruby X.X.X 출력 : 정상 설치 // \"zsh: command not found: ruby\" 출력 : 설치 오류   Jekyll 설치     터미널 창에 다음 명령어를 입력   gem install jekyll      터미널 창에 다음 명령어를 입력해 Jekyll가 정상적으로 설치되었는지 확인   jekyll -v // jekyll X.X.X 출력 : 정상 설치 // \"zsh: command not found: jekyll\" 출력 : 설치 오류   Minimal Mistakes Themes 설치     minimal-mistakes Github 페이지에서 .zip 파일 다운로드 후 압축 해제   아래 사진을 참고하여, 필요한 파일 및 폴더만 남기고 나머지는 삭제 (기존에 존재하지 않는 _post와 _page 디렉토리는 생성)      Github Repository 생성     Github에 (Github ID).github.io의 형식으로 Repository 생성         지금까지 정리한 minimal-mistakes 폴더를 github에 push            블로그 주소 : https://(Github ID).github.io       https://github.com/(Github ID)/(Github ID).github.io/actions을 통해 블로그 빌드 기록 확인 가능           로컬 서버 설정 및 실행     터미널 창에 다음 명령어를 입력해 .jekyll-cache 폴더와 Gemfile.lock 파일 생성   gem install bundler bundle exec jekyll serve      http://127.0.0.1:4000으로 로컬 서버 접속   블로그 기본 설정     _config.yml 파일 수정   minimal_mistakes_skin    :         # 블로그의 전체적인 스킨 지정                                     # (Minimal Mistakes에서 기본적으로 제공)                                    # \"default\" \"air\", \"aqua\", \"contrast\", \"dark\"                                    # \"dirt\", \"neon\", \"mint\", \"plum\", \"sunrise\"  locale                   : \"ko-KR\" # 블로그에 쓰일 로컬 언어 지정 title                    :         # 메타 태그에 들어갈 블로그의 제목 지정 title_separator          : \"-\"           subtitle                 :         # 블로그의 제목 하단에 위치할 부제목 지정 name                     :         # 블로그 저자 이름 지정 description              :         # SEO 향상을 위한 meta description 태그 지정 url                      :         # 블로그 url                                     # \"https://(github ID).github.io\" baseurl                  :         # 서브 폴더를 위한 url 지정 repository               :         # github repository url                                    # \"https://github.com/(github ID)/(github ID).github.io\" teaser                   :         # 관련 포스트나 검색 등에 들어갈 미리보기 이미지 지정                                    # (\"assets/images/\"로 연결) logo                     :         # 블로그의 제목 옆에 들어갈 로고 이미지 지정                                    # (\"assets/images\"로 연결) masthead_title           :         # 블로그 프로필 상단에 위치할 사이트 제목 지정 breadcrumbs              : true    # 브래드크럼 사용 여부 지정 words_per_minute         : 200     # 포스트를 읽는 데 걸리는 시간을 계산히기 위한 분당 읽는 글자의 지정    블로그 댓글 기능 설정 (disqus)     https://disqus.com에 접속해 회원가입   _config.yml 파일 수정   comments:   provider               : \"disqus\"   disqus:     shortname            :         # disqus ID 지정   블로그 검색 기능 설정     _config.yml 파일 수정   search                   : # 블로그 검색 여부 지정 search_full_content      : # 블로그의 내용 검색 여부 지정   Google 검색 노출 살정     Google Search Console에서 도메인 입력   소유권 확인을 위해 다운받은 .HTML파일을 root에 위치   웹 크롤링을 위해 sitemap.yml과 robots.txt 파일을 생성해 root에 위치   # 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 허용 User-agent: * Allow: /  # 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 차단 User-agent: * Disallow: /  # 구글 검색 로봇만 차단하고, 다른 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 허용 User-agent: Googlebot Disallow: /  # 네이버 검색로봇만 차단하고, 다른 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 허용 User-agent: Yeti Disallow: /  Sitemap: https://pocj8ur4in.github.io/sitemap.xml   블로그 포스트 불러오기 설정     _config.yml 파일 수정   defaults:   # _posts   - scope:       path: \"\"       type: posts     values:       layout: single       author_profile: true       read_time: false       comments: true       share: false       related: false   블로그 레이아웃 설정   블로그 좌측 사이드바에 위치할 프로필 설정     _config.yml 파일 수정   author:   name             :       # 저자 이름 지정   avatar           :       # 저자 이미지 지정   bio              :       # 저자 바이오그래피 지정   location         :       # 저자 위치 지정   email            :       # 저자 이메일 지정   links:                   # 저자 관련 사이트 링크 지정     - label:               # 사이트 분류 지정       icon:                # 사이트 아이콘 지정       url:                 # 사이트 url 지정   블로그 하단에 위치할 꼬리말 설정     _config.yml 파일 수정   footer:   links:                   # 블로그 관련 사이트 링크 지정     - label:               # 사이트 분류 지정       icon:                # 사이트 아이콘 지정       url:                 # 사이트 url 지정   블로그 상단에 위치할 네비게이션 바 설정     _config.yml 파일 수정   defaults:   # _pages   - scope:       path: \"\"       type: pages     values:       layout: single       author_profile: true      _data/navigation.yml 파일 수정해 원하는 네비게이션 바 설정   main:   - title: (카테고리)        # 화면에 보여질 세부 항목의 이름 지정     url: /(카테고리)/        # _pages 내에 정해진 양식 파일이나 특정 링크로 연결      _pages에 필요한 양식 (.md) 파일 생성   예시) tag-archive.md  --- title: \"tags\" permalink: /tags/ layout: tags author_profile: true ---   블로그 너비 설정     _sass/minimal_mistakes/_variables.scss 파일 수정   /*    Grid    ========================================================================== */  $right-sidebar-width-narrow: 100px !default;    // default 200px $right-sidebar-width: 200px !default;           // default 300px $right-sidebar-width-wide: 250px !default;      // default 400px   블로그 폰트 크기 설정     _sass/minimal_mistakes/_reset.scss 파일 수정   html {   /* apply a natural box layout model to all elements */   box-sizing: border-box;   background-color: $background-color;   font-size: 16px;                    // Default 16px;    @include breakpoint($medium) {     font-size: 16px;                  // Default 18px;   }    @include breakpoint($large) {     font-size: 16px;                  // Default 20px;   }    @include breakpoint($x-large) {     font-size: 16px;                  // Default 22px;   }    -webkit-text-size-adjust: 100%;   -ms-text-size-adjust: 100%; }   블로그 아이콘 설정     https://realfavicongenerator.net/에 원하는 사진을 넣기   _includes/_head/custom.html 파일에 사이트에서 출력된 코드 삽입   &lt;!-- start custom head snippets --&gt;  &lt;!-- insert favicons. use https://realfavicongenerator.net/ --&gt; &lt;link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/assets/logo.ico/apple-touch-icon.png\"&gt; &lt;link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/logo.ico/favicon-32x32.png\"&gt; &lt;link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/logo.ico/favicon-16x16.png\"&gt; &lt;link rel=\"mask-icon\" href=\"/assets/logo.ico/safari-pinned-tab.svg\" color=\"#ffffff\"&gt; &lt;meta name=\"msapplication-TileColor\" content=\"#ffffff\"&gt; &lt;meta name=\"theme-color\" content=\"#ffffff\"&gt;   블로그 포스트 작성     _posts 폴더에 XXXX(YEAR)-XX(MONTH)-XX(DAY)-(NAME).md 파일 생성   포스트 내용을 쓰기 위한 MarkDown 문법은 해당 게시글을, html 태그의 사용 방법은 해당 게시글을 참고   상단에 머릿말 양식 작성하기     파일 상단에 ---에 둘러싸인 내용 작성   --- title: \"[Blog] macOS에서 Minimal Mistakes로 깃허브 블로그 만들기\"  categories:     - Github.io  tag:     [HTML, JavaScript, SCSS, Ruby]  toc: true toc_sticky: true  date: 2022-09-26 lastmod: 2022-09-26 ---                              양식 이름             양식 설명                                         title             포스트 제목                               categories             포스트 카테고리                               tags             포스트 태그                               toc             우측 상단의 목차                               toc_label             목차 이름                               toc_icon             목차 아이콘                               toc_sticky             목차 고정 여부                               date             포스트 작성일                               lastmod             포스트 수정일                               author_profile             프로필 창 표시 여부                 포스트 내에 문자 박스 양식 넣어보기     minimal-mistakes theme 내에 내장된 상자 양식을 활용   &lt;p class=\"notice--primary\"&gt;   &lt;strong&gt;     이 항목은 현재 작성중입니다.   &lt;/strong&gt;&lt;br&gt;     &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다. &lt;/p&gt;  &lt;p class=\"notice--info\"&gt;   &lt;strong&gt;     이 항목은 macOS 기반으로 작성되었습니다.   &lt;/strong&gt;&lt;br&gt;     &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다. &lt;/p&gt;  &lt;p class=\"notice--danger\"&gt;   &lt;strong&gt;     이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.   &lt;/strong&gt;&lt;br&gt;     &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다. &lt;/p&gt;  &lt;p class=\"notice--warning\"&gt;   &lt;strong&gt;     이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.   &lt;/strong&gt;&lt;br&gt;     &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다. &lt;/p&gt;                  이 항목은 현재 작성중입니다.             &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.                    이 항목은 macOS 기반으로 작성되었습니다.             &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.                    이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.             &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.                    이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.             &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.       블로그 추가 설정   js 빌드 설정     해당 게시글을 통해 homebrew 설치   터미널 창에 다음 명령어를 입력해 node.js 설치   brew install node      터미널 창에 다음 명령어를 입력해 node.js가 정상적으로 설치되었는지 확인   node -v // \"node X.X.X\" 출력 : 정상 설치 // \"zsh: command not found: node\" 출력 : 설치 오류      터미널 창에 다음 명령어를 입력해 yarn 설치   brew install yarn      터미널 창에 다음 명령어를 입력해 yarn가 정상적으로 설치되었는지 확인   yarn --version // \"X.X.X\" 출력 : 정상 설치 // \"zsh: command not found: yarn\" 출력 : 설치 오류      package.json 파일 수정     \"devDependencies\": {     \"concat\": \"^1.0.3\"     }   scripts\": {     \"concat-js\": \"...assets/js/custom/custom.js\",     \"uglify\": \"...assets/js/custom/custom.js -c -m -o assets/js/main.min.js\"          }      터미널 창에 다음 명령어를 입력해 npm 설치   npm install      터미널 창에 다음 명령어를 입력해 npm가 정상적으로 설치되었는지 확인   npm -v // \"X.X.X\" 출력 : 정상 설치 // \"zsh: command not found: npm\" 출력 : 설치 오류   ADMIN 설정     Gemfile 파일 수정   gem 'jekyll-admin', group: :jekyll_plugins      터미널 창에 다음 명령어를 입력   bundle install jekyll serve      http://localhost:4000/admin/를 통해 ADMIN 페이지 접속   블로그 방문자 통계 설정     Google Analytics를 가입한 후 애널리틱스 데이터 스트림 설정   측정 ID 복사 후 _config.yml 파일 수정   # Analytics analytics:   provider               : \"google-gtag\"   google:     tracking_id          : \"(측정 ID)\"   블로그 애드센스 광고 설정     Google AdSense 가입 후 사이트 추가   _includes/head/custom.html 파일에 코드 붙어넣기   _includes/footer/custom.html 파일에 광고 삽입   Minimal Mistakes Themes 디렉토리 구조   minimal-mistakes ├── _data                                 # 테마를 커스터마이징하기 위한 파일을 저장하는 디렉터리  | |                                       # (yml, yaml, json, csv, tsv 파일을 자동으로 읽어들어 site.data로 사용) | ├── navigation.yml                      # 상단 메뉴바를 커스터마이징하기 위한 파일 | └── ui-text.yml                         # 언어별로 어떤 텍스트로 표시되는지 나열하는 파일 | ├── _site                                 # 재사용되는 html 파일을 저장하는 디렉터리 (공통된 컴포넌트들 보관) | ├── search                              # 검색 엔진을 커스터마이징한 내용을 저장하는 디렉터리 | ├── analytics-providers | └── custom.html                         # 분석 플랫폼 공급자를 커스터마이징한 내용을 저장하는 파일 | ├── comments-providers | └── custom.html                         # 댓글 플랫폼 공급자를 커스터마이징한 내용을 저장하는 파일 | ├── head | └── custom.html                         # head를 커스터마이징한 내용을 저장하는 파일 | ├── footer | └── custom.html                         # footer를 커스마이징한 내용을 저장하는 파일 | ├── nav_list                            # 메뉴 상단바의 리스트에 대한 helper 파일 | ├── archive-single.html                 # 아카이브 문서에서 단일 문서를 표현하는 방법을 저장하는 파일 | ├── author-profiles.html                # author profile link애 대한 내용을 저장하는 파일 | ├── author-profile-custom-links.html    # author profile link를 커스마이징한 내용을 저장하는 파일 | ├── breadcrumbs.html                    # breadcrumbs에 대한 내용을 저장하는 파일 | ├── single-page | ├── page__taxonomy.html                 # 단일 문서에서 태그와 카테고리를 표현하는 방법을 저장하는 파일 | ├── tag-list.html                       # 단일 문서에서 태그 리스트를 표현하는 방법을 저장하는 파일 | └── category-list.html                  # 단일 문서에서 카테고리 리스트를 표현하는 방법을 저장하는 파일 ├── _posts                                # 블로그에 포스트한 md 파일을 저장하는 디렉터리 ├── _includes ├── _layouts                              # 각 문서의 디자인과 직접적으로 연결된 전체적인 레이아웃 디렉토리 ├── _sass                                 # minimal-mistakes.scss에 임포트할 수 있는 scss 파일을 저장하는 스타일시트 디렉터리 ├── assets                                # css, js, 이미지 파일을 저장하는 디렉터리 | ├── _css | ├── _images | └── _js  ├── _config.yml                           # 블로그를 구성하기 위한 기본적인 설정값을 설정하는 yml 파일 ├── Gemfile                               # 사용할 gem 플러그인 목록 ├── index.html                            # 블로그 처음 홈 페이지 └── package.json  ","categories": ["Git"],
        "tags": ["HTML","JavaScript"],
        "url": "/git/git1/",
        "teaser": null
      },{
        "title": "[Git] terminal로 Git 활용하기",
        "excerpt":"이 항목은 현재 작성중입니다. &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.   이 항목은 macOS 기반으로 작성되었습니다. &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   깃 (Git) : 분산형 버전 관리 시스템 (Version Control System)     버전 관리 (Version Control) : 문서를 수정할 때마다 구체적으로 저장하고 관리   백업 (Backup) : 현재문서를 원격 저장소에 저장   협업 (Collaboration) : 다른 팀원들과 원격 저장소를 통해 파일 공유   깃 설치       해당 링크를 통해 Homebrew 설치   Homebrew가 정상적으로 설치되었을 경우 터미널 창에 다음 명령어를 입력   brew install git      터미널 창에 다음 명령어를 입력해 Git이 정상적으로 설치되었는지 확인   git --version // \"git X.X.X\" 출력 : 정상 설치 // \"zsh: command not found: brew\" 출력 : 설치 오류      터미널 창에 다음 명령어를 입력해 사용자 정보를 입력   git config --global user.name \"pocj8ur4in\" git config --global user.email \"pocj8ur4in@gmail.com\"   .git 디렉터리 : 깃 버전 (version)이 저장될 디렉터리     작업 트리 (working tree) : 파일 수정, 저장 등의 작업을 하는 작업 디렉터리   스테이지 (stage) : 수정할 파일이 대기하는 스테이징 영역   리포지토리 (repository) : 스테이지에서 대기하고 있던 파일들을 버전으로 만들어 저장하는 저장소            이 때. 스테이지와 리포지토리는 .git 디렉터리에 저장된다.            .gitignore 디렉터리 : 버전 관리를 하지 않을 파일이나 디렉터리, 혹은 파일 확장자를 제외할 디렉터리      특정한 이름을 가진 파일 제외   filename.txt     특정한 확장자를 가진 파일 제외   *.txt     특정한 경로 아래의 파일 제외   folder/     특정한 경로 아래의 특정한 확장자를 가진 파일 제외   folder/filename.txt     예외 만들기   !filename.txt   README.MD 파일 : 프로젝트에 대한 설명과 사용 방법, LICENSE 등의 내용이 작성된 마크다운 형식의 파일     Github 프로젝트 리포지토리 페이지에서 README.MD가 표현된 것을 확인 가능   git : 깃 명령 다음에 입력할 수 있는 명령어 옵션 확인           git init : 깃 저장소 만들기            git status :  깃 상태 확인하기      untracked 상태 : 현재 깃이 해당 파일의 수정 여부를 추적하고 있지 않습니다.  (파일이 스테이지에서 대기 : N)             tracked 상태 : 현재 깃이 해당 파일의 수정 여부를 추적하고 있습니다.  (파일이 스테이지에서 대기 : Y)                    unmodified 상태 : 깃에 현재 버전이 저장된 이후 파일이 수정되지 않았습니다.           modified 상태 : 깃에 현재 버전이 저장된 이후 파일이 수정되었습니다.           staged 상태 :                                git add : 작업 트리에서 스테이지로 스테이징 (staging)            git commit : 스테이지에 있는 파일을 버전으로 커밋 (commit)             -m 옵션을 통해 커밋과 함께 메시지 저장       -am 옵션을 통해 스테이징과 커밋을 동시에 처리                git log : 리포지토리에 저장된 버전 정보 확인             커밋 해시 (commit hash) : 커밋을 구별하는 ID       HEAD-&gt;master : 해당 버전이 가장 최신임을 표시       작성자 (Author) : git config --global user를 통해 입력한 사용자 정보 (이름과 이메일)       작성일 (Date) : 버전이 작성된 시각       커밋 메시지 (commit message) : git commit -m을 통해 저장된 메시지                git diff : 작업 트리와 스테이지에 있는 파일 비교      ","categories": ["Git"],
        "tags": [],
        "url": "/git/git2/",
        "teaser": null
      },{
        "title": "[Git] 자주 쓰는 linux 기본 명령어",
        "excerpt":"이 항목은 macOS 기반으로 작성되었습니다. &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.           폴더 (Folder) 혹은 디렉터리 (Directory) : 파일의 분류를 위해 붙이는 이름공간 (Namespace)     파일 (File) : 컴퓨터에 쓰이는 데이터를 모아놓은 것     경로 (Path) : 파일 시스템을 통해 특정한 파일까지 찾아갈 수 있는 디렉토리의 구조                           절대 경로 (Absolute Path) : 최상위 디렉터리부터 해당 파일까지 경유한 모든 경로를 작성하는 경로           상대 경로 (Relative Path) : 현재 위치한 디렉터리를 기준으로 해당 파일까지의 위치를 작성하는 경로                           pwd (print working directory) : 현재 작업중인 디렉터리의 경로를 출력    $ pwd &gt; /home   cd [디렉토리 이름] (change directory) : 절대 / 상대 경로로 이롱       . : 현재 디렉토리   .. : 한 단계 위의 디렉토리   / : 최상위 디렉토리   ~ : Home 디렉토리   - : 이전 디렉토리   $ cd /folder1/folder2 $ pwd &gt; /home/folder1/folder2  $ cd .. $ pwd &gt; /home/folder1  $ cd - $ pwd &gt; /home/folder1/folder2  $ cd . $ pwd &gt; /home/folder1/folder2  $ cd ~ $ pwd &gt; /home   ls [옵션] [파일 이름] (list) : 현재 작업중인 디렉터리 내의 파일과 디렉토리 정보를 출력    $ ls &gt; home/ folder1     folder3     file1    file2.txt   cp [옵션] [원본 파일 이름] [대상 파일 이름/ 디렉토리 이름] (copy) : 파일을 복사       f : 덮어쓰기 시 물어보지 않음   -r : 하위 디렉토리를 모두 포함하여 복사   $ ls &gt; home/ folder1     folder3     file1    file2.txt  $ cp file1 folder1 $ cp -r folder3 folder1 $ cd folder1 $ ls &gt; home/ folder1     folder3     file1   mv [옵션] [원본 파일 이름] [대상 파일 이름] (move) : 파일 혹은 디렉터리의 이름이나 위치를 변경       f : 덮어쓰기 시 물어보지 않음   $ ls &gt; home/ folder1     folder3     file1  $ mv file1 file3 $ ls &gt; home/ folder1     folder3     file3  $ mv file3 folder3 $ ls &gt; home/ folder1     folder3  $ cd folder3 $ ls &gt; folder3/ file3   mkdir [옵션] [파일 이름] (make directory) : 새로운 디렉터리를 생성       -p : 하위 디렉터리까지 생성   $ ls &gt; folder3/ file3  $ mkdir dir1 $ ls &gt; folder3/ dir1     file3  $ mkdir dir2/dir3 $ ls &gt; dir1     dir2       file3  $ cd dir2 $ ls &gt; folder3/ dir3   rm [옵션] [파일 이름] (remove) : 파일을 삭제       -r : 디렉터리를 삭제 (하위 디렉터리와 파일도 삭제)   -f : 사용자에 삭제 여부를 묻지 않음   -i : 파일이나 디렉토리 삭제할 때마다 확인 (y: 확인, n: 취소)   $ ls &gt; folder3/ folder1     folder2     file1  $ rm file1 $ ls &gt; folder3/ folder1     folder2  $ rm -r folder1 $ ls &gt; folder3/ folder2  $ rm -rf folder2 $ ls &gt; folder3/   find [디렉토리 이름] [옵션] : 특정 파일이나 디렉터리를 검색       -name : 특정 이름이나 확장자를 가진 파일이나 디렉터리를 검색   -exec [명령어] {} \\; : 검색 이후의 명령어를 처리            {} : 검색 결과가 해당 구문 안으로 하나씩 처리       \\; : -exec 다음 부분의 명령어를 실행           -type : 디렉터리나 파일을 지정   $ ls &gt; ./ file1.txt     file2.txt     file3.txt  $ find ./ -name *.txt &gt; ./ file1.txt      &gt; ./ file2.txt      &gt; ./ file3.txt  $ find ./ -name *.txt -exec rm -f {} \\; $ ls &gt; ./  ","categories": ["Git"],
        "tags": [],
        "url": "/git/git3/",
        "teaser": null
      },{
        "title": "[B/E] 운영체제",
        "excerpt":"이 항목은 현재 작성중입니다. &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   운영체제 (Operation System) : 사용자가 컴퓨터에서 실행한 프로그램을 관리하고 제어     컴퓨터 시스템 자원의 효율적인 관리 (Performance) : 하드웨어 자원을 각각의 사용자 응용 프로그램에 적절히 분배            하드웨어 자원 (Hardware Resource) : CPU 시간, 기억 장치 및 디스크 영역, I/O 장치           사용자 편의성 제공 (Convenience) : 사용자가 더 편리하게 사용할 수 있는 환경을 구성       프로세스 관리 (Process Management)   메인 메모리 관리 (Main Memory Management)   파일 관리(File Management)   저장 장치 관리 (Storage Management)   I/O 장치 관리 (I/O Device Management)   시스템 호출 (System call)    부팅 (Booting) : 컴퓨터를 시작할 때 자기 자신을 구동시킬 프로그램을 스스로 불러내는 동작     메인 메모리 (Main Memory) : 즉시 필요한 데이터를 저장하는 주 기억 장치            RAM : 휘발성 주 기억 장치 (전원이 꺼지면 모든 내용이 지워짐)                    코드 영역 (Code Area) : 실행할 프로그램의 코드가 저장되는 영역                            CPU는 이 영역에 저장된 명령어를 하나씩 호출해 수행함                                   데이터 영역 (Data Area) : 실행할 프로그램의 전역 변수와 정적 변수가 저장되는 영역                            프로그램 시작 시 할당, 프로그램 종료 시 소멸                                   스택 영역 (Stack Area) : 실행할 프로그램의 함수의 호출과 관련된 지역 변수와 매개 변수가 정적으로 저장되는 영역                            후입선출 (Last-In, First-Out) 방식에 따른 동작 : PUSH로 데이터를 저장하고, POP로 데이터를 인출               메모리의 높은 주소에서 메모리의 낮은 주소의 방향으로 할당               함수 호출 시 할당, 함수 호출 종료 시 소멸                                   힙 영역 (Heap Area) : 사용자에 의해 동적으로 할당되고 해제되는 전역 변수가 저장되는 영역                            할당되는 변수의 크기 제한이 없음 : 크기 제한이 존재하는 스택에 비해 액세스 속도가 상대적으로 느림               CPU에 의해 효율적으로 관리되는 스택 영역과 달리, 사용자가 힙 영역을 관리해야 함                                    메모리 단편화 (Memory Fragmentation) : 사용 가능한 메모리가 존재하지만, 할당이 불가능한 상태                                               메모리의 낮은 주소에서 메모리의 높은 주소의 방향으로 할당                                               ROM : 비휘발성 주 기억 장치 (전원이 꺼져도 그 안의 내용이 계속 유지)                    POST (Power-On Self-Test) : (부팅 시 가장 처음 실행되는 프로그램) 현재 컴퓨터의 상태 검사           부트 로더 (Boot Loader) : (POST 다음에 실행되는 프로그램) 보조 기억 장치의 운영체제를 탐색 후 RAM에 할당                            보조 기억 장치에서 RAM으로 할당된 운영체제는 컴퓨터 전원이 꺼질 때까지 상주 (Resident)                                                   SSD/HDD : 운영체제가 저장된 보조 기억 장치            커널 (Kernel) : 운영체제가 수행하는 모든 작업이 저장       명령어 해석기 (Shell) : 사용자가 요청하는 명령어를 해석해 커널에 요청하고 결과를 출력                    응용 프로그램 (Application) : 운영체제 위에서 수행되며, 운영체제가 지원하는 자원만을 사용 가능                           일괄 처리 시스템 (Batch Processing System) : 프로그램 수행 과정의 자동화     Resident Monitor : 프로세서에 할당하기 위해 (컴파일 -&gt; 링크 -&gt; 로딩)의 과정을 하나의 프로그램으로 작성   시분할 시스템 (Time-sharing System) : CPU가 프로그램을 수행하는 시간을 제한     스위칭 (Switching) : 프로그램이 일정 시간 실행되면 Time Out을 발생시켜 다음 프로그램으로 넘어가게 함   다중 작업 (Multitasking) : CPU가 짧은 시간 내에 여러 프로그램을 스위칭해 동시에 작업하는 것처럼 보이게 함            CPU 스케줄링 (CPU Scheduling) : CPU가 어느 프로그램을 실행할지 선택하는 작업           다중 프로그래밍 시스템 (Multiprogramming System) : 메모리에 여러 응용 프로그램을 적재시켜 idle 상태 최소화     프로그램 실행 시에 계산을 담당하는 CPU와 입출력을 담당하는 I/O 장치가 교대로 실행            idle상태 : I/O 장치가 실행되는 동안 CPU가 아무런 작업도 하지 않는 상태           인터럽트 기반 시스템 (Interrupt-based System) : 인터럽트 발생 시 ISR에 맞는 처리 수행     인터럽트 (Interrupt) : 프로그램 실행 중에 예기치 않은 상황이 발생할 경우 이를 CPU에 알리는 전기 신호            외부 인터럽트 (Eternal Interrupt) = 하드웨어 인터럽트 (Hardware Interrupt)       내부 인터럽트 (Internal Interrupt) = 소프트웨어 언터럽트 (Software Interrupt)                    예외 (Exception)           시스템 호출 (System call)                           인터럽트 서비스 루틴 (Interrupt Service Routine) : 인터럽트 신호를 처리하기 위한 방법을 내포한 운영체제 내의 코드   이중 모드 (Dual Mode Execution) : 유저 (User) 모드와 커널 (Kernel) 모드를 나눔      ! 문제 : 어떤 작업이 자원을 계속해서 점유하는 일과 같이 컴퓨터의 작업 효율을 저해하는 행위로부터 보호할 수단을 필요       CPU 내 레지스터 (Register)의 Mode-Bit를 플래그 (flag)로 활용해 나타냄 (커낼 모드 : 0, 유저 모드 : 1)   각 명령어에 Mode-Bit를 넣어 시스템 내의 Mode-Bit와 같을 시에만 명령어 수행   특권 명령어 (Privileged Instruction) : 커널 모드에서만 내릴 수 있는 명령어            STOP, HALT, RESET, SET_TIMER 등       유저 모드에서는 특권 명령어를 내릴 수 없음 (내부 인터럽트를 발생해 해당 명령어를 요청한 프로그램을 강제 종료)           시스템 호출 (System Call) : Mode-Bit를 바꾸는 행위 (INT 80)            사용자가 하드웨어의 자원에 접근할 때, 프로그램에서 시스템 호출을 발생시켜 운영체제에 위임해 커널 모드로 처리                   컴퓨터가 부팅되는 과정 : 커널 모드     응용 프로그램이 실행되는 과정 : 커널 모드     응용 프로그램이 실행되는 중일 때 : 유저 모드     인터럽트가 발생한 후 처리하는 과정 : 커널 모드     인터럽트를 처리한 후 : 유저 모드      하드웨어 보호 (H/W Protection) : 잘못된 명령이나 접근으로부터 보호하기 위해 운영체제에서 내부 인터럽트를 발생      ! 문제 : 정보들이 여러 I/O 장치를 통해 컴퓨터로 입출력되는 과정에서 장치 간 혹은 데이터 간의 혼선이 발생할 수 있음    입출력 장치 보호 (I/O Protection) : in, out과 같은 입출력 명령을 특권 명령으로 지정해 운영체제를 통해 수행     입출력 수행 시에는 관리자 모드로 전환해 특권 명령을 내림            Privileged Instruction Violation : 사용자가 입출력 명령을 직접 내린 경우 프로그램을 강제 종료              ! 문제 : 다른 사용자나 운영체제에 할당된 메모리 영역에 접근해 정보나 프로그램을 해킹할 수 있음    메모리 보호 (Memory Protection) : CPU와 메인 메모리 간 주소 버스에 MMU (Memory Management Unit)를 설치     두 개의 레지스터를 통해 해당 프로그램의 주소 범위를 저장   사용자에 할당된 메모리 영역을 벗어난 주소값을 가져오지 못하게 함   MMU 설정은 운영체제만 변경 가능            Segment Violation : 만약 사용자에 할당된 메모리 영역을 벗어난 주소값이 MMU에 들어오면 내부 인터럽트를 발생시킴              ! 문제 : 프로그램에서의 무한 루프로 인해 CPU가 독점되어 다른 프로그램이 수행되지 못할 수 있음    CPU 보호 (CPU Protection) : 타이머 (Timer)를 두어 일정 시간이 지나면 타이머 인터럽트를 발생시킴     타이머 (Timer) : 무한 루프나 자원 독점을 막기 위해 특정 시간이 지나면 타이머 인터럽트를 발생시킴            타이머 인터럽트 (Timer Interrupt) : 해당 인터럽트의 ISR에서 CPU는 각 프로그램의 CPU 점유 시간을 측정해 분배       운영체제는 타이머가 끝난 작업을 종료시키고 스케줄링 (Scheduling) 이전에 타이머 실행           프로세스 (Process) : 실제 메인 메모리에 할당되어 실행 중인 프로그램     프로그램은 보조 기억 장치에서 아무런 동작을 하지 않은 상태   어떤 요청에 의해 메인 메모리에 할당되어 CPU를 사용하면서 실행   각각의 프로세스는 CPU에 의해 샐행된 후 …를 생성 (메인 메모리를 효율적으로 사용해야 함)            프로세스 테이블 엔트리 = 프로세스 컨트롤 블록 (Process Control Block)       주소 공간 (Address Space)                    코드 세그먼트 (Code Segment) : 프로그램 소스 코드가 저장           데이터 세그먼트 (Data Segment) : 전역 변수가 저장           스택 세그먼트 (Stack Segment) : 지역변수와 매개변수가 저장                              지역변수와 매개 변수가 후입선출의 방식을 따른 스택에 저장되기에, 전역 변수를 먼저 선언해 메인 메모리의 공간 절약 가능    프로세스의 생성과 종료 (Creation and Destruction of Process)     최초의 프로세스인 Init의 생성은 부팅된 운영체제가 처음 수행하는 작업 중 하나   생성된 프로세스가 다른 프로세스를 생성하는 과정을 반복            프로세스의 생성을 위한 시스템 호출 : fork()       프로세스의 종료를 위한 시스템 호출 : exit()           생성된 모든 프로세스는 자신을 식별할 수 있는 고유의 정수값인 PID을 가짐            생성된 모든 프로세스는 자신을 생성한 사용자 고유의 UID 값 또한 가짐 (부모와 자식이 동일한 값)                 프로세스 트리 (Process Tree) : 부모 프로세스인 A에서 자식 프로세스인 B, C, D가 파생되어 생성            부모 프로세스 : 프로세스를 생성한 프로세스       자식 프로세스 : 프로세스로부터 생성된 프로세스       형제 프로세스 : 같은 부모 프로세스에서 파생된 자식 프로세스           프로세스 컨트롤 블록 (Process Control Block) : 프로세스에 대한 모든 정보를 저장하는 곳     CPU는 여러 프로세스를 빈번히 전환하면서 수행하기에 각 프로세스의 데이터를 저장해야 작업을 이어서 수행할 수 있음   운영체제 내에서 프로세스를 관리하는 코드 부분에 저장            프로세스 컨트롤 블록에 데이터를 저장하고 복원하는 시간 역시 다중 작업을 위해 각 프로세스에 할당되는 시간에 포함           프로세스 상태 (Process Status), 프로그램 카운터 (Program Counter), 스택 포인터 (Stack Pointer), 파일 디스크립터 (File Descriptors) 등의 정보 포함      프로세스 상태 (Process Status) : 각 단계들에서 상태 전이가 일어나 다음 단계로 넘어감     New : 프로그램이 메인 메모리에 할당된 상태   Ready : 프로세스가 언제든 실행 가능한 상태; 할당된 프로그램이 실행되기 위한 모든 준비를 마친 상태로 대기된 상태            n개의 작업이 있을 때, CPU의 프로세서는 스케줄러의 0~(n-1)번, 즉 n개의 작업을 번갈아 처리           Running : CPU가 해당 프로세스를 실제로 실행중인 상태   Waiting=Blocked : Running이 불가능한 상태            프로세스가 끝나지 않은 시점에 해당되는 I/O 정보가 없어 작업할 수 없음       Waiting가 끝나면 다시 CPU에 실행되기 위해 Ready로 돌아가야 함           Terminated : 프로세스가 완전히 종료된 상태              I/O 작업으로 인한 상태 변화 : Running -&gt; Waiting -&gt; Ready -&gt; Running     시간 초과로 인터럽트에 의한 상태 변화 : Running -&gt; Ready -&gt; Running      프로세스 큐 (Process Queue) : 커널이 프로세스 스케줄링을 위해 데이터 영역에서 관리하는 큐     Ready Queue : 프로세스 상태가 Ready인 프로세스들이 CPU 제어를 기다리는 큐            어떤 CPU 스케줄링 알고리즘을 선택하는지에 따라 CPU 제어 순서가 달라짐           Job Queue : 보조 기억 장치의 프로그램이 실행되기 위해 메인 메모리의 할당 순서를 기다리는 큐            시스템 내의 모든 프로세스 관리 : Ready Queue, Device Queue에 속한 모든 프로세스 포함           Device Queue : 프로세스 상태가 Waiting인 프로세스들이 CPU 외의 자원을 기다리는 큐            기다리는 자원들마다 큐가 할당되며, 해당 자원이 사용되면 인터럽트를 발생시키고 Ready Queue로 이동                 각 큐는 프로세스의 프로세스 컨트롤 블록을 가리키는 포인터 방식으로 연결 리스트를 구현   스케줄러 (CPU Scheduler) : 프로세스 순서를 정해 프로세스 큐에 올릴 것을 결정하는 커널의 코드     장기 스케줄러 (Long-term Scheduler) : 생성된 프로세스 중 어떤 것을 Job Queue에서 Ready Queue으로 이동시킬지 선택            장기 스케줄러는 현재 메모리에 할당된 프로세스의 개수 (Degree of multiprogramming)를 제어       장기 스케줄러는 I/O bound Process,CPU bound Process를 메인 메모리에 적절히 할당해야 함                    I/O bound Process : I/O 작업 (입출력) 비중이 높은 프로세스           CPU bound Process : CPU 작업 (계산) 비중이 높은 프로세스                           중기 스케줄러 (Medium-term Scheduler) : 실행 중인 프로세스 중 보조 저장 장치로 옮길 것을 주기적으로 검사            Swapping (Swap-out↔Swap-in) : Swap-in할 때 이전 공간으로 재할당되는 것은 보장되지 않음                    Swap-out : 메인 메모리에서 우선 순위가 은 프로세스를 통째로 보조 기억 장치로 저장           Swap-in : 나중에 해당 프로세스가 다시 사용되려 할 때 보조 기억 장치에서 메인 메모리에 다시 할당                       중기 스케줄러 또한 현재 메모리에 할당된 프로세스의 개수 (Degree of multiprogramming)를 제어           단기 스케줄러 (Short-term Scheduler) : Ready Queue 내에서 프로세스들 중 어떤 것을 다음에 실행시킬지 선택            CPU 스케줄러 (CPU Scheduler) 라고도 부르며, 시분할 시스템에서 Time Out이 발생하면 호출           문맥 전환 (Context Switching) : CPU가 실행중인 프로세스를 멈추고 다른 프로세스를 실행하는 작업     문맥 (Context) : 각 프로세스 컨트롤 블록 내에서 표현            하드웨어 문맥 : 프로그램 카운터 정보와 레지스터 정보를 저장       프로세스 주소 공간 : 각 프로세스가 갖고 있는 독자적인 주소 공간에 위치           CPU 스케줄러 : CPU가 어느 프로세스를 다음에 실행할지 지정   디스패쳐 (Dispatcher) : 문맥 전환이 발생하면 Ready에서 Running으로 상태 전이            문맥 전환 오버헤드 (Context Switching Overhead) : 문맥 전환이 발생할 때마다 디스패쳐를 매번 실행시킴                CPU에서 실행중인 프로세스의 데이터는 해당 프로세스의 프로세스 컨트롤 블록에 갱신   새로 시작될 프로세스의 프로세스 컨트롤 블록를 CPU로 복원   캐시와 Translation Lookup Buffer를 재설정      시스템 호출로 인한 인터럽트 발생 시 : 실행중인 프로세스의 문맥을 프로세스 컨트롤 블록에 갱신하나, 문맥 전환은 일어나지 않음    CPU 스케줄링 (CPU Scheduling) : CPU 스케줄러에서 어느 프로세스를 다음에 실행할지 지정하는 작업     선점 (Preemptive) : 한 프로세스가 CPU를 점유하는 동안, 다른 프로세스가 CPU를 강제로 점유할 수 있음   비선점 (Non-Preemptive) : 한 프로세스가 CPU를 점유하는 동안, 다른 프로세스가 CPU를 점유할 수 없음 (예외 : I/O 발생)   CPU 스케줄링 척도 (CPU Scheduling Criteria) : CPU 스케줄링의 효율을 분석하는 기준     CPU 점유율 (CPU Utilization) : 현재 CPU가 작업을 수행하는 비율 -&gt; 높을수록 좋음   처리율 (Throughput) : 단위 시간 당 완료되는 프로세스의 개수 -&gt; 많을수록 좋음   소요 시간 (Turnaround Time) : 프로세스가 생성된 시간부터 종료되는 데까지 걸린 시간 -&gt; 짧을수록 좋음   대기 시간 (Waiting Time) : CPU 제어를 위해 Ready Queue에서”만” 대기한 시간 -&gt; 짧을수록 좋음            평균 대기 시간 (Average Waiting Time) : (각 프로세스들의 대기 시간의 합) / (프로세스들의 개수)           응답 시간 (Response Time) : Interactive System에서 입력에 대한 반응 시간 -&gt; 짧을수록 좋음   선입선출 (First-Come, First-Served) 스케줄링 : 가장 먼저 작업을 요청한 프로세스를 먼저 수행     비선점 (Non-Preemptive)   들어온 순서대로 작업을 수행한다고 해도 그것이 반드시 효율적이지 않음            Convoy Effect : CPU를 많이 점유하는 프로세스가 먼저 수행되어 나머지 프로세스들이 그만큼 오래 대기하는 것                \t \t\t \t\t\tProcess \t\t\tBurst Time (msec) \t\t \t    \t                P1         3                       P2         3                       P3         24                     FCFS Scheduling : (CPU에 요청받은 순서대로) P1, P2, P3 순으로 처리한다.                Average Waiting Time : (0 + 3 + 6) / 3 = 3msec                       \t \t\t \t\t\tProcess \t\t\tBurst Time (msec) \t\t \t    \t                P1         24                       P2         3                       P3         3                     FCFS Scheduling : (CPU에 요청받은 순서대로) P1, P2, P3 순으로 처리한다.                Average Waiting Time : (0 + 24 + 27) / 3 = 17msec                 CPU를 오래 점유하는 P3로 인해 상대적으로 빠른 처리가 가능한 P1과 2가 오래 대기하는 Convoy Effect이 발생!      최단작업 (Shortest-Job-First) 스케줄링 : 시간이 가장 짧게 수행되는 프로세스를 먼저 수행     비선점 (Non-Preemptive), 선점 (Preemptive)   일반적으로 가장 빠른 평균 대기 시간을 가지나, 현실에서는 각 프로세스의 CPU 점유 시간이 주어져 있지 않기에 비현실적        \t \t\t \t\t\tProcess \t\t\tBurst Time (msec) \t\t \t    \t                P1         6                       P2         8                       P3         7                       P4         3                     FCFS Scheduling : (CPU에 요청받은 순서대로) P1, P2, P3, P4 순으로 처리한다.                Average Waiting Time : (0 + 6 + 14 + 21) / 4 = 10.25msec                 SJF Scheduling : (작업 시간이 짧은 순서대로) P4, P1, P3, P2 순으로 처리한다.                Average Waiting Time : (0 + 3 + 9 + 16) / 4 = 7msec                  우선순위 (Priority) 스케줄링 : 우선순위가 가장 높은 프로세스를 먼저 수행     비선점 (Non-Preemptive), 선점 (Preemptive)   우선순위는 정수값으로 표현되며, 값이 작을수록 우선순위가 높음        \t \t\t \t\t\tProcess \t\t\tBurst Time (msec)       Priority \t\t \t    \t                P1         10         3                       P2         1         1                       P3         2         4                       P4         1         5                       P5         5         2                     Priority Scheduling : (우선순위가 높은 순서대로) P2, P5, P1, P3, P4 순으로 처리한다.                Average Waiting Time : (0 + 1 + 6 + 16 + 18) / 5 = 8.2 msec                  라운드 로빈 (Round-Robin) 스케줄링 : 원 모양으로 모든 프로세스를 돌아가면서 수행     선점 (Preemptive)   시분할 시스템에서 CPU가 한 프로세스를 일정 시간 수행한 후, 이를 대기 상태로 보내고 다음 프로세스를 수행하는 것을 반복            Time Quantum : CPU가 한 프로세스를 수행하는 시간 -&gt; 스케줄리의 효율성이 Time Quantum의 크기에 의존                \t \t\t \t\t\tProcess \t\t\tBurst Time (msec)       Time Quantum \t\t \t    \t                P1         7         4msec                       P2         4                       P3         4                     RP Scheduling : (CPU에 요청받은 순서대로) P1, P2, P3, 그리고 (완료하지 못한) P1 순으로 처리한다.                Average Waiting Time : (4 + 8 + 12) / 3 = 8 msec                       \t \t\t \t\t\tProcess \t\t\tBurst Time (msec)       Time Quantum \t\t \t    \t                P1         7         3msec                       P2         4                       P3         4                     RP Scheduling : (CPU에 요청받은 순서대로) P1, P2, P3, (완료하지 못한) P1, P2, P3, 그리고 P1 순으로 처리한다.                Average Waiting Time : (12 + 13 + 14) / 3 = 13 msec                 ","categories": ["Backend"],
        "tags": [],
        "url": "/backend/os1/",
        "teaser": null
      },{
        "title": "[F/E] JavaScript",
        "excerpt":"이 항목은 현재 작성중입니다. &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.   이 항목은 최신의 내용을 담고 있지 않을 수 있습니다. &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.   이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다. &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.   자바스크립트 (JavaScript) : 웹 문서가 동적으로 표현하는 것을 구현하는 객체 기반 스크립트 언어     동적으로 구현되어 타입을 명시할 필요가 없는 인터프리터 언어   프로토타입 (prototype) 기반의 객체 지향 언어이나, 함수형 프로그래밍 또한 표현 가능   대다수 웹 브라우저 내에 인터프리터가 내장되어 사용되나, Node.js와 같은 프레임워크를 통해 서버 측 프로그래밍에서도 가능            웹의 내용을 표현하는 HTML의 내용, 속성, 스타일을 변경할 수 있음           # JavaScript를 HTML에 적용시키는 방법   - Internal JavaScript : HTML 태그의 속성 script=\"\"에 JavaScript 코드를 넣는 방법    입력 :   &lt;script&gt;   alert (\"Hello\"); &lt;/script&gt;   - Linking JavaScript : 별도의 .js 파일을 만들고 이를 HTML 문서와 연결하는 방법    입력 :     → hello.js    alert (\"Hello\");         → index.html    &lt;script src=\"hello.js\"&gt;&lt;/script&gt;      변수 (variable) : 데이터 (data)를 저장할 수 있는 메모리 공간   var x;   객체 (Object) : 변수를 객체로 선언하고 초기화    var jb = {'a': 100, 'b': 200, 'c': 300};   var jb = {}; jb['a'] = 100; jb['b'] = 200; jb['c'] = 300;   var jb = new Object(); jb['a'] = 100; jb['b'] = 200; jb['c'] = 300;   var jb = new Object(); jb.a = 100; jb.b = 200; jb.c = 300;   배열 (Array) : 변수를 배열로 선언하고 초기화    var jbAry = new Array(); jbAry[0] = 'a'; jbAry[1] = 'b'; jbAry[2] = 'c';   var jbAry = [ 'a', 'b', 'c' ];   var jbAry = new Array( 'a', 'b', 'c' );                              Array 메소드             Array 메소드에 대한 설명                                         jb.length             배열의 길이 반환                               var njb = jb.concat( 원소 혹은 배열 )             기존 배열에 원소 혹은 배열을 추가해 새로운 배열 선언                               jb.every( function( x ) { return 조건 } )             배열의 원소를 오름차순으로 검사 : 조건을 만족하지 않는 원소가 있으면 false, 없으면 true 반환                               jb.indexOf( 검색할 값, 검색을 시작할 인덱스 값 )             시작할 인덱스 값부터 검색해 값과 일치하는 원소가 존재하면 해당 인덱스 값 반환, 없으면 -1 반환                               jb.lastIndexOf( 검색할 값, 검색을 시작할 인덱스 값 )             시작할 인덱스 값부터 역순으로 검색해 값과 일치하는 원소가 존재하면 해당 인덱스 값 반환, 없으면 -1 밥환                               var njb = jb.join( 원소들을 구분할 값 (기본값 : ,) )             기존 배열에 있는 원소들을 연결해 하나의 문자열로 만듬 (el1,el2,el3)                               jb.push( 추가할 원소 ) / jb.unshift( 추가할 원소 )             배열의 맨 끝에 / 맨 앞에 원소를 추가                               jb.pop() / jb.shift()             배열의 맨 끝에 / 맨 앞에 위치한 원소를 제거                               jb.reverse()             배열의 원소 순서를 역순으로 만듬                               var njb = jb.slice( 시작할 인덱스 값, 끝낼 인덱스 값 )             기존 배열에서 배열의 인덱스을 선택해 새로운 배열을 만듬                               jb.splice( 시작할 인덱스 값, 추출할 원소의 개수, 넣을 값 )             기존 배열에서 배열의 범위를 선택해 새로운 배열을 만들고, 추출한 자리에 새로운 값을 넣음                 문자열 (string) : 변수를 문자열로 선언하고 초기화    var x = 'varX' var y = 'varY'; var z = 'varZ'                              String 메소드             String 메소드에 대한 설명                                         str.length             문자열의 길이 반환                               str.charAt( 반환할 인덱스 값 ) / str.charCodeAt( 반환할 인덱스 값 )             특정 위치에 있는 문자 반환 / 특정 위치에 있는 문자의 유니코드 값 반환                               str.concat( 문자열1 [, 문자열2 ... [, 문자열N ] ]  )             문자열에 문자열을 연결 (인수가 문자열이 아닌 경우 : 인수를 문자열로 반환)                                str.startsWith( 확인할 문자열, 확인할 범위 )             기존 문자열의 (0~범위) 내 문자열이 특정 문자열으로 시작하는지 확인해 맞으면 true, 아니면 false 반환                               str.endsWith( 확인할 문자열, 확인할 범위 )             기존 문자열의 (0~범위) 내 문자열이 특정 문자열로 끝나는지 확인해 맞으면 true, 아니면 false 반환                               str.includes( 검색할 문자열, 검색을 시작할 인덱스 값 )             문자열이 검색할 문자열을 포함하는지 탐색할 때 포함하면 true 반환, 포함하지 않으면 false 반환                               str.indexOf( 검색할 문자열, 검색을 시작할 인덱스 값 )             시작할 인덱스 값부터 검색해 일치하는 문자열이 존재하면 해당 인덱스 값 반환, 없으면 -1 반환                               str.lastIndexOf( 검색할 문자열, 검색을 끝낼 인덱스 값 )             검색을 끝낼 인덱스 값까지 검색해 일치하는 문자열이 존재하면 해당 인덱스 값 반환, 없으면 -1 반환                               str.repeat ( 반복한 횟수 )             문자열을 반복한 값 반환                               str.replace ( 찾을 문자열, 바꿀 문자열 )             기존 문자열 내에서 특정 문자열을 찾아서 다른 문자열로 바꿈                               str.split( 분할할 때의 기준, 최대로 분할할 개수 )             기존 문자열을 기준에 맞게 분할해 배열의 여러 원소로 만듬                               str.substr( 추출을 시작할 인덱스 값, 추출할 문자열의 길이 )             기존 문자열에서 문자열의 범위를 지정해 추출한 문자열 반환                               str.substring( 시작할 인덱스 값, 끝낼 인덱스 값 )             기존 문자열에서 문자열의 인덱스를 선택해 추출한 문자열 반환                                str.fromCharCode( 바꿀 인덱스 값 )             문자에 해당되는 유니코드 변환                 연산자 (operator)     단항 연산자 / 이항 연산자 / 다항 연산자 : 필요한 항의 개수가 1개 / 2개 / 3개인 연산자   비교 연산자 ==, !=, ===, !===, &gt;, &gt;=, &lt;, &lt;=    7 == 7      // 왼쪽의 변수는 오른쪽의 변수와 같다. '7' == 7    // 왼쪽의 문자열은 오른쪽의 변수와 같다. 3 != 7      // 왼쪽의 변수는 오른쪽의 변수가 같지 않다. 3 === 3     // 왼쪽의 변수는 오른쪽의 변수와 엄격하게 같다. 3 !=== '3'  // 왼쪽의 변수는 오른쪽의 문자열과 엄격하게 같지 않다. 7 &gt; 3       // 왼쪽의 변수는 오른쪽의 변수보다 크다. 7 &gt;= '3'    // 왼쪽의 변수는 오른쪽의 문자열보다 크거나 같다. '3' &lt; 7     // 왼쪽의 문자열은 오른쪽의 변수보다 작다. 3 &lt;= 3      // 왼쪽이 변수는 오른쪽의 변수보다 작거나 크다.   변수 데이터 타입 반환 연산자 typeof       undefined : 변수가 정의되지 않거나 값이 존재하지 않음   number : 변수 데이터 타입이 숫자   string : 변수 데이터 타입이 문자열   boolean : 변수 데이터 타입이 bool형   object : 변수 데이터 타입이 함수, 배열 등 객체   function : 변수의 값이 함수   symbol : 변수 데이터 타입이 symbol형   &lt;script&gt;     var x;     document.write( \"typeof x : \" + typeof x + \"&lt;br&gt;\" );      var x = 3;     document.write( \"typeof x = 3 : \" + typeof x + \"&lt;br&gt;\" );      var x = 'varX';     document.write( \"typeof x = 'varX' : \" + typeof x + \"&lt;br&gt;\" );      var x = true;     document.write( \"typeof x = true : \" + typeof x + \"&lt;br&gt;\" );      var x = [ 'y', 'z' ];     document.write( \"typeof x = [ 'y', 'z' ] : \" + typeof x + \"&lt;br&gt;\" );      function x(){};     document.write( \"typeof x(){} : \" + typeof x + \"&lt;br&gt;\" );      var x = function(){};     document.write( \"typeof x = function(){} : \" + typeof x + \"&lt;br&gt;\" );      var x = Symbol();     document.write( \"typeof x : \" + typeof x = Symbol() + \"&lt;br&gt;\" ); &lt;/script&gt;   조건 연산자 if, else if, else, switch    if (condition1) {     statement1 } else if (condition2) {     statement2 } else {     statement3 }   switch ( condition ) {     case value1:         statement1;         break;     case value2:         statement2;         break;     default:         statement3; }   반복 연산자 while, do~while, for    while ( condition ) {   statement; }  do {     statement; } while ( condition )  for ( initial; condition; repeat) {     statement; }   함수 (function)      함수 선언   function functionName( argument1, argument2, ... ) {     statement; } // 함수 호출은 함수 선언 전후에 가능  var functionName = function( argument1, argument2, ... ) {   statement; }; // 함수 호출은 함수 선언 후에만 가능      함수 호출   functionName( value1, value2, ... );      전역 변수 (global variable) : 함수 외부에서 선언된 변수            프로그램 전체에서 접근 가능           지역 변수 (local variable) : 함수 내부에서 선언된 변수            함수가 실행되면 만들어지고 함수가 종료되면 소멸       함수 외부에서는 접근 불가              내장 함수 (built-in function)            사용자의 편의를 위해 다양한 기능의 여러 전역 함수를 미리 정의하여 제공       자바스크립트의 어떤 타입의 객체에서도 바로 사용 가능           eval() : 문자열을 javascript 코드로 인식하게 하는 내장 함수    &lt;script&gt;     var code = '1 + 2';     document.write( x );                   // 1 + 2 \tdocument.write( eval( code ) );    // 3 &lt;/script&gt;   Number(), String() : 문자열을 숫자로 / 숫자를 문자열로 변환하는 내장 함수    &lt;script&gt;     var a = '2';     var b = '3';     var c = a + b;     var d = Number( a ) + Number( b );     document.write(c);  //  12     document.write(d);  //  3 &lt;/script&gt;   &lt;script&gt;     var a = 4;     var b = 5;     var c = a + b;     var d = String( a ) + String( b );     document.write(c);  //  9     document.write(d);  //  45 &lt;/script&gt;   parseInt(), parseFloat() : 문자열을 정수형으로 / 정수형을 문자열로 변환하는 내장 함수    &lt;script&gt;     document.write( parseInt( '17' ) );         // 17     document.write( parseFloat( '3.14' ) );     // 3.14 &lt;/script&gt;   encodeURI(), decodeURI() : :, ;, /, =, ?, &amp;를 뺀 문자를 인코딩 / 문자열을 디코딩하는 내장 함수    &lt;script&gt;     var u = 'https://pocj8ur4in.github.io';     var encU = encodeURI( u );     document.write( u );                    // https://pocj8ur4in.github.io \tdocument.write( encU );             // https://pocj8ur4in.github.io를 인코딩한 문자열 \tdocument.write( decodeURI( u ) );   // https://pocj8ur4in.github.io를 인코딩한 문자열을 디코딩한 결과 &lt;/script&gt;   encodeURIComponent(), decodeURIComponent() : 모든 문자를 인코딩 / 문자열을 디코딩하는 내장 함수    &lt;script&gt;     var u = 'https://pocj8ur4in.github.io';     var encU = encodeURIComponent( u );     document.write( u );                            // https://pocj8ur4in.github.io \tdocument.write( encU );                     // https://pocj8ur4in.github.io를 인코딩한 문자열 \tdocument.write( decodeURIComponent( u ) );  // https://pocj8ur4in.github.io를 인코딩한 문자열을 디코딩한 결과  &lt;/script&gt;   isNaN() : 매개변수가 숫자인지 검사하는 내장 함수 (false : 숫자 O, true : 숫자 X)    &lt;script&gt;     var a = 11;                  var b = '11.11';             var c = 'NaN';               var d = 11 * 11;             var e = '11 * 11';     document.write(isNaN(a));   // false     document.write(isNaN(b));   // false     document.write(isNaN(c));   // true (문자이므로 숫자가 아닌 것)     document.write(isNaN(d));   // false     document.write(isNaN(e));   // true (따옴표 안에 문자가 있으므로 숫자가 아닌 것) &lt;/script&gt;   isFinite() : 매개변수가 유한한 수인지 검사하는 내장 함수 (false: 문자이거나 무한한 수, true : 유한한 수)    &lt;script&gt;     var a = 12;     var b = Infinity;     var c = 'NaN';     document.write(isFinite(a));    // 유한한 숫자이므로 true     document.write(isFinite(b));    // 무한한 숫자이므로 false     document.write(isFinite(c));    // 문자이므로 false &lt;/script&gt;  ","categories": ["Frontend"],
        "tags": ["HTML"],
        "url": "/frontend/js1/",
        "teaser": null
      }]
