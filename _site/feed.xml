<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-10-13T21:41:22+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">pocj8ur4in’s blog</title><subtitle></subtitle><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><entry><title type="html">[Theory] 디자인씽킹 (Design Thinking)</title><link href="http://localhost:4000/design/dt1/" rel="alternate" type="text/html" title="[Theory] 디자인씽킹 (Design Thinking)" /><published>2022-10-13T00:00:00+09:00</published><updated>2022-10-13T00:00:00+09:00</updated><id>http://localhost:4000/design/dt1</id><content type="html" xml:base="http://localhost:4000/design/dt1/"><![CDATA[<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<ul>
  <li>
    <h3 id="디지털-트랜스포메이션-digital-transformation">디지털 트랜스포메이션 (Digital Transformation)</h3>
    <ul>
      <li>Digitization와 Digitalization을 통해 구축된 데이터 기반의 디지털 프로세스 구축
        <ul>
          <li>Digitization : 아날로그 정보를 디지털 정보로 전환</li>
          <li>Digitalization : 디지털 비즈니스 모델의 구축 &amp; 디지털 정보를 데이터베이스로 구축해 정리</li>
        </ul>
      </li>
      <li>Digital Transformation의 5가지 요소 : 운영 시스템, 디지털 플랫폼, 외부 개발자 플랫폼, 책임의 틀, 고객 인사이트
        <ul>
          <li>고객 맞춤 리더십 vs 기업 맞춤 운영 리더십 : Digital Transformation을 위해선 디자인, 기술, 비즈니스 간 통합 필요</li>
        </ul>
      </li>
      <li>기업이 디지털 구조로 재정의 : 경험 디자인 중요성 ↑ (경험 차별화가 경쟁력으로), 디자인 제공 방식 변화 (Gig Economy)</li>
    </ul>
  </li>
  <li>
    <h3 id="기업에서-디자인이-차지하는-위상의-변화">기업에서 디자인이 차지하는 위상의 변화</h3>
    <ul>
      <li>기업 디자인의 탄생 : 1950s, GM에서 최초의 디자인 담당 임원으로 Harley Earl를 부사장으로 임명</li>
      <li>제품 디자인 전문 기업의 탄생 (조형적 디자인 영역에서 시스템 &amp; 서비스 디자인 영역으로)</li>
      <li>디자인 씽킹과 디자인 전략의 탄생 : 2005, 스탠포드 디자인 스쿨 설립 + 2008, 로저 L 마틴 “비즈니스의 디자인”</li>
      <li>비즈니스 전략으로서의 디지안 씽킹 재정의 : 2015, 팀 브라운 “디자인적 사고” (HBR)</li>
    </ul>
  </li>
  <li>
    <h3 id="디자인-분야에서-대두되는-주요-이슈">디자인 분야에서 대두되는 주요 이슈</h3>
    <ul>
      <li>수집된 데이터를 기반으로 한 개별 맞춤형 디자인</li>
      <li>웨어러블 &amp; 임베드 &amp; 키네마틱 디자인</li>
      <li>디자인씽킹이라는 인간 중심의 디자인 철학을 바탕으로 한 새로운 경험 창출</li>
      <li>개발 초기부터 여러 이해 당사자가 참여하는 co-디자인의 역동적 협업</li>
    </ul>
  </li>
  <li>기술, 비즈니스, 디자인의 융합 : 최소 2개 이상 영역 간 상호 보완을 통한 사용자의 경험 창출
    <ul>
      <li>디자인 &gt; 전통적 디자인</li>
      <li>기술 &gt; 컴퓨테이셔널 디자인</li>
      <li>비즈니스 &gt; 디자인씽킹</li>
    </ul>
  </li>
  <li>
    <h3 id="현장에서-디자이너에게-원하는-능력">현장에서 디자이너에게 원하는 능력</h3>
    <ul>
      <li>비즈니스 및 재무 감각</li>
      <li>리더십과 팀워크</li>
      <li>독자적인 리서치 및 분석 능력</li>
    </ul>
  </li>
  <li>디자인 : 시각적인 만족과 감성적인 가치 제공
    <ul>
      <li>아이디어를 하나의 형태로 구체화하는 실행적 측면 : 드로잉, 모델링, 스케치</li>
      <li>구체화된 하나의 작품을 분석하는 창조적 측면 : 하나의 외도, 계획, 목적<br /><br /></li>
    </ul>
  </li>
  <li>디자인의 의미 : 계획하다, 목적으로 하다, 지시하다를 뜻하는 그리스 단어에서 유래
    <ul>
      <li>심적 계획 : 생각을 실행하기 위한 계획 (객관적, 비시각성 강조)
        <ul>
          <li>누구나 의도를 갖고 수행하는 활동들은 모두 디자인
            <ul>
              <li>“사람들은 모두 디자이너”</li>
              <li>“디자인은 의미 있는 질서  위한 의식적이고 지속적인 노력”</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>지적 조형 활동 : 조형적 특성을 부여하는 창조적 활동 (주관적, 시각성 강조)
        <ul>
          <li>누구나 현존하는 상황을 “더 나은 상황”으로 바꾸려고 하는 일련의 행동을 고안하는 것이 곧 디자인
            <ul>
              <li>주어진 환경을 장식하려는 인간의 욕구와 관련지어 조형활동으로서의 디자인의 시각성 강조</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>디자인은 새로운 아이디어를 만드는 창의성과 아이디어를 성공적으로 활용하는 혁신을 연결해, 아이디어를 매력적인 제안으로 만들어 브랜드 가치 생산<br /><br /></li>
    </ul>
  </li>
  <li>미술 vs 디자인
    <ul>
      <li>창작 동기 : 작가의 자기 표현 vs 사용자의 욕구 충족</li>
      <li>목표 : 하나의 작품 vs 제시된 문제 해결</li>
      <li>감상 : 다양한 해석 vs 원하는 메시지 전달</li>
      <li>참여자 : 작가 vs 디자인 그룹<br /><br /></li>
    </ul>
  </li>
  <li>디자인의 대상에 대한 견해 : 지적 조형 활동으로만 간주 (하나의 특정한 목표, 인공물의 형태 구체화)
    <ul>
      <li>디자인 대상의 확장 : 삶의 질 향상을 위해 인공물을 계획하고 조형하는 활동
        <ul>
          <li>단순 장식이나 추상적 기획과 달리 아름다움과 실용성 겸비</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="산업혁명과-디자인-패러다임의-관계">산업혁명과 디자인 패러다임의 관계</h3>
    <ul>
      <li>1차 산업 혁명 : 인간의 노동력에서 증기 기관으로 기계화
        <ul>
          <li>장식 (Decoration) : 신고전주의, 미술공예운동, 생활 속 아름다움</li>
        </ul>
      </li>
      <li>2차 산업 혁명 : 전기의 사용과 내연기관의 도입으로 대량 생산과 조립 라인이 가능해짐
        <ul>
          <li>스타일링 (Styling) : 생산된 제품의 기능에 맞는 형태를 스타일링 (프디즘, 유선형 디자인)</li>
        </ul>
      </li>
      <li>3차 산업 혁명 : 컴퓨터로 촉발된 디지털 혁명과 자동화 (3A : 언제나, 어디서나, 누구나)
        <ul>
          <li>인터랙션 (Interaction) : 사용자 중심으로 한 UI/UX (사용자 편의성 고려)</li>
        </ul>
      </li>
      <li>4차 산업 혁명 : 정보통신 기술의 급격한 발전으로 기계, 사람, 인터넷 간 상호 연결
        <ul>
          <li>융복합 (Convergence) : 최첨단 기술을 하나의 틀로 재조합하는 융합적 역할자<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>디자인의 대상
    <ul>
      <li>의사소통 (Messages)
        <ul>
          <li>그래픽 디자인 : 시각적 정보의 가치 증진 (웹디자인, 3D 미디어 아트)</li>
          <li>제품 디자인 : 제품과 서비스의 특징 창출 (제퍼슨 블룸, 비스포크)</li>
          <li>환경 디자인 : 건축물이나 시설물에서 광범위한 지역에 이르는 다양한 영역 포괄 (수직 정원 아파트, 행복경관 프로젝트)<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>경험에 관한 디자인 : 생산품 구매를 넘어, 정서적‧심리적 만족과 같은 서비스 경험 요구
    <ul>
      <li>생산자 중심에서 사용자 중심으로, 기술 중심에서 인간 중심으로</li>
      <li>서비스 디자인 : 서비스를 통해 경험하게 되는 유‧무형의 요소 및 경로를 실체화해 고객에게 서비스를 더 높은 가치로 여기게 함<br /><br /></li>
    </ul>
  </li>
  <li>인간의 욕구와 디자인 : 의식주가 생존 조건이라면, 진선미는 품격 있는 삶을 위한 것
    <ul>
      <li>매슬로의 욕구 7단계 이론 : 생존을 위한 디자인 / 생활을 위한 디자안 / 품격을 위한 디자인 / 자아 실현을 위한 디자인
        <ul>
          <li>생리적 / 안전 / 소속감‧사랑 / 존경 : 결핍 욕구</li>
          <li>(인지적) / (심미적) / 자아 실현 : 성장 욕구
            <ul>
              <li>인지적 욕구 : 지식, 기술, 주변 환경에 대한 호기심과 이해의 욕구</li>
              <li>심미적 욕구 : 질서와 안정을 바라며 아름다움을 추구하는 욕구</li>
            </ul>
          </li>
          <li>생존을 위한 디자인 : 그 지역에서 쉽게 얻을 수 있는 재료들을 전통적인 방식으로 가공해 디자인 (버내쿨러 디자인)</li>
          <li>생활을 위한 디자안 : 편리하고 안락한 삶을 살고자 하는 욕구가 높아짐 (수돗물을 위한 수도꼭지)</li>
          <li>품격을 위한 디자인 : 인지적, 심미적 욕구가 높아져 고품격 디자인 선호 (미네랄 워터나 심층수)
            <ul>
              <li>심미적 욕구에 대한 인식 전환 : 컴퓨터 그래픽 S/W와 3D 프린팅 기술의 발전으로 복잡한 형태를 쉽게 생산 가능</li>
            </ul>
          </li>
          <li>자아 실현을 위한 디자인 : 사용자 편의성이 고려되어 개인의 자아 실현 요구를 충족 가능<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>21세기 경제의 이해 1 : 경험 경제 (제품이나 서비스에 ‘경험’이라는 가치를 더해야 함)
    <ul>
      <li>경제적 가치의 진보 : 제품의 원활한 공급과 유통, 가격 관리, 품질 향상, … (진정성 창출)</li>
      <li>슈미트의 경험적 그리드 모형 : 감각, 감성, 행동, 관계의 경험을 제공하기 위한 경험 제공 수단
        <ul>
          <li>둘 이상의 혼합으로 이루어진 최상위 개념으로 “총체적 경험”의 개념 제시</li>
        </ul>
      </li>
      <li>경험을 다루기 위한 3가지 중점 요소
        <ul>
          <li>사람을 알아야 함 : 내면의 동기와 욕구를 파악해야</li>
          <li>전략적 사고가 필요 : 사용ㅈ,가 어떻게 경험했는지 중요시해야</li>
          <li>구체적 디자인이 필요 : 경험을 이루는 다양한 요인을 모두 포괄할 수 있어야<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>21세기 경제의 이해 2 : 변혁 경제 (더 나아가 고객의 삶의 변화에 대한 가치 추구)
    <ul>
      <li>경제적 가치의 진보 : 제품의 원활한 공급과 유통, 가격 관리, 품질 향상, … (건강, 부, 지혜 등 고객의 삶의 변화)</li>
      <li>고객이 곧 제품 : 개개인에게 실효성이 있는지, 시간에 따른 지속성이 있는지가 중요시
        <ul>
          <li>판매자는 이런 열망을 이해하고 이룰 수 있도록 하는 유도자 역할 수행</li>
        </ul>
      </li>
      <li>경제적 가치의 진보에 따른 경제의 피라미드 : 연속적으로 상품들이 형성
        <ul>
          <li>범용품 제조업자 : 재료가 어디에 았는지 파악하고 추출</li>
          <li>재화 제조업자 : 적합한 범용품의 원천을 개발</li>
          <li>서비스 공급자 : 무형의 활동을 위한 제품의 구성을 만듦</li>
          <li>경험 연출가 : 어던 서비스가 사용자를 매료시키는지 설명</li>
          <li>트랜스포메이션 유도자 : 목표 달성으로 인도하기 위한, 삶을 변화시키는 경험에 대해 판단<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>21세기 경제의 이해 3 : 공유 경제 (개인이 소유하지 않고 필요한 만큼 빌려 쓰고 이를 빌려주는 협력적 소비 기반)
    <ul>
      <li>경제적 가치 : 개인의 가처분 소득 상승 기여</li>
      <li>환경적 가치 : 대량 제품 제작의 필요성 감소</li>
      <li>사회적 가치 : 필요 시에만 서비스를 이용<br /><br /></li>
    </ul>
  </li>
  <li>옴니채널 : 각 유통 채널을 결합해 어떤 채널에서든 같은 매장을 이용하는 것처럼 느낄 수 있도록 한 쇼핑 환경
    <ul>
      <li>각 온라인, 오프라인 가맹점을 연계하는 형태로 구현</li>
    </ul>
  </li>
  <li>O4O : 오프라인을 위한 온라인. 온라인에서의 노하우를 바탕으로 한 오프라인 사업 운영
    <ul>
      <li>온라인과 오프라인이 완전히 결합하는 방식, 오프라인 매장에 온라인 고객 정보 및 첨단 기술 접목<br /><br /></li>
    </ul>
  </li>
  <li>디자인의 경제적 가치 재인식 : 최고 경영층이 다지인 지표를 측정하고 리드하는 디자인에 대한 분석적 접근 적용
    <ul>
      <li>아사히야마 동물원 : 각 동물의 고유한 습성을 최대한 반영하여 인간과 동물이 공생하는 동물원 디자인
        <ul>
          <li>디자인을 통한 경험의 진정성 추구 : 자연성, 독창성, 특별함, 연관성, 영향력</li>
        </ul>
      </li>
      <li>A better A &amp; E : 영국의 응급실 폭력 사건을 줄이는 디자인
        <ul>
          <li>환자 : 안전을 보장받고 싶은 욕구, 진료 순서를 알고 싶은 욕구 (인지적 욕구)
            <ul>
              <li>응급실 내 진료 과정을 접수, 평과, 치료, 결과의 네 단계로 나눠 상황 정보 안내</li>
              <li>응급 환자와 일반 환자 치료실을 구분하고 응급실 혼잡도 및 지연 정보을 실시간으로 제공</li>
            </ul>
          </li>
          <li>의사 : 환자로부터 자신을 지키고 싶은 욕구 (안전 욕구), 환자에게 존경받고 싶은 욕구
            <ul>
              <li>환자에 대한 대응법 안내서와 응급실 현황 기록판을 만들어 의사가 자신의 역할에 집중할 수 있게끔 함</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>벤츠의 My Service
        <ul>
          <li>관계 &gt; 애프터 세일즈 서비스 : 픽업 트럭 이용이나 수리 기간 동안 사용할 벤츠 제공</li>
          <li>감성 &gt; 감성적 환경 조성 : 벤츠 서비스 센터를 호텔 로비나 카페와 같은 환경 조성</li>
          <li>감각 &gt; 다양한 감각 체험 서비스 제공</li>
          <li>인지 &gt; 상담사를 통해 정비 내역과 예상 출고 시간를 공유받음</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="인간의-사고-유형과-디자인씽킹">인간의 사고 유형과 디자인씽킹</h3>
    <ul>
      <li>경영자 : 순차적 사고 (순차적, 선형적 분석을 통한 사고 방식 &gt; 부정적, 적응적 행동) &gt; 문제 지향 (순응, 신중함)
        <ul>
          <li>수직적 사고 : 기존의 지식이나 경험으로만 분석하고 판단 &gt; 선택적, 순차적 (귀납법, 연역법)</li>
          <li>비즈니스 사고 : 좌뇌, 합리적, 구조적, 분석적, 명확히 정의된 문제를 다룸, 문제 분석이 의사결정으로 연결</li>
        </ul>
      </li>
      <li>디자이너 : 전체적 사고 (전체적, 수평적, 종합적 분석 통한 사고 방식 &gt; 낙관적 혁신적 행동) &gt; 해결 주도 (다양, 실험적)
        <ul>
          <li>수평적 사고 : 창의적 생각을 통해 새롭고 다양한 아이디어를 도출 &gt; 생성적, 비순차적 (귀추법)</li>
          <li>창의적 사고 : 우뇌, 직관적, 감성적, 창작과 표현 활동 중시, 문제 자체가 정의되지 않음, 새로운 아이디어 모색 목표</li>
        </ul>
      </li>
      <li>디자인씽킹 : 문제 해결을 위한 좌뇌와 우뇌를 모두 사용, 분석 및 창작 활동 반복, 불명확하게 정의된 문제 다룸<br /><br /></li>
    </ul>
  </li>
  <li>디자인씽킹의 유래 : 다지아너가 아이디어나 조형적 특성을 창출할 때 조건 및 제약에 구애받지 않고 시각적으로 생각하는 데서 유래
    <ul>
      <li>루돌프 아른하임 : 인간의 사고는 시지각적 역할이 크다고 주장</li>
      <li>피터 로위 : 문제 해결 과정에서는 디자이너처럼 창의적으로 생각해야 한다고 주장</li>
      <li>롤프 패스트 : 순차적 부분과 비순차적 부분의 융합이 중요한 양손잡이 사고 강조</li>
      <li>데이비드 켈리 : 우뇌와 좌뇌의 균형을 중시하는 디자인 사고 통한 문제 해결<br /><br /></li>
    </ul>
  </li>
  <li>디자인씽킹 : 주어진 상황을 보다 더 나은 것으로 만들기 위해 일련의 활동을 고안하는 모든 사람의 노력이 곧 디자인
    <ul>
      <li>개인에서 팀으로, 제품에서 경험으로, 기술과 예술의 융합에서 기술 &amp; 인문학 &amp; 비즈니스의 융복합으로</li>
      <li>디자인 + 사고 : 분석적 사고 기반의 완벽한 숙련과 직관적 사고 근거한 창조성이 역동적으로 상호작응을 이루며 균형
        <ul>
          <li>디자인 사고 프로세스 : 확산 (선택의 여지를 넓힘)과 수렴 (다시 여지를 줄이고 결정)을 계속 루프하는 과정<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Managing as Designing (2004)
    <ul>
      <li>과학적으로 정의된 문제를 기존 사고로 풀 수 있으나, 명확히 정의되지 않은 문제는 디자인씽킹을 통해 해결되어야 함
        <ul>
          <li>Wicked Problems : 명확히 정의되지 않았거나, 정보가 부족하거나, 상황이 계속 변하는 문제들
            <ul>
              <li>Manage Approach : 기회로부터 시작 (Time-to-market), 기능성과 가치 체인</li>
              <li>Design Approach : 니즈로부터 시작 (Wow-to-market), 경험과 고객 여정<br /><br /></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>The Power of Design (2004) &amp; Change by Design (2009)
    <ul>
      <li>디자인 사고는 혁신을 위한 인간중심적 접근법</li>
      <li>인간의 요구사항과 과학기술의 가능성, 비즈니스 성공을 위한 요소를 통합한 것</li>
    </ul>
  </li>
  <li>
    <h3 id="디자인씽킹의-필요성">디자인씽킹의 필요성</h3>
    <ul>
      <li>기업의 혁신을 위한 방법론
        <ul>
          <li>조직의 제품이나 서비스 개발 방식을 사용자 입장에서 변화시킬 수 있으며, 업무 처리 과정과 전략을 혁신할 수 있음</li>
        </ul>
      </li>
      <li>사회의 사람들과 관련된 문제를 해결하기 위한 방법론
        <ul>
          <li>Wicked Problems의 해결을 위해 합리적이고 가능한 최선의 대안으로 이용 가능</li>
        </ul>
      </li>
      <li>개인의 경쟁 우위를 선점하기 위한 방법론
        <ul>
          <li>어떤 문제이든 디자인씽킹으로 접근해 창의적 문제 해결 방법 도출, 높은 경쟁 우위 요소를 확보 가능</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="디자인씽킹의-7가지-특성">디자인씽킹의 7가지 특성</h3>
    <ul>
      <li>누구나 사용 가능</li>
      <li>재미있음</li>
      <li>타인에 공감하는 방법 포함</li>
      <li>활동적으로 문제를 정의</li>
      <li>협업 통한 해결책 모색</li>
      <li>반복적인 프로토타입</li>
      <li>다양한 유형의 문제 해결</li>
    </ul>
  </li>
  <li>
    <h3 id="지식-생산-필터">지식 생산 필터</h3>
    <ul>
      <li>로저 마틴 : “성공적인 기업이 추구해온 혁신의 경로”</li>
      <li>복잡한 문제를 이해하고, 이를 분석적 &amp; 직관적 사고의 조화를 통해 해결
        <ul>
          <li>디자인 사고의 특징인 직관적 사고와 분석적 사고의 균형</li>
          <li>지식 깔때기 : 수많은 의문들이 “탐색”이라는 거름종이를 거치며 지식으로 정제되는 일련의 과정</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="지식-생산-필터의-단계">지식 생산 필터의 단계</h3>
    <ul>
      <li>미스터리 : 현실에서 이해하지 못하는 다수의 현상</li>
      <li>경험 규칙 : 탐구할 영역을 좁혀 광범위한 미스터리를 단순한 형태로 이해할 수 있도록 하는 사고방식
        <ul>
          <li>문제에 대한 불완전하지만 진보된 이해를 표현할 수 있음</li>
        </ul>
      </li>
      <li>알고리즘 : 경험 규칙을 확고한 공식으로 전환시키는 것
        <ul>
          <li>어떤 문제에서 특정한 결과를 도출하기 위해 구체적으로 제시된 절차</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="지식-생산-필터의-탐색-vs-활용">지식 생산 필터의 탐색 vs 활용</h3>
    <ul>
      <li>능동적 행위를 통해 이전에서 다음 단계로 넘어가기 위해 필요한 단계 vs 가치를 현실의 수익으로 전환하기 위해 필요한 단계</li>
      <li>비즈니스 창조 (이전에는 없는 새로운 지식 추구) vs 비즈니스 경영 (기존 지식 바탕으로 현재의 가치 극대화)</li>
      <li>큰 보상을 기대할 수 있으나 리스크가 큼 vs 보상이 크지 않지만 리스크 적음</li>
      <li>직관, 가설 중시, 어려운 일반화 vs 논리, 분석 중시, 쳬계화가 용이</li>
    </ul>
  </li>
  <li>
    <h3 id="탐색과-활용의-관계">탐색과 활용의 관계</h3>
    <ul>
      <li>더 높은 지식 단계로 이동 vs 필터 내의 각각의 지식 단계를 활용
        <ul>
          <li>유기적인 관계를 가진 탐색과 활융을 끝없이 순환시키는 연결고리 : 디자인씽킹</li>
        </ul>
      </li>
      <li>창조적 혁신 강조 : 직관적 사고로 미스터리를 휴리스틱으로 전환해 기업 탄생 vs 계량적 분석 : 분석적 사고로 사업을 정밀화<br /><br /></li>
      <li>ex) 맥도날드와 서브웨이
        <ul>
          <li>스피드 서비스 시스템 구축 : 햄버거 규격화해 메뉴 단순화, 테이크아웃을 통한 시간 단축</li>
          <li>레이 크룩의 메뉴얼화 : 각 점포를 어떻게 운영하며 어떤 방식으로 프랜차이즈할지 규정해 가능성과 다양성 배제</li>
          <li>자연주의의 대두 : 퀵서비스를 유지하면서도, 건강하고 신선한 재료들로 채워진 샌드위치</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="디자인씽킹-마인드셋">디자인씽킹 마인드셋</h3>
    <ul>
      <li>마음가짐은 어떻게 생각하고, 말하고, 느끼고, 믿고, 행동하고 해결하는가에 영향
        <ul>
          <li>디자이너들은 디자인 프로세스에 대해서는 공유하나 프레임워크나 마음가짐이 어떤지 공유하지 않음</li>
          <li>캐롤 드웤 : “여러분이 자신을 바라보는 시각에 의해 여러분의 인생이 바뀐다”</li>
        </ul>
      </li>
      <li>사용자 우선으로 생각하기
        <ul>
          <li>실제 소비자가 된 것처럼 생각하고 그들의 입장이 되어보기 (아마존의 고객 중심 프로세스)</li>
          <li>사용자와의 공감대 형성 : 고객의 입장에서 관찰, 관여, 몰입</li>
          <li>해야 할 것 : 최종 사용자가 어떻게 생각할지 끊임없는 질문, 모든 디자인 결정 재검토, 고객의 입장 되기, 최종 사용자와 끊임없는 소통, 한발 먼저 행동하기, 고객의 문제에 집중</li>
          <li>하지 말 것 : 사무실에서만 고객과 소통, 피드백 무시하기, 최종 사용자에 대해 생각하지 않기, 사업적 목표에 중점 두기, 우리가 최종 사용자를 적응시킨다는 생각</li>
        </ul>
      </li>
      <li>올바른 질문하기 : 기술과 트렌드 중심 사고에서 벗어나 사람과 도구의 근원을 먼저 생각해 소프트한 창의력을 만드는 활동
        <ul>
          <li>최종 사용자에겐 올바른 질문을 해 숨겨진 이슈와 문제를 해결하도록 해야 함</li>
          <li>해야 할 것 : 통상적인 관례를 깨는 질문, 원인 밑에 숨어 있는 동기 찾기</li>
          <li>하지 말 것 : 상사의 의견에 맹목적 동의, 기존 제약에 동의, 최종 사용자이 왜 그런 대답을 했는지 이유 생각하지 않기</li>
        </ul>
      </li>
      <li>여러분이 그럴 수 있다고 믿기 : “디자인은 생각을 시각적으로 구현화시킨 것이다”
        <ul>
          <li>해야 할 것 : 큰 그림을 볼 수 있는 눈과 전체적으로 생각하는 능력 키우기, 결정 사항들을 시각화해보기</li>
          <li>하지 말 것 : 시각화하는 것을 두려워하기</li>
        </ul>
      </li>
      <li>탐험을 주저하지 않기 : 모든 가능성을 탐색하면서 아이디어를 도출하기 위해 다양한 관점으로 생각해야 함
        <ul>
          <li>해야 할 것 : 답이 하나 이상 있음을 상기하기, 끊임없이 브레인스토밍하기, 실수와 경험에서 배우기, 영감을 흡수하기, 아이디어를 공유하고 협업하기</li>
          <li>하지 말 것 : 기존의 제약이나 관례 따르기, 대세에 따라 생각하고 움직이기</li>
        </ul>
      </li>
      <li>프로토타입을 이용해 테스트하기 : 문제가 있으면 다시 고쳐서 테스트하면 됨
        <ul>
          <li>해야 할 것 : 모든 것을 실험으로 생각하기, 모든 사람이 아이디어에 동의하지 않을 수 있다는 점을 미리 인식하기, 최종 사용자의 피드백을 통해 빠르게 반복적으로 보완하기</li>
          <li>하지 말 것 : 완벽한 솔루션을 만드는 데에 많은 시간 투자하기, 첫 시도에 실패하는 것을 두려워하기, 아이디어에 대해 타인의 피드백을 묻지 않기, 최종 테스트로 모든 이슈를 넘기기, 자신의 아이디어에 방어적 자세 취하기</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="디자인씽킹-모델">디자인씽킹 모델</h3>
    <ul>
      <li>문제를 해결하기 위한 솔루션 기반 접근 방식을 제공하는 방법론</li>
      <li>디자인 카운슬의 더블 다이아몬드 : 아이디어와 사고가 확장되고 수렴되는 과정을 두개의 다이아몬드로 표현
        <ul>
          <li>발견 : 문제에 대한 통찰력 (발산), 이해 관계자 중심으로 문제의 영감을 찾음</li>
          <li>정의 : 특정 영역에 집중 (수렴), 수집한 영감과 정보들을 재검토하고 선택</li>
          <li>개발 : 잠재적인 솔루션 (발산), 디자인 해결책이 개발되고 브레인스토밍, 프로토타입 등 디자인씽킹 툴로 테스트</li>
          <li>전달 : 효과적인 솔루션 제공 (수렴), 최종 컨셉을 테스트하고 제품을 생산 및 출고</li>
        </ul>
      </li>
      <li>스탠포드 디스쿨의 디자인사고 과정 : 공감 &gt; 정의 &gt; 아이디어 도출 &gt; 모형 제작 &gt; 테스트
        <ul>
          <li>프로토타입 단계 강조 : 해결책이 완성되어 전달된 뒤에도 다음 버전을 위한 개선점 관련 실험을 지속해야 함</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="디자인씽킹-프로세스의-특징">디자인씽킹 프로세스의 특징</h3>
    <ul>
      <li>단기간의 작업이 아님 : 목적 달성 위해 구성원들의 열성적 참여와 시간과 노력 필요 (디자인 씽킹과 브레인스토밍은 다름)</li>
      <li>반본적인 작업임 : 도출된 아이디어에서 비롯된 다양한 측면의 발견을 하기 위한 프로토타입의 제작</li>
      <li>발산적 사고와 수렴적 사고 과정 포함 : 공감 및 아이디어 도출의 발산적 사고와 프로토타입 테스트 단계의 수렴적 사고</li>
      <li>모든 참여자의 협업이 필요 : 디자인 사고 과정을 촉진하는 퍼실리테이터와 각 단계의 담당자들이 서로에 책임 전가하면 안됨</li>
      <li>각 단계에는 각각의 산출물 : 평가기준이 될 수 있음, 참여하는 프로젝트의 특성을 감안해 이를 선택적으로 작성<br /><br /></li>
    </ul>
  </li>
  <li>디자인씽킹 프로세스의 활용
    <ul>
      <li>공감 : 다른 사용자들이나 직면한 문제에서 배운다는 마음가짐 필요, 배경 지식을 익히고 인사이트을 통해 다음 단계로 나아감
        <ul>
          <li>활동 : 사용자 인터뷰, 디자인 에스노그라피 (관찰, 쉐도잉), 프로브, 이해관계자 워크샵</li>
          <li>도구 : 인터뷰 및 관찰 체크리스트, 기록할 수 있는 도구들</li>
          <li>산출 : 애스노그라피 및 프로브, 워크샵 결과물 (발견한 문제 및 사용자 피드백, 공감지도)</li>
        </ul>
      </li>
      <li>정의 : 인사이트로부터 의사결정을 수행하는 수렴적 사고 과정, 이해관계자들에게 올바른 질문 던짐
        <ul>
          <li>활동 : 클러스터링 (수집한 정보 내용을 다양하게 배치해 개별로 보았을 때 미발견한 연결점을 찾음, Bottom-Up 형식)
            <ul>
              <li>어떤 문제? 어떻게 발생? 어떤 상황인지? 도움을 줄 대상자? 지향점은 어디? 가치 제안 요소는 무엇?</li>
            </ul>
          </li>
          <li>도구 : 문제들 간의 관계성과 연결성을 나타낼 도구나 클러스터링을 진행할 수 있는 포스트잇 혹은 화이트보드</li>
          <li>산출 : 페르소나, 이해관계자와 고객여정 맵, 기회 지도, 시스템 맵</li>
        </ul>
      </li>
      <li>아이디어 도출 : 많은 아이디어를 도출하고 미래의 불가능에 대해 도전과 상상력을 발휘해야 함
        <ul>
          <li>활동 : 브레인스토밍, 바디스토밍, 여섯가지생각모자</li>
          <li>도구 : 페르소나, 고객여정 맵을 참고로 한 다양한 브레인스토밍 도구</li>
          <li>산출 : 우선순위 지도, 아이디어 시트, 컨셉 스케치 및 시나리오</li>
        </ul>
      </li>
      <li>프로토타입 : 도출된 아이디어 가시화 및 사용자 테스트에 활용해 문제점을 보완하고 최적의 해결책을 탐색
        <ul>
          <li>활동 : 공간적, 물리적 프로토타입 제작이나 경험 프로타이핑, 페이퍼 프로토타이핑을 통한 사용자 테스팅</li>
          <li>도구 : 다양한 프로토타이핑 도구</li>
          <li>산출 : 여러 형태의 프로토타입 및 와이어 프레임, 스토리보드</li>
        </ul>
      </li>
      <li>테스트 및 전달 : 프로토타입에 대한 테스트를 토대로 피드백 제공받음, 고객에 서비스를 전달하기 위한 전달 체계를 수립
        <ul>
          <li>활동 : 유지보수를 위한 최종적인 비전과 미션의 수립 및 현장에서의 효고성 검증</li>
          <li>도구 : 완성된 서비스 결과물, 전달하기 지도 기본 시트 (비즈니스 모델 캔버스나 블루 프린트 형식 등)</li>
          <li>산출 : 비즈니스 모델 캔버스, 서비스 블루프린트, 서비스 평가 지표<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>서비스 중심 시대의 도래
    <ul>
      <li>서비스 기업의 빠른 증가 : 서비스 경제화에 따른 서비스 시장의 확대, 제조 기업의 서비스 기업화 급속 이행</li>
      <li>제품-서비스 통합 시스템 : 제품과 서비스를 협력하여 고객을 만족시키고 지속 가능한 가치를 창출하는 비즈니스 모델
        <ul>
          <li>제품 지향 : 제품을 판매한 뒤 제품 수명 주기에 걸쳐 다양한 서비스를 제공하는 유형
            <ul>
              <li>제품 지향 PSS : 제품 판매 후 지원 서비스, 제품 구매 및 활요 조언 컨설팅</li>
            </ul>
          </li>
          <li>사용 지향 : 제품의 사용권만을 판매
            <ul>
              <li>사용 기한과 권한에 제약을 주거나 주지 않을 수 있고, 여러 명이 동시에 사용하는 Polling 방식도 있음)</li>
              <li>사용 지향 PSS : 제품 리스 서비스, 제품 임대 및 공유 서비스, 제품 동시 활용 서비스, 월 정액제 서비스</li>
            </ul>
          </li>
          <li>결과 지향 : 제품 사용을 통해 얻고자 하는 결과를 보장, 고객은 그에 따른 비용을 지불
            <ul>
              <li>결과 지향 PSS : 활동 대행에 따른 비용 부과, 서비스의 성과에 따른 비용 부과<br /><br /></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>서비스의 영역
    <ul>
      <li>민간 부문 : 산업 디자인
        <ul>
          <li>제조 산업 : 제조 서비스화의 실현 (생활 건강관리 서비스 플랫폼, 헬스 케어 IT 서비스)</li>
          <li>서비스 산업 : 서비스 산업의 고도화, 그리고 이에 비롯된 신규 서비스의 생성</li>
        </ul>
      </li>
      <li>공공 부문 : 시민 중심의 서비스를 전달하고 사회의 다양한 문제 해결을 위해 노력하는 공공 디자인<br /><br /></li>
    </ul>
  </li>
  <li>서비스 디자인 : 서비스를 위한 디자인 (UI, UX, CX 디자인과 같은 경험 디자인을 포괄하는 서비스의 모든 것에 대한 디자인)
    <ul>
      <li>고객 중심의 맥락적인 리서치를 근거으로 창의적이고 협력적인 디자인 방법으로 서비스 경험을 향상</li>
      <li>유무형적 요소를 구체적이고 물리적으로 디자인해 통합해 고객이 서비스를 쉽고 효율적으로 누리게 할 좋은 생각 창출</li>
      <li>인간 중심적이고 전체론적인 접근 방식으로 체계적이고 반복적인 창조 프로세스와 방법<br /><br /></li>
    </ul>
  </li>
  <li>서비스 디자인 영역 : 각 영역에서 목표하는 사용자를 중심에 두고 디자인을 함 (사용자 중심의 혁신)
    <ul>
      <li>유저 인터페이스 디자인 : 타이포그래피, 색상 등 시각적 요소와의 상호작용
        <ul>
          <li>시각적 디자인을 위한 미학적이고 창의적인 사고 : “이 요소에 어떤 글꼴이나 색상을 사용해야 할까?”</li>
          <li>와이어 프레임, 디지털 프로토타입</li>
        </ul>
      </li>
      <li>유저 경험 디자인 : 모든 종류의 디자인 플랫폼 및 디바이스와의 상호작용
        <ul>
          <li>인간의 행동에 대한 호기심과 공감, 의사소통 및 협업 능력 : “이 기능이 어떻게 삶을 더 편하게 수 있을까?”</li>
          <li>와이어 프레임, 디지털 프로토타입</li>
        </ul>
      </li>
      <li>커스텀 경험 디자인 : 디지털뿐만이 아닌 곡개이 서비스와 상호 작용할 때 만나는 모든 접접
        <ul>
          <li>문제 해결과 분석 및 예측 능력, 비즈니스 목표와 사용자 니즈 조정 : 우리 브랜드와 상호작용할 때 고객의 여정은?”
            <ul>
              <li>비즈니스 계획, 마케팅 및 브랜드 전략</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>서비스 디자인 ; 디지털 상호 작용, 고객 상호 작용을 결합 가치를 창출하는 방법
        <ul>
          <li>의사소통 능력, 변화 적응 능력, 호기심과 공감 능력 : “좋은 서비스를 지속적으로 제공하기 위한 일관된 프로세스는?”
            <ul>
              <li>비즈니스 모델, 서비스 블루프린트<br /><br /></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>서비스 : 비단 상업 서비스만이 아닌 복지의 차원도 해당
    <ul>
      <li>서비스 공급자가 결과물이나 경험 등 이익을 주면, 서비스 사용자가 금전적인 교환가치를 받음</li>
      <li>서비스 중심 로직 : 제품 가치와 서비스 가치를 동등하게 보고 공급 가치 창조를 통해 서비스 가치 제안
        <ul>
          <li>서비스는 상품을 포함하기에 상품과 서비스의 경계선은 불분명</li>
          <li>vs 제품 중심 로직 : 제품 대신 경험을 상품화, 부가가치보단 공동가치, 공급 체인 대신 가치 창조 네트워크를 가치 체인</li>
        </ul>
      </li>
      <li>서비스 상호 작용 : 사용자가 서비스를 만났을 때 발생</li>
    </ul>
  </li>
  <li>
    <h3 id="진실의-순간">진실의 순간</h3>
    <ul>
      <li>서비스가 지배하는 세상에서 기업의 성공은 고객과의 상호작용이 어떻게 관리하는지에 좌우</li>
      <li>고객이 공급자에 접촉하는 모든 순간이 서비스 제공 기업과 그 품질에 대해 인상을 받는 순간
        <ul>
          <li>현재 발생하는 상호작용의 퀄리티에 따라 크게 좌우</li>
          <li>구매 자극 &gt; 0번째 순간 : 사회적 탐색 &gt; 1번째 순간 : 구매 &gt; 2번째 순간 : 사용 &gt; 궁극적 순간 : 경험 공유<br /><br /></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>IHIP 프레임워크
    <ul>
      <li>무형성 : 서비스는 보거나 만질 수 없음 &gt; 가시화 : 서비스가 눈에 보이게끔 해야 함</li>
      <li>이질성 : 서비스는 경험하는 사람마다 다름 &gt; 표준화 : 일관성 있는 서비스를 제공해야 함</li>
      <li>비분리성 : 서비스는 생산과 사용 시점이 분리 안됨 &gt; 고객 접점 관리 : 사용자가 서비스를 경험한 모든 접점 파악</li>
      <li>소멸성 : 서비스는 사용하지 않으면 사라짐 &gt; 경험 가치 : 오랫동안 잊히지 않는 경험을 제공해야 함</li>
    </ul>
  </li>
  <li>서비스 접점 : 사용자가 물리적 접점을 통해 서비스와 상호작용할 때 발생, 잠재적으로 고객 만족 및 충성도 결정
    <ul>
      <li>사용자에게 신뢰 형성, 서비스 품질 강화, 브랜드 아이덴티티 구축, 고객의 높은 충성도 확보 가능</li>
    </ul>
  </li>
  <li>
    <h3 id="서비스-오퍼링">서비스 오퍼링</h3>
    <ul>
      <li>고객들이 원하는 서비스를 가시화해 고객에게 통합적으로 제공하는 개념
        <ul>
          <li>궁극적으로 섭스 공급자와 서비스 사용자 간에 공동으로 생성된 결과</li>
          <li>서비스 제고 업체가 사용자에게 제공하는 가치 제안</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="터치-포인트">터치 포인트</h3>
    <ul>
      <li>고객이 전체 서비스 경험 과정에서 거치는 물리적인 것, 인적 상호작용, 커뮤니케이션의 모든 것</li>
      <li>고객과 공급자 간 다양한 유형의 접촉점을 정의하고 시각화시켜 효과적으로 관리하기 위함
        <ul>
          <li>사람 : 서비스 제공자인 매장 직원, 배달원</li>
          <li>정보 : 서비스를 경험하며 접하는 브랜드, 미디어, 사인물</li>
          <li>제품 : 고객이 서비스를 경험하며 접하는 도구적 개념의 제품</li>
          <li>공간 : 고객이 경험하는 서비스 공간 (서비스 경험 구체화)</li>
        </ul>
      </li>
      <li>터치 포인트 휠 모형 : 브랜드나 서비스의 터치포인트 구성 현황을 효과적으로 파악하고 계획할 수 있는 도구</li>
      <li>여정에 따른 터치포인트 : 접촉할 수 있는 모든 장소와 시간으 ㅣ목록을 작성해 고객의 접점을 파악</li>
      <li>터치포인트 매트릭스 : 사용자의 여정의 각 단계에 따른 개별적 터치포인트를 연결한 시각적 틀 (터치포인트 경로 시각화)<br /><br /></li>
    </ul>
  </li>
  <li>서비스 디자인
    <ul>
      <li>관점 : 기업과 고객 간의 균형</li>
      <li>목적 : 고객의 잠재적인 니즈와 이해관계자의 욕구 발견 및 표준화</li>
      <li>방법 : 고객 관찰, 스토리보드, 페르소나, 고객 여정 지도, 서비스 블루 프린팅</li>
      <li>바탕 : 디자인 사고</li>
      <li>결과 : 시각화된 보고서 (즉시 적용 가능한 결과)</li>
      <li>태도 : 통합적 태도, 사용자가 느끼는 감성, 심리 중심의 관점</li>
      <li>내용 : 디자인 리서치, 디자인 개발, 비즈니스 모델 개발, 제품과 서비스의 혁신<br /><br /></li>
    </ul>
  </li>
  <li>서비스디자인 방법론 : 디자인씽킹 프로세스 5단계에는 각각의 방법론이 제시되어 있음
    <ul>
      <li>공감 : 사용자 또는 상황에 대한 공감 (관찰, 만남, 질문, 경청)</li>
    </ul>
  </li>
  <li>
    <h3 id="디자인-에스노그라피">디자인 에스노그라피</h3>
    <ul>
      <li>연구자 본인의 선입관을 최대한 배제한 상태에서 대상의 사회적 의미와 일반적 행동을 관찰하는 기법
        <ul>
          <li>인류학 기반 : 외부의 영향이 없는 환경에서 사람들의 일상적 행동이나 그 기반이 되는 사회적 의미를 탐색</li>
          <li>사용자 경험 조사 도구 : 프로젝트의 목적에 맞게 효율적으로 활용하는 방법을 고안하기 위해 정립</li>
        </ul>
      </li>
      <li>“무엇을 디자인할 것인가?”를 정의하는 초기 의사 결정 단계에서 중요한 역할을 함</li>
      <li>디지털 기술의 보급으로 디자인 에스노그라피의 활용 범위도 사람들의 일상으로 확장</li>
      <li>디자인 프로젝트의 목적과 관련된 대상과 현상만을 집중해 관찰하기에 조사 기간이 짧음</li>
      <li>새로운 디자인 기회을 모색하는 것을 목적하기에, 그 해석도 디자인 해결책을 위한 시사점을 중심으로 진행</li>
    </ul>
  </li>
  <li>
    <h3 id="공감-1--디자인-에스노그라피의-관찰-4단계">“공감” (1) : 디자인 에스노그라피의 관찰 4단계</h3>
    <ul>
      <li>관찰 초첨 잡기 : (“어떤 것을 관찰해야 하는가?”) 장소 중심, 사람 중심, 사물 중심, 활동 중심</li>
      <li>관찰하며 기록하기 : 있는 그대로 기록하고 추측한 내용은 구분, 본 것은 빠르게 메모하고 사진이나 영상은 보조적으로 사용</li>
      <li>관찰 내용 공유하기 : 관찰하고 기록한 내용 중 가장 인상 깊은 부분을 공유하면서 cross-check, 그 현상의 의미 해석</li>
      <li>풍부한 기술을 토대로 맥락을 이해하기 : 현장의 고유한 맥락 및 상황적 조건과 함께, 내용의 의미를 체험적으로 심도 있게 해석<br /><br /></li>
    </ul>
  </li>
  <li>디자인 에스노그라피 마인드셋
    <ul>
      <li>스스로 관찰 도구 되기 : 자기 자신이 관찰 도구라 생각 (관찰자의 마인드셋, 민감함, 통찰력이 다지인 에스노그라피를 좌우)
        <ul>
          <li>경험을 통한 결과물이기에 연역적으로 아이디어를 만드는 것과는 다름을 이해</li>
          <li>샹세하게 관찰하되 항상 더 큰 범주의 맥락에서 이해</li>
          <li>섣부른 판단을 보류하고 경험한 것만을 최대한 상세하고 풍부하게 기술</li>
          <li>피상적 관찰을 피하기 위해 사용자의 입장에서 현장과 상황을 보기 위해 노력</li>
        </ul>
      </li>
      <li>객관적인 관찰이 불가능함을 인지 : 관점이나 가정 없는 관찰은 어렵기에, 미리 자신이 선입관을 갖고 있다는 사실을 인식</li>
      <li>자신의 관점과 선입관 인식 : 관찰하기 전 자신의 배경과 관찰 대상에 대한 경험을 자가 판단 (자기 에스노그라피)</li>
      <li>“무엇을” 하는지를 넘어서 “어떻게” 하는지를 관찰 : 그것을 “어떻게” 하는지를 아주 세밀하게 관찰</li>
    </ul>
  </li>
  <li>디자인 에스노그라피 팁
    <ul>
      <li>나중에 기억해낼 수 있도록 최대한 풍부하게 기록할 것</li>
      <li>시공간적 환경이 어떻게 구성되어 있는지 상세하게 관찰할 것</li>
      <li>사람들의 사회적 관계를 이해하는 것이 중요하다는 것을 인지하고 사람들 간의 상호 작용에 관심을 가질 것</li>
      <li>협력이 이루어지는 방식에 관심을 갖고 사람들이 어떻게 협력하고 행동을 조정하는지 관찰할 것</li>
      <li>문제가 발생하는 상황, 그리고 그 문제를 해결하기 위한 사람들의 행동을 통해 그들만의 방식을 발견할 것</li>
    </ul>
  </li>
  <li>
    <h4 id="에스노그라피-방법론">에스노그라피 방법론</h4>
    <ul>
      <li>장소 중심 : 그대로 보고 본인에게 편한 다양한 방법으로 기록
        <ul>
          <li>미스터리 쇼핑 : 고객 접점 직원이 실제 고객으로 인지할 수 있도록 고객인 척 연기 (직접 관찰, 간접 관찰)</li>
          <li>몰래 관찰하기 : 상황이나 장소에 적응하고 장기간이 지나면 보이지 않는 패턴이나 예상칯 못한 상황 관찰 가능성</li>
          <li>타운워칭 : 사용자들을 만날 수 잇는 장소로 직접 나가 그들의 행동 특성, 이동 동선, 라이프스타일, 트랜드 확인</li>
        </ul>
      </li>
      <li>사람 중심 (실제 환경과 인공적 환경, 연구자 및 참여자 제어, 그리고 인터뷰어의 수로 구분)
        <ul>
          <li>맥락적 인터뷰 : 관찰자가 관찰 대상자를 직접 현장에서 대면
            <ul>
              <li>관찰 대상자가 능동적으로 참여
                <ul>
                  <li>생소한 상황 혹은 용어 설명</li>
                  <li>사물의 사용 방식을 설명하거나 재연</li>
                  <li>행동이나 현상의 이유, 앞두의 맥락을 전반적으로 설명</li>
                </ul>
              </li>
              <li>조사 대상의 선정 : 주제와 친숙하거나, 아니면 아예 관련 없는 사람
                <ul>
                  <li>자연스러운 행동, 욕구, 필요를 완전히 이해할 수 있도록 도움</li>
                </ul>
              </li>
              <li>맥락적 인터뷰 시 유의할 점
                <ul>
                  <li>가능한 사용자가 서비스를 이용하는, 실제 장소와 가까운 곳에서 인터뷰를 할 것</li>
                  <li>대상자가 인터뷰를 주도하는 것이기에 인터뷰 대상자와의 파트너십을 맺을 것</li>
                  <li>인터뷰 대상자와 함께 분석하고 그에 대한 자의적인 해석은 자제할 것</li>
                  <li>대화가 명확한 초점에서 벗어나지 않도록 이야기의 중심을 놓치지 말 것</li>
                </ul>
              </li>
              <li>맥락적 인터뷰 기법 : 보여달라고 하기, 그려달라고 하기, “왜” 다섯 번 하기, 생각나는 대로 말하기</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>활동 중심
        <ul>
          <li>쉐도잉 (그림자처럼 밀착해 조사 대상을 따라다니고 참가자들의 일상을 엄밀히 관찰)
            <ul>
              <li>장소 관찰의 활용 : 쉐도잉한 후 흥미로운 지점을 방문하거나 방문객이 모이는 곳을 관찰한 후 특정 사람을 쉐도잉</li>
              <li>피어 쉐도잉 : 지인이 관찰 대상자가 되어 보다 편안한 상태로 유도</li>
              <li>쉐도잉 시 유의할 점
                <ul>
                  <li>관찰자는 조사 대상자에게 사전에 미리 동의를 구해야 함</li>
                  <li>관찰 내용을 정리하고 기록하는 과정에서 조사 대상자의 권리를 침해하지 않도록 주의해야 함</li>
                  <li>프로젝트 소개 및 동의를 구할 때 평가받는 느낌을 주지 않게 함</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>하루 살아보기 : 온종일 관찰 대상자의 살에 몰입해 행동 하나하나에 공감
            <ul>
              <li>촉각을 강조한 인터페이스와 같은 아이디어로 이어져 문제 해결의 출발점이 될 수 있음</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>사물 중심 : 사물 분석 (사물이 가진 물리적, 사회적, 문화적 맥락을 이해)
    <ul>
      <li>재료 분석 : 재질 구성, 내구성, 패턴, 폐기 가능성 등을 다룸</li>
      <li>미학 분석 : 외향에 대한 주관적 평가는 물론, 역사적 조사 포함</li>
      <li>상호작용 분석 :기능적, 행동적 특성에 대해 분석해 새로운 기회 포착<br /><br /></li>
    </ul>
  </li>
  <li>비디오 에스노그라피 : 카메라를 통해 그들의 행동과 태도를 촬영해 관찰하는 방법론
    <ul>
      <li>어떤 상황에 느끼는 감정을 전달할 수 있다고 믿으며, 감각 어휘를 확장하는 도구로 비디오를 사용
        <ul>
          <li>세밀하게 관찰하고 해석하는 게 가능하고 신뢰도가 높으며, 사용자나 이해 관계자들과 함께 보며 깊은 해석 가능</li>
          <li>설명과 동의를 구하는 윤리적 상황 (촬영을 의식해 부자연스러운 행동 가능성, 촬영 집중으로 중요한 순간 놓칠 가능성)</li>
        </ul>
      </li>
      <li>타임랩스 비디오 : 현 위치에서 비디오를 찍어서 빠른 속도로 탐색<br /><br /></li>
    </ul>
  </li>
  <li>모바일 에스노그라피 : 연구자와 참여자가 만나지 않고 참여자가 직접 자신의 경험을 문서화
    <ul>
      <li>참여자가 일상과 경험을 기록하면, 연구자가 연구에 필요한 데이터를 수집</li>
      <li>연구자가 지속적인 지침이나 과제를 지정하면, 참여자가 질문이나 가이드에 맞춰 경험 기록 가능
        <ul>
          <li>기록은 공간의 제약 없음, 실시간으로 다양한 참여자의 결과 고융 가능, 순간의 경험 관찰 가능</li>
          <li>연구자의 참견을 최소화해야 하는 문제 : 간접적인 질문이 고려되여야 하고, 행동 패턴 전후의 진행 상황을 파악해야 함</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="공감-2--프로브">“공감” (2) : 프로브</h3>
    <ul>
      <li>사용자가 특정 주제에 대해 자신의 경험, 의견, 감정 등을 실제 생활 공간에서 생각해보고 직접 표현하게 함
        <ul>
          <li>프로브 패키지 : 일상적인 경험이나 생각 기록</li>
          <li>프로브 과제 : 일정 기간동안 자신의 일상 내에서 이를 수행하고 기록</li>
        </ul>
      </li>
      <li>사용자가 숙고해서 대답 가능 : 자신의 감성, 주관적 경험, 상상력 표현 &gt; 프로브 결과물을 해석해서 의미 탐색
        <ul>
          <li>사용자의 눈과 손을 빌어 생생한 현장의 경험 및 사용자의 개인적 이야기 접근 용이</li>
          <li>디자인 프로브 : 사용자 본인도 인지하지 못하는 깊은 내면 접근에 있어 디자인적 표현 방법 이용</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Design" /><summary type="html"><![CDATA[이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.]]></summary></entry><entry><title type="html">[F/E] 3. JavaScript</title><link href="http://localhost:4000/frontend/js1/" rel="alternate" type="text/html" title="[F/E] 3. JavaScript" /><published>2022-10-09T00:00:00+09:00</published><updated>2022-10-09T00:00:00+09:00</updated><id>http://localhost:4000/frontend/js1</id><content type="html" xml:base="http://localhost:4000/frontend/js1/"><![CDATA[<p class="notice--primary"><strong>이 항목은 현재 작성중입니다.</strong><br />&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="자바스크립트-javascript--웹-문서가-동적으로-표현하는-것을-구현하는-객체-기반-인터프리터-언어">자바스크립트 (<code class="language-plaintext highlighter-rouge">JavaScript</code>) : 웹 문서가 동적으로 표현하는 것을 구현하는 객체 기반 인터프리터 언어</h2>
<ul>
  <li>대다수 웹 브라우저 내에 인터프리터가 내장</li>
  <li><code class="language-plaintext highlighter-rouge">Node.js</code>와 같은 프레임워크를 통해 서버 측 프로그래밍에서도 사용 가능</li>
</ul>

<h3 id="-javascript를-html에-적용시키는-방법"># JavaScript를 HTML에 적용시키는 방법</h3>

<h4 id="--internal-javascript--html-태그의-속성-script에-javascript-코드를-넣는-방법">- <code class="language-plaintext highlighter-rouge">Internal JavaScript</code> : HTML 태그의 속성 <code class="language-plaintext highlighter-rouge">script=""</code>에 JavaScript 코드를 넣는 방법</h4>
<hr />

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
  alert ("Hello");
&lt;/script&gt;
</code></pre></div></div>

<h4 id="--linking-javascript--별도의-js-파일을-만들고-이를-html-문서와-연결하는-방법">- <code class="language-plaintext highlighter-rouge">Linking JavaScript</code> : 별도의 .js 파일을 만들고 이를 HTML 문서와 연결하는 방법</h4>
<hr />

<p>입력 :</p>
<blockquote>
  <p>→ hello.js</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alert ("Hello");
</code></pre></div>  </div>
</blockquote>

<blockquote>
  <p>→ index.html</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script src="hello.js"&gt;&lt;/script&gt;
</code></pre></div>  </div>
</blockquote>

<h3 id="변수-variable">변수 (<code class="language-plaintext highlighter-rouge">variable</code>)</h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var x;
</code></pre></div></div>

<h3 id="구문-statement과-문자열-string">구문 (<code class="language-plaintext highlighter-rouge">statement</code>)과 문자열 (<code class="language-plaintext highlighter-rouge">string</code>)</h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var x = 'varX'
var y = 'varY'; var z = 'varZ'
</code></pre></div></div>

<h3 id="비교-연산자--------">비교 연산자 <code class="language-plaintext highlighter-rouge">==</code>, <code class="language-plaintext highlighter-rouge">!=</code>, <code class="language-plaintext highlighter-rouge">===</code>, <code class="language-plaintext highlighter-rouge">!===</code>, <code class="language-plaintext highlighter-rouge">&gt;</code>, <code class="language-plaintext highlighter-rouge">&gt;=</code>, <code class="language-plaintext highlighter-rouge">&lt;</code>, <code class="language-plaintext highlighter-rouge">&lt;=</code></h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>7 == 7      // 왼쪽의 변수는 오른쪽의 변수와 같다.
'7' == 7    // 왼쪽의 문자열은 오른쪽의 변수와 같다.
3 != 7      // 왼쪽의 변수는 오른쪽의 변수가 같지 않다.
3 === 3     // 왼쪽의 변수는 오른쪽의 변수와 엄격하게 같다.
3 !=== `3`  // 왼쪽의 변수는 오른쪽의 문자열과 엄격하게 같지 않다.
7 &gt; 3       // 왼쪽의 변수는 오른쪽의 변수보다 크다.
7 &gt;= `3`    // 왼쪽의 변수는 오른쪽의 문자열보다 크거나 같다.
`3` &lt; 7     // 왼쪽의 문자열은 오른쪽의 변수보다 작다.
3 &lt;= 3      // 왼쪽이 변수는 오른쪽의 변수보다 작거나 크다.
</code></pre></div></div>

<h3 id="변수-데이터-타입-반환-연산자-typeof">변수 데이터 타입 반환 연산자 <code class="language-plaintext highlighter-rouge">typeof</code></h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">undefined</code> : 변수가 정의되지 않거나 값이 존재하지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">number</code> : 변수 데이터 타입이 숫자</li>
  <li><code class="language-plaintext highlighter-rouge">string</code> : 변수 데이터 타입이 문자열</li>
  <li><code class="language-plaintext highlighter-rouge">boolean</code> : 변수 데이터 타입이 <code class="language-plaintext highlighter-rouge">bool</code>형</li>
  <li><code class="language-plaintext highlighter-rouge">object</code> : 변수 데이터 타입이 함수, 배열 등 객체</li>
  <li><code class="language-plaintext highlighter-rouge">function</code> : 변수의 값이 함수</li>
  <li><code class="language-plaintext highlighter-rouge">symbol</code> : 변수 데이터 타입이 <code class="language-plaintext highlighter-rouge">symbol</code>형</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
    var x;
    document.write( "typeof x : " + typeof x + "&lt;br&gt;" );

    var x = 3;
    document.write( "typeof x = 3 : " + typeof x + "&lt;br&gt;" );

    var x = 'varX';
    document.write( "typeof x = 'varX' : " + typeof x + "&lt;br&gt;" );

    var x = true;
    document.write( "typeof x = true : " + typeof x + "&lt;br&gt;" );

    var x = [ 'y', 'z' ];
    document.write( "typeof x = [ 'y', 'z' ] : " + typeof x + "&lt;br&gt;" );

    function x(){};
    document.write( "typeof x(){} : " + typeof x + "&lt;br&gt;" );

    var x = function(){};
    document.write( "typeof x = function(){} : " + typeof x + "&lt;br&gt;" );

    var x = Symbol();
    document.write( "typeof x : " + typeof x = Symbol() + "&lt;br&gt;" );
&lt;/script&gt;
</code></pre></div></div>

<h3 id="조건-연산자-if-else-if-else">조건 연산자 <code class="language-plaintext highlighter-rouge">if</code>, <code class="language-plaintext highlighter-rouge">else if</code>, <code class="language-plaintext highlighter-rouge">else</code></h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>if (condition1) {
    statement1
} else if (condition2) {
    statement2
} else {
    statement3
}
</code></pre></div></div>

<h3 id="조건-연산자-switch">조건 연산자 <code class="language-plaintext highlighter-rouge">switch</code></h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>switch ( condition ) {
    case value1:
        statement1;
        break;
    case value2:
        statement2;
        break;
    default:
        statement3;
}
</code></pre></div></div>

<h3 id="반복-연산자-while-dowhile-for">반복 연산자 <code class="language-plaintext highlighter-rouge">while</code>, <code class="language-plaintext highlighter-rouge">do~while</code>, <code class="language-plaintext highlighter-rouge">for</code></h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>while ( condition ) {
  statement;
}
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>do {
    statement;
} while ( condition )
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for ( initial; condition; repeat) {
    statement;
}
</code></pre></div></div>

<h3 id="함수-function">함수 (<code class="language-plaintext highlighter-rouge">function</code>)</h3>
<hr />

<ul>
  <li>함수 선언</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function functionName( argument1, argument2, ... ) {
    statement;
} // 함수 호출은 함수 선언 전후에 가능
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var functionName = function( argument1, argument2, ... ) {
  statement;
}; // 함수 호출은 함수 선언 후에만 가능
</code></pre></div></div>

<ul>
  <li>함수 호출</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>functionName( value1, value2, ... );
</code></pre></div></div>

<ul>
  <li>
    <h4 id="전역-변수-global-variable--함수-외부에서-선언된-변수">전역 변수 (<code class="language-plaintext highlighter-rouge">global variable</code>) : 함수 외부에서 선언된 변수</h4>
    <ul>
      <li>프로그램 전체에서 접근 가능</li>
    </ul>
  </li>
  <li>
    <h4 id="지역-변수-local-variable--함수-내부에서-선언된-변수">지역 변수 (<code class="language-plaintext highlighter-rouge">local variable</code>) : 함수 내부에서 선언된 변수</h4>
    <ul>
      <li>함수가 실행되면 만들어지고 함수가 종료되면 소멸</li>
      <li>함수 외부에서는 접근 불가</li>
    </ul>
  </li>
</ul>

<h3 id="내장-함수-built-in-function">내장 함수 (<code class="language-plaintext highlighter-rouge">built-in function</code>)</h3>
<hr />

<ul>
  <li>사용자의 편의를 위해 다양한 기능의 여러 전역 함수를 미리 정의하여 제공</li>
  <li>자바스크립트의 어떤 타입의 객체에서도 바로 사용 가능</li>
</ul>

<h4 id="eval--문자열을-javascript-코드로-인식하게-하는-내장-함수"><code class="language-plaintext highlighter-rouge">eval()</code> : 문자열을 javascript 코드로 인식하게 하는 내장 함수</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
    var x = 1 + 2;
    document.write( x );           // 1 + 2
	document.write( eval( x ) );   // 3
&lt;/script&gt;
</code></pre></div></div>

<h4 id="parseint-parsefloat--문자열을-정수형으로-정수형을-문자열로-변환하는-내장-함수"><code class="language-plaintext highlighter-rouge">parseInt()</code>, <code class="language-plaintext highlighter-rouge">parseFloat()</code> : 문자열을 정수형으로/ 정수형을 문자열로 변환하는 내장 함수</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
    document.write( parseInt( '17' ) );         // 17
    document.write( parseFloat( '3.14' ) );     // 3.14
&lt;/script&gt;
</code></pre></div></div>

<h4 id="encodeuri-decodeuri-------를-뺀-문자를-인코딩-문자열을-디코딩하는-내장-함수"><code class="language-plaintext highlighter-rouge">encodeURI()</code>, <code class="language-plaintext highlighter-rouge">decodeURI()</code> : <code class="language-plaintext highlighter-rouge">:</code>, <code class="language-plaintext highlighter-rouge">;</code>, <code class="language-plaintext highlighter-rouge">/</code>, <code class="language-plaintext highlighter-rouge">=</code>, <code class="language-plaintext highlighter-rouge">?</code>, <code class="language-plaintext highlighter-rouge">&amp;</code>를 뺀 문자를 인코딩/ 문자열을 디코딩하는 내장 함수</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
    var u = 'https://pocj8ur4in.github.io';
    var encU = encodeURI( u );
    document.write( u );
	document.write( encU );
	document.write( decodeURI( u ) );
&lt;/script&gt;
</code></pre></div></div>

<h4 id="encodeuricomponent-decodeuricomponent--모든-문자를-인코딩-문자열을-디코딩하는-내장-함수"><code class="language-plaintext highlighter-rouge">encodeURIComponent()</code>, <code class="language-plaintext highlighter-rouge">decodeURIComponent()</code> : 모든 문자를 인코딩/ 문자열을 디코딩하는 내장 함수</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
    var u = 'https://pocj8ur4in.github.io';
    var encU = encodeURIComponent( u );
    document.write( u );
	document.write( encU );
	document.write( decodeURIComponent( u ) );
&lt;/script&gt;
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Frontend" /><category term="HTML" /><summary type="html"><![CDATA[이 항목은 현재 작성중입니다.&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[B/E] 1. 운영체제</title><link href="http://localhost:4000/backend/os1/" rel="alternate" type="text/html" title="[B/E] 1. 운영체제" /><published>2022-10-07T00:00:00+09:00</published><updated>2022-10-10T00:00:00+09:00</updated><id>http://localhost:4000/backend/os1</id><content type="html" xml:base="http://localhost:4000/backend/os1/"><![CDATA[<p class="notice--primary"><strong>이 항목은 현재 작성중입니다.</strong><br />&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="운영체제-operation-system--사용자가-컴퓨터에서-실행한-프로그램을-관리하고-제어">운영체제 (<code class="language-plaintext highlighter-rouge">Operation System</code>) : 사용자가 컴퓨터에서 실행한 프로그램을 관리하고 제어</h2>
<ul>
  <li>컴퓨터 시스템 자원의 효율적인 관리 (<code class="language-plaintext highlighter-rouge">Performance</code>) : CPU, RAM 등 하드웨어 (<code class="language-plaintext highlighter-rouge">H/W</code>)를 관리해 성능 향상</li>
  <li>사용자 편의성 제공 (<code class="language-plaintext highlighter-rouge">Convenience</code>) : 사용자가 더 편리하게 사용할 수 있는 환경을 구성</li>
</ul>

<h3 id="ex-부팅-booting--컴퓨터를-시작할-때-자기-자신을-구동시킬-프로그램을-스스로-불러내는-동작">ex) 부팅 (<code class="language-plaintext highlighter-rouge">Booting</code>) : 컴퓨터를 시작할 때 자기 자신을 구동시킬 프로그램을 스스로 불러내는 동작</h3>

<ul>
  <li>메인 메모리 (<code class="language-plaintext highlighter-rouge">Main Memory</code>) : 즉시 필요한 데이터를 저장하는 주 기억 장치
    <ul>
      <li><code class="language-plaintext highlighter-rouge">RAM</code> : 휘발성 주 기억 장치 (전원이 꺼지면 모든 내용이 지워짐)</li>
      <li><code class="language-plaintext highlighter-rouge">ROM</code> : 비휘발성 주 기억 장치 (전원이 꺼져도 그 안의 내용이 계속 유지)
        <ul>
          <li><code class="language-plaintext highlighter-rouge">POST</code> (<code class="language-plaintext highlighter-rouge">Power-On Self-Test</code>) : (부팅 시 가장 처음 실행되는 프로그램) 현재 컴퓨터의 상태 검사</li>
          <li>부트 로더 (<code class="language-plaintext highlighter-rouge">Boot Loader</code>) : (<code class="language-plaintext highlighter-rouge">POST</code> 다음에 실행되는 프로그램) 보조 기억 장치의 운영체제를 탐색 후 <code class="language-plaintext highlighter-rouge">RAM</code>에 할당
            <ul>
              <li>보조 기억 장치에서 <code class="language-plaintext highlighter-rouge">RAM</code>으로 할당된 운영체제는 컴퓨터 전원이 꺼질 때까지 상주 (<code class="language-plaintext highlighter-rouge">Resident</code>)</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">SSD</code>/<code class="language-plaintext highlighter-rouge">HDD</code> : 운영체제가 저장된 보조 기억 장치
    <ul>
      <li>커널 (<code class="language-plaintext highlighter-rouge">Kernel</code>) : 운영체제가 수행하는 모든 작업이 저장</li>
      <li>명령어 해석기 (<code class="language-plaintext highlighter-rouge">Shell</code>) : 사용자가 요청하는 명령어를 해석해 커널에 요청하고 결과를 출력
        <ul>
          <li>응용 프로그램 (<code class="language-plaintext highlighter-rouge">Application</code>) : 운영체제 위에서 수행되며, 운영체제가 지원하는 자원만을 사용 가능</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="운영체제의-발전-과정">운영체제의 발전 과정</h2>

<h3 id="1-일괄-처리-시스템-batch-processing-system--프로그램-수행-과정의-자동화">1. 일괄 처리 시스템 (<code class="language-plaintext highlighter-rouge">Batch Processing System</code>) : 프로그램 수행 과정의 자동화</h3>
<ul>
  <li>컴파일 -&gt; 링크 -&gt; 로딩의 순서로 입력</li>
  <li><code class="language-plaintext highlighter-rouge">Resident Monitor</code> : 프로세서에 할당하기 위해 위의 과정을 하나의 프로그램으로 작성 (최초의 운영체제)</li>
</ul>

<h3 id="2-다중-프로그래밍-multiprogramming-system--메모리에-여러-응용-프로그램을-적재시켜-idle-상태를-최소화">2. 다중 프로그래밍 (<code class="language-plaintext highlighter-rouge">Multiprogramming System</code>) : 메모리에 여러 응용 프로그램을 적재시켜 idle 상태를 최소화</h3>
<ul>
  <li>프로그램 실행 시에 계산을 담당하는 <code class="language-plaintext highlighter-rouge">CPU</code>와 입출력을 담당하는 <code class="language-plaintext highlighter-rouge">I/O</code> 장치가 교대로 실행
    <ul>
      <li><code class="language-plaintext highlighter-rouge">idle</code>상태 : I/O 장치가 실행되는 동안 CPU가 아무런 작업도 하지 않는 상태</li>
    </ul>
  </li>
  <li>CPU 스케줄링 (<code class="language-plaintext highlighter-rouge">CPU Scheduling</code>) : CPU가 어느 프로그램을 실행할지 선택하는 작업</li>
</ul>

<h3 id="3-시분할-시스템-time-sharing-system--cpu가-프로그램을-수행하는-시간을-제한">3. 시분할 시스템 (<code class="language-plaintext highlighter-rouge">Time-sharing System</code>) : CPU가 프로그램을 수행하는 시간을 제한</h3>
<ul>
  <li>I/O 장치의 도입으로 사용자와 컴퓨터 간 대화 형식이 가능해졌으나, 컴퓨터의 가격이 비쌈
    <ul>
      <li>각 사용자들이 하나의 컴퓨터에 여러 I/O 장치를 연결하는, 단말기 (<code class="language-plaintext highlighter-rouge">Terminal</code>)의 형태로 공유하여 사용</li>
      <li>한 사용자가 CPU를 사용하는 동안 다른 사용자들이 사용하지 못하는 문제 발생</li>
    </ul>
  </li>
  <li>스위칭 (<code class="language-plaintext highlighter-rouge">Switching</code>) : 위의 문제를 해결하기 위해 프로그램이 제한된 시간 실행되면 반드시 다음 프로그램으로 넘어가게 함
    <ul>
      <li>다중 작업 (<code class="language-plaintext highlighter-rouge">Multitasking</code>)이 가능해짐</li>
    </ul>
  </li>
</ul>

<h3 id="4-인터럽트-기반-시스템-interrupt-based-system--인터럽트-발생-시-isr에-맞는-처리를-수행">4. 인터럽트 기반 시스템 (<code class="language-plaintext highlighter-rouge">Interrupt-based System</code>) : 인터럽트 발생 시 <code class="language-plaintext highlighter-rouge">ISR</code>에 맞는 처리를 수행</h3>
<ul>
  <li>인터럽트 (<code class="language-plaintext highlighter-rouge">Interrupt</code>) : 프로그램 실행 중에 예기치 않은 상황이 발생할 경우 이를 CPU에 알리는 전기 신호
    <ul>
      <li>외부 인터럽트 (<code class="language-plaintext highlighter-rouge">eternal Interrupt</code>) : 하드웨어 인터럽트</li>
      <li>내부 인터럽트 (<code class="language-plaintext highlighter-rouge">internal Interrupt</code>) : 소프트웨어 언터럽트
        <ul>
          <li>예외 (<code class="language-plaintext highlighter-rouge">Exception</code>)</li>
          <li>시스템 콜 (<code class="language-plaintext highlighter-rouge">System call</code>)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>인터럽트 서비스 루틴 (<code class="language-plaintext highlighter-rouge">Interrupt Service Routine</code>) : 운영체제 내에 있는, 인터럽트 신호를 처리하기 위한 방법을 내포한 코드</li>
</ul>

<div style="color: white; padding: 2% 0% 2% 0%; background-color: black;">
<ul>
  <li>운영체제의 구조</li>
  <ul>
    <li>다중 프로그래밍 (Multiprogramming System) : 메모리에 여러 응용 프로그램을 적재시켜 idle 상태 최소화</li>
    <li>다중 작업 (Multitasking) : 각 작업에 시간을 부여하고 제한된 시간동안 CPU 자원을 할당한 뒤 스위칭</li>
  </ul>
  <li>운영체제의 동작 원리</li>
  <ul>
    <li>인터럽트 기반 시스템 (Interrupt-based System) : 외부 인터럽트, 내부 인터럽트</li>
  </ul>
</ul>
</div>

<h2 id="이중-모드-dual-mode-execution--사용자-user-모드와-커널-kernel-모드를-나눔">이중 모드 (<code class="language-plaintext highlighter-rouge">Dual Mode Execution</code>) : 사용자 (<code class="language-plaintext highlighter-rouge">User</code>) 모드와 커널 (<code class="language-plaintext highlighter-rouge">Kernel</code>) 모드를 나눔</h2>

<blockquote>
  <p>문제 : 어떤 작업의 오류로 자원을 계속해서 점유하는 일과 같이 컴퓨터의 작업 효율을 저해하는 행위로부터 보호할 수단을 필요</p>
</blockquote>

<ul>
  <li>CPU 내 레지스터 (<code class="language-plaintext highlighter-rouge">Register</code>)의 <code class="language-plaintext highlighter-rouge">Mode-Bit</code>를 플래그 (<code class="language-plaintext highlighter-rouge">flag</code>)로 활용해 나타냄 (커낼 모드 : <code class="language-plaintext highlighter-rouge">0</code>, 사용자 모드 : <code class="language-plaintext highlighter-rouge">1</code>)</li>
  <li>각 명령어에 <code class="language-plaintext highlighter-rouge">Mode-Bit</code>를 넣어 시스템 내의 <code class="language-plaintext highlighter-rouge">Mode-Bit</code>와 같을 시에만 명령어 수행</li>
  <li>특권 명령어 (<code class="language-plaintext highlighter-rouge">Privileged Instruction</code>) : 커널 모드에서만 내릴 수 있는 명령어
    <ul>
      <li><code class="language-plaintext highlighter-rouge">STOP</code>, <code class="language-plaintext highlighter-rouge">HALT</code>, <code class="language-plaintext highlighter-rouge">RESET</code>, <code class="language-plaintext highlighter-rouge">SET_TIMER</code> 등</li>
      <li>사용자 모드에서는 특권 명령어를 내릴 수 없음 (내부 인터럽트를 발생해 해당 명령어를 요청한 프로그램을 강제 종료)</li>
    </ul>
  </li>
  <li>시스템 콜 (<code class="language-plaintext highlighter-rouge">System Call</code>) : <code class="language-plaintext highlighter-rouge">Mode-Bit</code>를 바꾸는 행위 (<code class="language-plaintext highlighter-rouge">INT 80</code>)
    <ul>
      <li>사용자가 하드웨어의 자원에 접근하는 경우, 프로그램에서 시스템 콜을 발생시켜 운영체제에 위임해 커널 모드로 처리
        <ul>
          <li>컴퓨터가 부팅되는 과정 : 커널 모드</li>
          <li>응용 프로그램이 실행되는 과정 : 커널 모드</li>
          <li>응용 프로그램이 실행되는 중일 때 : 사용자 모드</li>
          <li>인터럽트가 발생한 후 처리하는 과정 : 커널 모드</li>
          <li>인터럽트를 처리한 후 : 사용자 모드</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="하드웨어-보호-protection--잘못된-명령이나-접근으로부터-보호하기-위해-운영체제에서-내부-인터럽트를-발생">하드웨어 보호 (<code class="language-plaintext highlighter-rouge">Protection</code>) : 잘못된 명령이나 접근으로부터 보호하기 위해 운영체제에서 내부 인터럽트를 발생</h3>
<hr />

<blockquote>
  <p>문제 : 정보들이 여러 I/O 장치를 통해 컴퓨터로 입출력되는 과정에서 장치 간 혹은 데이터 간의 혼선이 발생할 수 있음</p>
</blockquote>

<h4 id="-입출력-장치-보호--in-out과-같은-입출력-명령을-특권-명령으로-지정해-운영체제를-통해-수행되게-함">&gt; 입출력 장치 보호 : <code class="language-plaintext highlighter-rouge">in</code>, <code class="language-plaintext highlighter-rouge">out</code>과 같은 입출력 명령을 특권 명령으로 지정해 운영체제를 통해 수행되게 함</h4>
<ul>
  <li>입출력 수행 시에는 관리자 모드로 전환해 특권 명령을 내림
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Privileged Instruction Violation</code> : 사용자가 입출력 명령을 직접 내린 경우 프로그램을 강제 종료</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>문제 : 다른 사용자나 운영체제에 할당된 메모리 영역에 접근해 정보나 프로그램을 해킹할 수 있음</p>
</blockquote>

<h4 id="-메모리-보호--cpu와-메인-메모리-간의-주소-버스에-mmu-memory-management-unit을-설치">&gt; 메모리 보호 : CPU와 메인 메모리 간의 주소 버스에 <code class="language-plaintext highlighter-rouge">MMU</code> (<code class="language-plaintext highlighter-rouge">Memory Management Unit</code>)을 설치</h4>
<ul>
  <li>두 개의 레지스터를 통해 해당 프로그램의 주소 범위를 저장</li>
  <li>사용자에 할당된 메모리 영역을 벗어난 주소값을 가져오지 못하게 함</li>
  <li><code class="language-plaintext highlighter-rouge">MMU</code> 설정은 운영체제만 변경 가능
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Segment Violation</code> : 만약 사용자에 할당된 메모리 영역을 벗어난 주소값이 <code class="language-plaintext highlighter-rouge">MMU</code>에 들어오면 내부 인터럽트를 발생시킴</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>문제 : 프로그램에서의 무한 루프로 인해 CPU가 독점되어 다른 프로그램이 수행되지 못할 수 있음</p>
</blockquote>

<h4 id="-cpu-보호--타이머-timer를-두어-일정-시간이-지나면-타이머-인터럽트를-발생시킴">&gt; CPU 보호 : 타이머 (<code class="language-plaintext highlighter-rouge">Timer</code>)를 두어 일정 시간이 지나면 타이머 인터럽트를 발생시킴</h4>
<ul>
  <li>타이머 (<code class="language-plaintext highlighter-rouge">Timer</code>) : 무한 루프나 자원 독점을 막기 위해 특정 시간이 지나면 타이머 인터럽트를 발생시킴
    <ul>
      <li>타이머 인터럽트 (<code class="language-plaintext highlighter-rouge">Timer Interrupt</code>) : 해당 인터럽트의 ISR에서 CPU는 각 프로그램의 CPU 점유 시간을 측정해 분배</li>
      <li>운영체제는 타이머가 끝난 작업을 종료시키고 스케줄링 (<code class="language-plaintext highlighter-rouge">Scheduling</code>) 이전에 타이머 실행</li>
    </ul>
  </li>
</ul>

<h2 id="운영체제-서비스-operation-system-service">운영체제 서비스 (<code class="language-plaintext highlighter-rouge">Operation System Service</code>)</h2>
<ul>
  <li>컴퓨터의 성능을 효율적으로 사용하기 위해 하드웨어 자원을 각각의 사용자 응용 프로그램에 적절히 분배
    <ul>
      <li>하드웨어 자원 : CPU 시간, 기억 장치 및 디스크 영역, I/O 장치</li>
    </ul>
  </li>
</ul>

<div style="color: white; padding: 2% 0% 2% 0%; background-color: black;">
<ul>
  <li>프로세스 관리 (Process Management)</li>
  <li>메인 메모리 관리 (Main Memory Management)</li>
  <li>프로세스 관리 (Process Management)</li>
  <li>파일 관리(File Management)</li>
  <li>저장 장치 관리 (Storage Management)</li>
  <li>I/O 장치 관리 (I/O Device Management)</li>
  <li>시스템 콜 (System call)</li>
</ul>
</div>

<h3 id="프로세스-관리-process-management">프로세스 관리 (<code class="language-plaintext highlighter-rouge">Process Management</code>)</h3>
<hr />

<h4 id="ex-프로세스-관리를-위한-시스템-콜">ex) 프로세스 관리를 위한 시스템 콜</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>while (true) {
  type_prompt();
  read_command(command, parameters);
if (fork() != 0){
    /* Parent Code */
    waitpid(-1, &amp;status, 0);
  }
else {
    /* Child Code */
    execve (command, parameters, 0);
  } 
}
</code></pre></div></div>
<ul>
  <li><code class="language-plaintext highlighter-rouge">brk</code>시스템은 데이터 세그먼트가 끝나는 시점에서 새로운 주소를 명시화해 <code class="language-plaintext highlighter-rouge">malloc</code> 라이브러리는 공간을 동적으로 할당받음</li>
</ul>

<h4 id="프로세스-process--실제-메인-메모리에-할당되어-실행-중인-프로그램">프로세스 (<code class="language-plaintext highlighter-rouge">Process</code>) : 실제 메인 메모리에 할당되어 실행 중인 프로그램</h4>
<ul>
  <li>프로그램은 보조 기억 장치에서 아무런 동작을 하지 않은 상태
    <ul>
      <li>어떤 요청에 의해 메인 메모리에 할당되어 CPU를 사용하면서 실행
        <ul>
          <li>각각의 프로세스는 CPU에 의해 샐행된 후 …를 생성 (메인 메모리를 효율적으로 사용해야 함)
            <ul>
              <li>프로세스 테이블 엔트리 : <code class="language-plaintext highlighter-rouge">PCB</code> (<code class="language-plaintext highlighter-rouge">Process Control Block</code>)</li>
              <li>주소 공간 (<code class="language-plaintext highlighter-rouge">Address Space</code>)
                <ul>
                  <li>코드 세그먼트 (<code class="language-plaintext highlighter-rouge">Code Segment</code>) : 프로그램 소스 코드가 저장</li>
                  <li>데이터 세그먼트 (<code class="language-plaintext highlighter-rouge">Data Segment</code>) : 전역 변수가 저장</li>
                  <li>스택 세그먼트 (<code class="language-plaintext highlighter-rouge">Stack Segment</code>) : 함수와 지역변수가 저장</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>함수와 지역변수가 <code class="language-plaintext highlighter-rouge">LIFO</code> (후입선출)의 특성을 가진 스택에서 실행되기에 전역 변수를 미리 지정해 메인 메모리의 공간 절약 가능</p>
</blockquote>

<h5 id="프로세스-상태-process-status--각-단계들에서-상태-전이가-일어나-다음-단계로-넘어감">프로세스 상태 (<code class="language-plaintext highlighter-rouge">Process Status</code>) : 각 단계들에서 상태 전이가 일어나 다음 단계로 넘어감</h5>
<ul>
  <li><code class="language-plaintext highlighter-rouge">New</code> : 프로그램이 메인 메모리에 할당</li>
  <li><code class="language-plaintext highlighter-rouge">Ready</code> : 프로세스가 언제든 실행 가능한 상태; 할당된 프로그램이 실행되기 위한 모든 준비를 마친 상태로 대기
    <ul>
      <li>n개의 작업이 있을 때, CPU의 프로세서는 스케줄러의 0~(n-1)번, 즉 n개의 작업을 번갈아 처리</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Running</code> : CPU가 해당 프로세스를 실제로 실행중인 상태</li>
  <li><code class="language-plaintext highlighter-rouge">Waiting</code>=<code class="language-plaintext highlighter-rouge">Blocked</code> : <code class="language-plaintext highlighter-rouge">Running</code>이 불가능한 상태; 프로세스가 끝나지 않은 시점에 해당되는 I/O 정보가 없어 작업할 수 없음
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Waiting</code>가 끝나면 다시 CPU에 실행되기 위해 <code class="language-plaintext highlighter-rouge">Ready</code>로 돌아가야 함</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Terminated</code> : 프로세스가 완전히 종료</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/34755287/70577651-11eb7a00-1bef-11ea-9866-0c659728be9e.png" width="80%" style="margin-left: 2%" /></p>

<ul>
  <li>I/O 작업으로 인한 상태 변화 : <code class="language-plaintext highlighter-rouge">Running</code> -&gt; <code class="language-plaintext highlighter-rouge">Waiting</code> -&gt; <code class="language-plaintext highlighter-rouge">Ready</code> -&gt; <code class="language-plaintext highlighter-rouge">Running</code></li>
  <li>시간 초과로 인터럽트에 의한 상태 변화 : <code class="language-plaintext highlighter-rouge">Running</code> -&gt; <code class="language-plaintext highlighter-rouge">Ready</code> -&gt; <code class="language-plaintext highlighter-rouge">Running</code></li>
</ul>

<h5 id="pcb-process-control-block--프로세스에-대한-모든-정보를-저장하는-곳"><code class="language-plaintext highlighter-rouge">PCB</code> (<code class="language-plaintext highlighter-rouge">Process Control Block</code>) : 프로세스에 대한 모든 정보를 저장하는 곳</h5>
<ul>
  <li>CPU는 여러 프로세스를 빈번히 전환하면서 수행하기에 각 프로세스의 데이터를 저장해야 작업을 이어서 수행할 수 있음</li>
  <li>운영체제 네의 프로세스를 관리하는 코드 부분에 저장
    <ul>
      <li><code class="language-plaintext highlighter-rouge">PCB</code>에 데이터를 저장하고 복원하는 시간 역시 다중 작업을 위해 각각의 프로세스에 할당되는 시간에 포함</li>
    </ul>
  </li>
  <li>프로세스 상태 (<code class="language-plaintext highlighter-rouge">Process Status</code>), 프로그램 카운터 (<code class="language-plaintext highlighter-rouge">Program Counter</code>)와 스택 포인터 (<code class="language-plaintext highlighter-rouge">Stack Pointer</code>), 파일 디스크립터 (<code class="language-plaintext highlighter-rouge">File Descriptors</code>) 등등의 정보를 포함</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/34755287/70577652-12841080-1bef-11ea-8f1c-5c0e0d94c132.png" width="80%" style="margin-left: 2%" /></p>

<h5 id="프로세스-큐-process-queue--프로세스-순서를-기다리는-큐">프로세스 큐 (<code class="language-plaintext highlighter-rouge">Process Queue</code>) : 프로세스 순서를 기다리는 큐</h5>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Job Queue</code> : 보조 기억 장치의 프로그램이 실행되기 위해 메인 메모리의 할당 순서를 기다리는 큐</li>
  <li><code class="language-plaintext highlighter-rouge">Ready Queue</code> : CPU 점유 순서를 기다리는 큐</li>
  <li><code class="language-plaintext highlighter-rouge">Device Queue</code> : I/O를 위한 각 장치의 실행 순서를 기다리는 큐</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/34755287/53879660-5ccdd500-4052-11e9-972d-11ba3faeb3e3.png" width="80%" style="margin-left: 2%" /></p>

<ul>
  <li>각 큐의 내부에 저장된 실제 데이터는 각 프로세스의 <code class="language-plaintext highlighter-rouge">PCB</code>에 저장</li>
  <li>
    <h5 id="스케줄러-scheduler--프로세스-순서를-정해-프로세스-큐에-올릴-것을-결정">스케줄러 (<code class="language-plaintext highlighter-rouge">Scheduler</code>) : 프로세스 순서를 정해 프로세스 큐에 올릴 것을 결정</h5>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Ready Queue</code>-<code class="language-plaintext highlighter-rouge">Short-term Scheduler</code> : 어떤 프로세스에 CPU 자원을 할당할지 결정하기에 스케줄링 속도가 빨라야 함</li>
      <li><code class="language-plaintext highlighter-rouge">Job Queue</code> -<code class="language-plaintext highlighter-rouge">Long-term Scheduler</code> : 프로세스가 <code class="language-plaintext highlighter-rouge">Terminated</code>되어야 큐에 올리기에 스케줄링 속도가 빠르지 않아도 됨
        <ul>
          <li><code class="language-plaintext highlighter-rouge">Long-term Scheduler</code>는 다중 프로그래밍의 정도 (<code class="language-plaintext highlighter-rouge">Degree of Multiprogramming</code>)를 제어함
            <ul>
              <li>다중 프로그래밍의 정도 (<code class="language-plaintext highlighter-rouge">Degree of Multiprogramming</code>) : 현재 메모리에 할당된 프로세스의 개수</li>
            </ul>
          </li>
          <li><code class="language-plaintext highlighter-rouge">Long-term Scheduler</code>는 <code class="language-plaintext highlighter-rouge">I/O bound Process</code>,<code class="language-plaintext highlighter-rouge">CPU bound Process</code>를 메인 메모리에 적절히 할당해야 함
            <ul>
              <li><code class="language-plaintext highlighter-rouge">I/O bound Process</code>, <code class="language-plaintext highlighter-rouge">CPU bound Process</code> : I/O 작업 (입출력)/ CPU 작업 (계산) 비중이 높은 프로세스</li>
            </ul>
          </li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Medium-term Scheduler</code> : 운영체제가 실행중에 메인 메모리 내 프로세스 중 보조 저장 장치로 옮길 것을 주기적으로 검사
        <ul>
          <li><code class="language-plaintext highlighter-rouge">Swapping</code> (<code class="language-plaintext highlighter-rouge">Swap-out</code>↔<code class="language-plaintext highlighter-rouge">Swap-in</code>) : <code class="language-plaintext highlighter-rouge">Swap-in</code>으로 다시 할당할 때 이전 공간으로 할당되는 것은 보장되지 않음
            <ul>
              <li><code class="language-plaintext highlighter-rouge">Swap-out</code> : 메인 메모리에서 장기적으로 사용하지 않는 프로세스를 보조 기억 장치로 저장</li>
              <li><code class="language-plaintext highlighter-rouge">Swap-in</code> : 나중에 해당 프로세스가 다시 사용되려 할 때 보조 기억 장치에서 메인 메모리에 다시 할당</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h5 id="문맥-전환-context-switching--cpu에서-한-프로세스가-실행-중인-것을-멈추고-다른-프로세스가-실행하는-것">문맥 전환 (<code class="language-plaintext highlighter-rouge">Context Switching</code>) : CPU에서 한 프로세스가 실행 중인 것을 멈추고 다른 프로세스가 실행하는 것</h5>
    <ul>
      <li>문맥 (<code class="language-plaintext highlighter-rouge">Context</code>) : 프로세스의 흐름. <code class="language-plaintext highlighter-rouge">PCB</code> 안에서 표현</li>
      <li><code class="language-plaintext highlighter-rouge">CPU Scheduler</code> : CPU가 어느 프로세스를 선택할지 지정</li>
      <li><code class="language-plaintext highlighter-rouge">Dispatcher</code> : 문맥 전환이 발생하면 <code class="language-plaintext highlighter-rouge">Ready</code>에서 <code class="language-plaintext highlighter-rouge">Running</code>으로 상태 전이
        <ul>
          <li>CPU 데이터는 이전 프로세스의 <code class="language-plaintext highlighter-rouge">PCB</code>에 갱신</li>
          <li>새로 시작되는 프로세스의 <code class="language-plaintext highlighter-rouge">PCB</code>를 CPU로 복원</li>
          <li><code class="language-plaintext highlighter-rouge">Context Switching Overhead</code> : 문맥 전환이 발생할 때마다 <code class="language-plaintext highlighter-rouge">Dispatch</code>를 매번 수행해야 함</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h4 id="프로세스의-생성-process-creation">프로세스의 생성 (<code class="language-plaintext highlighter-rouge">Process Creation</code>)</h4>
<ul>
  <li>부모-자식 관계 : 프로세스들은 파생되는 다른 프로세스를 생성할 수 있음</li>
  <li>프로세스 트리 (<code class="language-plaintext highlighter-rouge">Process Tree</code>) : 부모 프로세스인 A에서 자식 프로세스인 B, C, D가 파생되어 생성</li>
</ul>

<p><img src="https://i.stack.imgur.com/6RGIe.jpg" width="30%" style="margin-left: 2%" /></p>

<ul>
  <li>생성된 모든 프로세스는 자신을 식별할 수 있는 고유의 <code class="language-plaintext highlighter-rouge">ID</code> 값을 가짐
    <ul>
      <li>생성된 모든 프로세스는 자신을 생성한 사용자 고유의 <code class="language-plaintext highlighter-rouge">UID</code> 값 또한 가짐 (부모와 자식이 동일한 값)</li>
    </ul>
  </li>
</ul>

<h4 id="프로세스-간의-통신-inter-process-communication--프로세스-간-상호-통신하는-규칙에-대한-메커니즘">프로세스 간의 통신 (<code class="language-plaintext highlighter-rouge">Inter-Process Communication</code>) : 프로세스 간 상호 통신하는 규칙에 대한 메커니즘</h4>
<hr />

<ul>
  <li>메시지 패싱 (<code class="language-plaintext highlighter-rouge">Message Passing</code>) : 협력적 프로세스 간 각자의 메시지를 운영 체제에 전달해 통신</li>
  <li>공유 메모리 (<code class="language-plaintext highlighter-rouge">Shared Memory</code>) : 협력적 프로세스 간 하나의 공유하는 영역을 만들어 상호 통신
    <ul>
      <li>임계 영역 (<code class="language-plaintext highlighter-rouge">Critical Region</code>) : <code class="language-plaintext highlighter-rouge">Shared Memory</code>에서 공유하는 데이터들이 변경되는 코드 영역
        <ul>
          <li>경쟁 상태 (<code class="language-plaintext highlighter-rouge">Race Condition</code>) : 두 프로세스가 <code class="language-plaintext highlighter-rouge">Critical Region</code>에 동시 접근해 접근 순서나 위치에 따른 결과 차이
            <ul>
              <li>상호 배제 (<code class="language-plaintext highlighter-rouge">Mutual Exclusion</code>) : <code class="language-plaintext highlighter-rouge">Critical Region</code>을 한 프로세스만 사용하고 다른 프로세스 접근 금지</li>
            </ul>
          </li>
          <li>기아 문제 (<code class="language-plaintext highlighter-rouge">Starving</code>)
            <ul>
              <li>유한 대기 (<code class="language-plaintext highlighter-rouge">Bounded Waiting</code>) :<code class="language-plaintext highlighter-rouge">Critical Region</code> 밖에서 대기하는 모든 프로세스는 유한 시간 내에 진입</li>
            </ul>
          </li>
          <li>데드락 문제 (<code class="language-plaintext highlighter-rouge">Deadlock</code>)
            <ul>
              <li>진행 (<code class="language-plaintext highlighter-rouge">Progress</code>) : <code class="language-plaintext highlighter-rouge">Critical Region</code>에 접근하는 프로세스를 결정하는 것은 유한 시간 이내에 결졍</li>
            </ul>
          </li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Mutual Locks</code>
        <ul>
          <li>잠금 : 한 프로세스가 <code class="language-plaintext highlighter-rouge">Critical Region</code>을 점유한 후에 다른 프로세스가 접근할 수 없도록 잠금</li>
          <li>인터럽트 봉쇄 : 한 프로세스가 <code class="language-plaintext highlighter-rouge">Critical Region</code>을 점유한 뒤에는 모든 인터럽트 중단</li>
          <li>엄격한 교대 : 두 프로세스가 하나의 <code class="language-plaintext highlighter-rouge">Critical Region</code>을 사용할 때, 교대로 한 번씩만 접근하도록 함
            <ul>
              <li><code class="language-plaintext highlighter-rouge">Mutual Locks</code>에서의 <code class="language-plaintext highlighter-rouge">Busy Waiting</code> : <code class="language-plaintext highlighter-rouge">Critical Region</code> 밖에 대기하는 프로세스가 지속적인 접근 시도
                <ul>
                  <li>무한 루프를 돌며 CPU 시간을 낭비 (<code class="language-plaintext highlighter-rouge">Spin Lock</code>)</li>
                  <li>대기 시간이 매우 짧은 경우 : 제한적으로 사용</li>
                </ul>
              </li>
              <li>단일 변수, 2개의 프로세스에 대해서만 동기화 가능</li>
            </ul>
          </li>
          <li><code class="language-plaintext highlighter-rouge">Bounded Waiting</code>으로 인한 기아, <code class="language-plaintext highlighter-rouge">Progress</code>으로 인한 데드락 해결 못함</li>
        </ul>
      </li>
      <li>인터럽트 비활성화 (<code class="language-plaintext highlighter-rouge">Disabling Interrupts</code>) : 한 프로세스가 <code class="language-plaintext highlighter-rouge">Critical Region</code>을 점유하는 동안
        <ul>
          <li>커널 입장에서는 변수나 리스트를 인터럽트의 방해 없이 지속적으로 갱신할 수 있기에 편리</li>
          <li>인터럽트를 비활성화해 운영체제의 권한을 사용자에 내주는 것은 위험함</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Lock variables</code> : 프로세스가 <code class="language-plaintext highlighter-rouge">Critical Region</code>에 접근을 시도할 때 <code class="language-plaintext highlighter-rouge">Lock variables</code> 확인
        <ul>
          <li><code class="language-plaintext highlighter-rouge">Lock variables</code>가 0 : 프로세스는 <code class="language-plaintext highlighter-rouge">Lock variables</code>을 1로 변경하고 <code class="language-plaintext highlighter-rouge">Critical Region</code>에 진입</li>
          <li><code class="language-plaintext highlighter-rouge">Lock variables</code>가 1 : <code class="language-plaintext highlighter-rouge">Lock variables</code>가 0이 될 때까지 대기</li>
        </ul>
      </li>
      <li></li>
    </ul>
  </li>
</ul>

<h3 id="cpu-스케줄링-cpu-scheduling--cpu가-하나의-프로세스를-끝나면-다음에-수행할-프로세스를-정하는-알고리즘">CPU 스케줄링 (<code class="language-plaintext highlighter-rouge">CPU Scheduling</code>) : CPU가 하나의 프로세스를 끝나면 다음에 수행할 프로세스를 정하는 알고리즘</h3>
<hr />

<h4 id="선점-preemptive-">선점 (<code class="language-plaintext highlighter-rouge">Preemptive</code>) :</h4>

<h4 id="비선점-non-preemptive-">비선점 (<code class="language-plaintext highlighter-rouge">Non-Preemptive</code>) :</h4>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Backend" /><summary type="html"><![CDATA[이 항목은 현재 작성중입니다.&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Git] terminal로 Git 활용하기</title><link href="http://localhost:4000/git/git2/" rel="alternate" type="text/html" title="[Git] terminal로 Git 활용하기" /><published>2022-10-06T00:00:00+09:00</published><updated>2022-10-06T00:00:00+09:00</updated><id>http://localhost:4000/git/git2</id><content type="html" xml:base="http://localhost:4000/git/git2/"><![CDATA[<p class="notice--primary"><strong>이 항목은 현재 작성중입니다.</strong><br />&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.</p>

<p class="notice--info"><strong>이 항목은 macOS 기반으로 작성되었습니다.</strong><br />&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="깃-git--분산형-버전-관리-시스템-version-control-system"><a href="https://git-scm.com">깃</a> (<code class="language-plaintext highlighter-rouge">Git</code>) : 분산형 버전 관리 시스템 (<code class="language-plaintext highlighter-rouge">Version Control System</code>)</h2>
<ul>
  <li>버전 관리 (<code class="language-plaintext highlighter-rouge">Version Control</code>) : 문서를 수정할 때마다 구체적으로 저장하고 관리</li>
  <li>백업 (<code class="language-plaintext highlighter-rouge">Backup</code>) : 현재문서를 원격 저장소에 저장</li>
  <li>협업 (<code class="language-plaintext highlighter-rouge">Collaboration</code>) : 다른 팀원들과 원격 저장소를 통해 파일 공유</li>
</ul>

<h3 id="깃-설치">깃 설치</h3>
<hr />

<ul>
  <li><a href="https://pocj8ur4in.github.io/mac/homebrew1/">해당 링크</a>를 통해 Homebrew 설치</li>
  <li>Homebrew가 정상적으로 설치되었을 경우 터미널 창에 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install git
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 Git이 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git --version
// "git X.X.X" 출력 : 정상 설치
// "zsh: command not found: brew" 출력 : 설치 오류
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 사용자 정보를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config --global user.name "pocj8ur4in"
git config --global user.email "pocj8ur4in@gmail.com"
</code></pre></div></div>

<h2 id="git-디렉터리--깃-버전-version이-저장될-디렉터리"><code class="language-plaintext highlighter-rouge">.git</code> 디렉터리 : 깃 버전 (version)이 저장될 디렉터리</h2>
<ul>
  <li>작업 트리 (<code class="language-plaintext highlighter-rouge">working tree</code>) : 파일 수정, 저장 등의 작업을 하는 작업 디렉터리</li>
  <li>스테이지 (<code class="language-plaintext highlighter-rouge">stage</code>) : 수정할 파일이 대기하는 스테이징 영역</li>
  <li>리포지토리 (<code class="language-plaintext highlighter-rouge">repository</code>) : 스테이지에서 대기하고 있던 파일들을 버전으로 만들어 저장하는 저장소
    <blockquote>
      <p>이 때. 스테이지와 리포지토리는 <code class="language-plaintext highlighter-rouge">.git</code> 디렉터리에 저장된다.</p>
    </blockquote>
  </li>
</ul>

<h2 id="gitignore-디렉터리--버전-관리를-하지-않을-파일이나-디렉터리-혹은-파일-확장자를-제외할-디렉터리"><code class="language-plaintext highlighter-rouge">.gitignore</code> 디렉터리 : 버전 관리를 하지 않을 파일이나 디렉터리, 혹은 파일 확장자를 제외할 디렉터리</h2>

<ul>
  <li>특정한 이름을 가진 파일 제외</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>filename.txt
</code></pre></div></div>
<ul>
  <li>특정한 확장자를 가진 파일 제외</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>*.txt
</code></pre></div></div>
<ul>
  <li>특정한 경로 아래의 파일 제외</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>folder/
</code></pre></div></div>
<ul>
  <li>특정한 경로 아래의 특정한 확장자를 가진 파일 제외</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>folder/filename.txt
</code></pre></div></div>
<ul>
  <li>예외 만들기</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>!filename.txt
</code></pre></div></div>

<h2 id="readmemd-파일--프로젝트에-대한-설명과-사용-방법-license-등의-내용이-작성된-마크다운-형식의-파일"><code class="language-plaintext highlighter-rouge">README.MD</code> 파일 : 프로젝트에 대한 설명과 사용 방법, LICENSE 등의 내용이 작성된 마크다운 형식의 파일</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Github</code> 프로젝트 리포지토리 페이지에서 <code class="language-plaintext highlighter-rouge">README.MD</code>가 표현된 것을 확인 가능</li>
</ul>

<h2 id="git--깃-명령-다음에-입력할-수-있는-명령어-옵션-확인"><code class="language-plaintext highlighter-rouge">git</code> : 깃 명령 다음에 입력할 수 있는 명령어 옵션 확인</h2>

<ul>
  <li>
    <h3 id="git-init--깃-저장소-만들기"><code class="language-plaintext highlighter-rouge">git init</code> : 깃 저장소 만들기</h3>
  </li>
  <li>
    <h3 id="git-status---깃-상태-확인하기"><code class="language-plaintext highlighter-rouge">git status</code> :  깃 상태 확인하기</h3>
    <p><code class="language-plaintext highlighter-rouge">untracked</code> 상태 : 현재 깃이 해당 파일의 수정 여부를 추적하고 있지 않습니다. <br />(파일이 스테이지에서 대기 : <code class="language-plaintext highlighter-rouge">N</code>)</p>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">tracked</code> 상태 : 현재 깃이 해당 파일의 수정 여부를 추적하고 있습니다. <br />(파일이 스테이지에서 대기 : <code class="language-plaintext highlighter-rouge">Y</code>)
        <ul>
          <li><code class="language-plaintext highlighter-rouge">unmodified</code> 상태 : 깃에 현재 버전이 저장된 이후 파일이 수정되지 않았습니다.</li>
          <li><code class="language-plaintext highlighter-rouge">modified</code> 상태 : 깃에 현재 버전이 저장된 이후 파일이 수정되었습니다.</li>
          <li><code class="language-plaintext highlighter-rouge">staged</code> 상태 :</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <h3 id="git-add--작업-트리에서-스테이지로-스테이징-staging"><code class="language-plaintext highlighter-rouge">git add</code> : 작업 트리에서 스테이지로 스테이징 (<code class="language-plaintext highlighter-rouge">staging</code>)</h3>
  </li>
  <li>
    <h3 id="git-commit--스테이지에-있는-파일을-버전으로-커밋-commit"><code class="language-plaintext highlighter-rouge">git commit</code> : 스테이지에 있는 파일을 버전으로 커밋 (<code class="language-plaintext highlighter-rouge">commit</code>)</h3>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">-m</code> 옵션을 통해 커밋과 함께 메시지 저장</li>
      <li><code class="language-plaintext highlighter-rouge">-am</code> 옵션을 통해 스테이징과 커밋을 동시에 처리</li>
    </ul>
  </li>
  <li>
    <h3 id="git-log--리포지토리에-저장된-버전-정보-확인"><code class="language-plaintext highlighter-rouge">git log</code> : 리포지토리에 저장된 버전 정보 확인</h3>
    <ul>
      <li>커밋 해시 (<code class="language-plaintext highlighter-rouge">commit hash</code>) : 커밋을 구별하는 ID</li>
      <li><code class="language-plaintext highlighter-rouge">HEAD-&gt;master</code> : 해당 버전이 가장 최신임을 표시</li>
      <li>작성자 (<code class="language-plaintext highlighter-rouge">Author</code>) : <code class="language-plaintext highlighter-rouge">git config --global user</code>를 통해 입력한 사용자 정보 (이름과 이메일)</li>
      <li>작성일 (<code class="language-plaintext highlighter-rouge">Date</code>) : 버전이 작성된 시각</li>
      <li>커밋 메시지 (<code class="language-plaintext highlighter-rouge">commit message</code>) : <code class="language-plaintext highlighter-rouge">git commit -m</code>을 통해 저장된 메시지</li>
    </ul>
  </li>
  <li>
    <h3 id="git-diff--작업-트리와-스테이지에-있는-파일-비교"><code class="language-plaintext highlighter-rouge">git diff</code> : 작업 트리와 스테이지에 있는 파일 비교</h3>
  </li>
</ul>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Git" /><summary type="html"><![CDATA[이 항목은 현재 작성중입니다.&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Git] 자주 쓰는 linux 기본 명령어</title><link href="http://localhost:4000/git/git3/" rel="alternate" type="text/html" title="[Git] 자주 쓰는 linux 기본 명령어" /><published>2022-10-06T00:00:00+09:00</published><updated>2022-10-08T00:00:00+09:00</updated><id>http://localhost:4000/git/git3</id><content type="html" xml:base="http://localhost:4000/git/git3/"><![CDATA[<p class="notice--info"><strong>이 항목은 macOS 기반으로 작성되었습니다.</strong><br />&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<blockquote>
  <ul>
    <li>폴더 (<code class="language-plaintext highlighter-rouge">Folder</code>) 혹은 디렉터리 (<code class="language-plaintext highlighter-rouge">Directory</code>) : 파일의 분류를 위해 붙이는 이름공간 (<code class="language-plaintext highlighter-rouge">Namespace</code>)</li>
    <li>파일 (<code class="language-plaintext highlighter-rouge">File</code>) : 컴퓨터에 쓰이는 데이터를 모아놓은 것</li>
    <li>경로 (<code class="language-plaintext highlighter-rouge">Path</code>) : 파일 시스템을 통해 특정한 파일까지 찾아갈 수 있는 디렉토리의 구조
      <blockquote>
        <ul>
          <li>절대 경로 (<code class="language-plaintext highlighter-rouge">Absolute Path</code>) : 최상위 디렉터리부터 해당 파일까지 경유한 모든 경로를 작성하는 경로</li>
          <li>상대 경로 (<code class="language-plaintext highlighter-rouge">Relative Path</code>) : 현재 위치한 디렉터리를 기준으로 해당 파일까지의 위치를 작성하는 경로</li>
        </ul>
      </blockquote>
    </li>
  </ul>
</blockquote>

<h3 id="pwd-print-working-directory--현재-작업중인-디렉터리의-경로를-출력"><code class="language-plaintext highlighter-rouge">pwd</code> (<code class="language-plaintext highlighter-rouge">print working directory</code>) : 현재 작업중인 디렉터리의 경로를 출력</h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ pwd
&gt; /home
</code></pre></div></div>

<h3 id="cd-디렉토리-이름-change-directory--절대--상대-경로로-이롱"><code class="language-plaintext highlighter-rouge">cd</code> [디렉토리 이름] (<code class="language-plaintext highlighter-rouge">change directory</code>) : 절대 / 상대 경로로 이롱</h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">.</code> : 현재 디렉토리</li>
  <li><code class="language-plaintext highlighter-rouge">..</code> : 한 단계 위의 디렉토리</li>
  <li><code class="language-plaintext highlighter-rouge">/</code> : 최상위 디렉토리</li>
  <li><code class="language-plaintext highlighter-rouge">~</code> : Home 디렉토리</li>
  <li><code class="language-plaintext highlighter-rouge">-</code> : 이전 디렉토리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd /folder1/folder2
$ pwd
&gt; /home/folder1/folder2

$ cd ..
$ pwd
&gt; /home/folder1

$ cd -
$ pwd
&gt; /home/folder1/folder2

$ cd .
$ pwd
&gt; /home/folder1/folder2

$ cd ~
$ pwd
&gt; /home
</code></pre></div></div>

<h3 id="ls-옵션-파일-이름-list--현재-작업중인-디렉터리-내의-파일과-디렉토리-정보를-출력"><code class="language-plaintext highlighter-rouge">ls</code> [옵션] [파일 이름] (<code class="language-plaintext highlighter-rouge">list</code>) : 현재 작업중인 디렉터리 내의 파일과 디렉토리 정보를 출력</h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls
&gt; home/ folder1     folder3     file1    file2.txt
</code></pre></div></div>

<h3 id="cp-옵션-원본-파일-이름-대상-파일-이름-디렉토리-이름-copy--파일을-복사"><code class="language-plaintext highlighter-rouge">cp</code> [옵션] [원본 파일 이름] [대상 파일 이름/ 디렉토리 이름] (<code class="language-plaintext highlighter-rouge">copy</code>) : 파일을 복사</h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">f</code> : 덮어쓰기 시 물어보지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">-r</code> : 하위 디렉토리를 모두 포함하여 복사</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls
&gt; home/ folder1     folder3     file1    file2.txt

$ cp file1 folder1
$ cp -r folder3 folder1
$ cd folder1
$ ls
&gt; home/ folder1     folder3     file1
</code></pre></div></div>

<h3 id="mv-옵션-원본-파일-이름-대상-파일-이름-move--파일-혹은-디렉터리의-이름이나-위치를-변경"><code class="language-plaintext highlighter-rouge">mv</code> [옵션] [원본 파일 이름] [대상 파일 이름] (<code class="language-plaintext highlighter-rouge">move</code>) : 파일 혹은 디렉터리의 이름이나 위치를 변경</h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">f</code> : 덮어쓰기 시 물어보지 않음</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls
&gt; home/ folder1     folder3     file1

$ mv file1 file3
$ ls
&gt; home/ folder1     folder3     file3

$ mv file3 folder3
$ ls
&gt; home/ folder1     folder3

$ cd folder3
$ ls
&gt; folder3/ file3
</code></pre></div></div>

<h3 id="mkdir-옵션-파일-이름-make-directory--새로운-디렉터리를-생성"><code class="language-plaintext highlighter-rouge">mkdir</code> [옵션] [파일 이름] (<code class="language-plaintext highlighter-rouge">make directory</code>) : 새로운 디렉터리를 생성</h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">-p</code> : 하위 디렉터리까지 생성</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls
&gt; folder3/ file3

$ mkdir dir1
$ ls
&gt; folder3/ dir1     file3

$ mkdir dir2/dir3
$ ls
&gt; dir1     dir2       file3

$ cd dir2
$ ls
&gt; folder3/ dir3
</code></pre></div></div>

<h3 id="rm-옵션-파일-이름-remove--파일을-삭제"><code class="language-plaintext highlighter-rouge">rm</code> [옵션] [파일 이름] (<code class="language-plaintext highlighter-rouge">remove</code>) : 파일을 삭제</h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">-r</code> : 디렉터리를 삭제 (하위 디렉터리와 파일도 삭제)</li>
  <li><code class="language-plaintext highlighter-rouge">-f</code> : 사용자에 삭제 여부를 묻지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">-i</code> : 파일이나 디렉토리 삭제할 때마다 확인 (y: 확인, n: 취소)</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls
&gt; folder3/ folder1     folder2     file1

$ rm file1
$ ls
&gt; folder3/ folder1     folder2

$ rm -r folder1
$ ls
&gt; folder3/ folder2

$ rm -rf folder2
$ ls
&gt; folder3/
</code></pre></div></div>

<h3 id="find-디렉토리-이름-옵션--특정-파일이나-디렉터리를-검색"><code class="language-plaintext highlighter-rouge">find</code> [디렉토리 이름] [옵션] : 특정 파일이나 디렉터리를 검색</h3>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">-name</code> : 특정 이름이나 확장자를 가진 파일이나 디렉터리를 검색</li>
  <li><code class="language-plaintext highlighter-rouge">-exec [명령어] {} \;</code> : 검색 이후의 명령어를 처리
    <ul>
      <li><code class="language-plaintext highlighter-rouge">{}</code> : 검색 결과가 해당 구문 안으로 하나씩 처리</li>
      <li><code class="language-plaintext highlighter-rouge">\;</code> : <code class="language-plaintext highlighter-rouge">-exec</code> 다음 부분의 명령어를 실행</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">-type</code> : 디렉터리나 파일을 지정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls
&gt; ./ file1.txt     file2.txt     file3.txt

$ find ./ -name *.txt
&gt; ./ file1.txt     
&gt; ./ file2.txt     
&gt; ./ file3.txt

$ find ./ -name *.txt -exec rm -f {} \;
$ ls
&gt; ./
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Git" /><summary type="html"><![CDATA[이 항목은 macOS 기반으로 작성되었습니다.&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[macOS] 홈브류 (Homebrew)</title><link href="http://localhost:4000/mac/homebrew1/" rel="alternate" type="text/html" title="[macOS] 홈브류 (Homebrew)" /><published>2022-09-26T00:00:00+09:00</published><updated>2022-09-26T00:00:00+09:00</updated><id>http://localhost:4000/mac/homebrew1</id><content type="html" xml:base="http://localhost:4000/mac/homebrew1/"><![CDATA[<p class="notice--info"><strong>이 항목은 macOS 기반으로 작성되었습니다.</strong><br />&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="homebrew"><a href="https://brew.sh/index_ko">Homebrew</a></h2>

<ul>
  <li>Ruby로 작성된 macOS용 패키지 관리 어플리케이션 (Package Management Application)</li>
  <li>커맨드라인 도구나 시스템 패키지 설치에 사용</li>
  <li>cask Package : GUI 어플리케이션 설치도 가능하게 해주는 Homebrew 확장 패키지</li>
  <li>mas Package : App Store 어플리케이션 설치도 가능하게 해주는 Homebrew 확장 패키지</li>
</ul>

<h3 id="homebrew-설치">Homebrew 설치</h3>
<ul>
  <li>터미널 실행 후 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 Homebrew가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew --version
// "Homebrew X.X.X" 출력 : 정상 설치
// "zsh: command not found: brew" 출력 : 설치 오류
</code></pre></div></div>

<h3 id="cask-package-설치">cask Package 설치</h3>
<ul>
  <li>터미널 창에 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install cask
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 cask Package가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew list
</code></pre></div></div>

<h3 id="mas-package-설치">mas Package 설치</h3>
<ul>
  <li>터미널 창에 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install mas
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 mas Package가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew list
</code></pre></div></div>

<h3 id="homebrew-명령어">Homebrew 명령어</h3>

<table>
    <thead>
        <tr>
            <th>Homebrew 명령어 이름</th>
            <th>Homebrew 명령어 설명</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>brew --version</th>
            <td>Homebrew의 버전 정보 확인</td>
        </tr>
        <tr>
            <th>brew doctor</th>
            <td>Homebrew 설치 환경을 검사</td>
        </tr>
        <tr>
            <th>brew update</th>
            <td>Homebrew를 최신 버전으로 업데이트</td>
        </tr>
        <tr>
            <th>brew list</th>
            <td>설치된 패키지를 확인</td>
        </tr>
        <tr>
            <th>brew upgrade</th>
            <td>설치된 모든 패키지를 업데이트</td>
        </tr>
        <tr>
            <th>brew search (패키지명)</th>
            <td>해당 패키지가 설치되어 있는지 검색</td>
        </tr>
        <tr>
            <th>brew install (패키지명)</th>
            <td>해당 패키지를 최신 버전으로 설치</td>
        </tr>
        <tr>
            <th>brew info (패키지명)</th>
            <td>해당 패키지의 정보 확인</td>
        </tr>
        <tr>
            <th>brew upgrade (패키지명)</th>
            <td>해당 패키지를 업데이트</td>
        </tr>
        <tr>
            <th>brew uninstall (패키지명)</th>
            <td>해당 패키지를 삭제</td>
        </tr>
        <tr>
            <th>brew outdated</th>
            <td>최신 버전이 존재하는 패키지 확인</td>
        </tr>
        <tr>
            <th>brew cleanup (패키지명)</th>
            <td>해당 패키지의 구버전에 해당하는 파일 삭제</td>
        </tr>
    </tbody>
</table>

<h3 id="cask-명령어">cask 명령어</h3>
<ul>
  <li>기존의 brew 명령어 뒤에 <code class="language-plaintext highlighter-rouge">--cask</code>를 추가</li>
</ul>

<h3 id="mas-명령어">mas 명령어</h3>

<table>
    <thead>
        <tr>
            <th>mas 명령어 이름</th>
            <th>mas 명령어 설명</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>mas version</th>
            <td>mas의 버전 정보 확인</td>
        </tr>
        <tr>
            <th>mas list</th>
            <td>mas로 설치된 패키지 확인</td>
        </tr>
        <tr>
            <th>mas upgrade</th>
            <td>mas로 설치된 모든 패키지를 최신 버전으로 업데이트</td>
        </tr>
        <tr>
            <th>mas search (검색어)</th>
            <td>앱스토어에서 해당 검색어와 일치하는 패키지 검색</td>
        </tr>
        <tr>
            <th>mas install (패키지 ID)</th>
            <td>해당되는 ID를 가진 패키지를 최신 버전으로 설치</td>
        </tr>
        <tr>
            <th>mas upgrade (패키지 ID)</th>
            <td>해당되는 ID를 가진 패키지를 최신 버전으로 업데이트</td>
        </tr>
        <tr>
            <th>mas uninstall (패키지명)</th>
            <td>mas로 설치된 해당 패키지를 삭제</td>
        </tr>
        <tr>
            <th>mas outdated</th>
            <td>mas로 설치된 패키지 중 최신 버전이 존재하는 패키지 확인</td>
        </tr>
    </tbody>
</table>

<h3 id="homebrew-삭제">Homebrew 삭제</h3>
<ul>
  <li>터미널 실행 후 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// Homebrew로 설치한 모든 package를 일괄 삭제
brew remove --force --ignore-dependencies $(brew list)

// Homebrew 삭제
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)"
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 Homebrew가 정상적으로 삭제되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew --version
// "zsh: command not found: brew" 출력 : 정상 삭제
// "Homebrew X.X.X" 출력 : 삭제 오류
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Mac" /><summary type="html"><![CDATA[이 항목은 macOS 기반으로 작성되었습니다.&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[F/E] 2. CSS</title><link href="http://localhost:4000/frontend/css1/" rel="alternate" type="text/html" title="[F/E] 2. CSS" /><published>2022-09-26T00:00:00+09:00</published><updated>2022-10-08T00:00:00+09:00</updated><id>http://localhost:4000/frontend/css1</id><content type="html" xml:base="http://localhost:4000/frontend/css1/"><![CDATA[<p class="notice--primary"><strong>이 항목은 현재 작성중입니다.</strong><br />&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="css-cascading-style-sheet--html-문서가-웹-사이트에-표현되는-방법을-정하는-스타일-시트-언어"><code class="language-plaintext highlighter-rouge">CSS</code> (<code class="language-plaintext highlighter-rouge">Cascading Style Sheet</code>) : HTML 문서가 웹 사이트에 표현되는 방법을 정하는 스타일 시트 언어</h2>
<ul>
  <li>레이아웃 및 디자인 정보로 인해 구조화된 <code class="language-plaintext highlighter-rouge">HTML</code>을 만드는 데에 어려움을 겪자 디자인적 요소들을 분리하기 위해 사용</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 선택자 {
    CSS 속성 : CSS 값;
}
</code></pre></div></div>

<blockquote>
  <ul>
    <li>CSS 선택자 : 어떤 것을 꾸밀지?</li>
    <li>CSS 속성 : 어떤 모양을 꾸밀지?</li>
    <li>CSS 값 : 어떻게 꾸밀지?</li>
  </ul>
</blockquote>

<h3 id="-css를-html에-적용시키는-방법"># CSS를 HTML에 적용시키는 방법</h3>

<h4 id="--inline-style-sheet--html-태그의-속성-style에-css-코드를-넣는-방법">- <code class="language-plaintext highlighter-rouge">Inline Style Sheet</code> : HTML 태그의 속성 <code class="language-plaintext highlighter-rouge">style=""</code>에 CSS 코드를 넣는 방법</h4>
<hr />

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p style="color: blue"&gt;
    hello world
&lt;/p&gt;
</code></pre></div></div>

<p>출력 :</p>
<p style="font-size:15px; background-color: black;color: blue">
    hello world
</p>

<h4 id="--internal-style-sheet--html-문서-내-태그-stylestyle에-css-코드를-넣는-방법">- <code class="language-plaintext highlighter-rouge">Internal Style Sheet</code> : HTML 문서 내 태그 <code class="language-plaintext highlighter-rouge">&lt;style&gt;&lt;/style&gt;</code>에 CSS 코드를 넣는 방법</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;head&gt;
    &lt;style&gt;
        p {
            color: blue;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;p style="color: blue"&gt;
        hello world
    &lt;/p&gt;
&lt;/body&gt;
</code></pre></div></div>

<h4 id="--linking-style-sheet--별도의-css-파일을-만들고-이를-html-문서와-연결하는-방법">- <code class="language-plaintext highlighter-rouge">Linking Style Sheet</code> : 별도의 .CSS 파일을 만들고 이를 HTML 문서와 연결하는 방법</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;link rel="stylesheet" href="style.css"&gt;
</code></pre></div></div>

<h3 id="css-선언-css-declaration--css-속성과-css-값을-지정">CSS 선언 (<code class="language-plaintext highlighter-rouge">CSS declaration</code>) : CSS 속성과 CSS 값을 지정</h3>
<hr />

<ul>
  <li>세미클론 (<code class="language-plaintext highlighter-rouge">;</code>)으로 선언을 구분해 여러 번의 선언 가능</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 선택자 {
    CSS 속성1 : CSS 값1;
    CSS 속성2 : CSS 값2;
}
</code></pre></div></div>

<ul>
  <li>작은따옴표 (<code class="language-plaintext highlighter-rouge">''</code>) 혹은 큰따옴표 (<code class="language-plaintext highlighter-rouge">""</code>)으로 값의 공백 처리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 선택자 {
    CSS 속성1 : 'CSS 값1';
    CSS 속성2 : "CSS 값2";
}
</code></pre></div></div>

<ul>
  <li>값은 속성을 여러 번 선언하였다면, 나중에 설정된 값이 적용</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 선택자 {
    CSS 속성1 : CSS 값1;
    CSS 속성1 : CSS 값2;
}
/* CSS 속성 1에는 CSS 값2가 적용된다. */
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">!important</code> : 값은 속성을 여러 번 선언하였다면, 나중에 설정된 값이 아닌 CSS 값 뒤에 <code class="language-plaintext highlighter-rouge">!important</code>가 사용된 것을 우선시</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 선택자 {
    CSS 속성1 : CSS 값1 !important;
    CSS 속성1 : CSS 값2;
}
/* CSS 속성 1에는 CSS 값1가 적용된다. */
</code></pre></div></div>

<h3 id="css-주석--">CSS 주석 : <code class="language-plaintext highlighter-rouge">/**/</code></h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/* (주석 1) */

/*
(주석 2)
*/

/*/*(주석 3)*/*/
</code></pre></div></div>

<h3 id="css-변수-css-variables--css-변수를-선언할-경우-변수를-정의한-요소와-하위-요소에서-css-변수를-사용-가능">CSS 변수 (<code class="language-plaintext highlighter-rouge">CSS variables</code>) : CSS 변수를 선언할 경우, 변수를 정의한 요소와 하위 요소에서 CSS 변수를 사용 가능</h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--variable-name: value;
</code></pre></div></div>
<h4 id="root--css-변수를-전역-변수로-정의"><code class="language-plaintext highlighter-rouge">:root</code> : CSS 변수를 전역 변수로 정의</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>:root {
       --variable-name: value;
}
</code></pre></div></div>

<h3 id="css-상속-css-inheritance--부모-태그의-상속하는-속성은-자식-태그에-영향을-미침">CSS 상속 (<code class="language-plaintext highlighter-rouge">CSS inheritance</code>) : 부모 태그의 상속하는 속성은 자식 태그에 영향을 미침</h3>
<hr />

<ul>
  <li>
    <h4 id="부모-자식-관계--어떤-태그-안에-다른-태그가-있는-관계">부모-자식 관계 : 어떤 태그 안에 다른 태그가 있는 관계</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;
    &lt;span&gt;
        &lt;span&gt; 태그는 &lt;p&gt; 태그의 자식
        &lt;p&gt; 태그는 &lt;span&gt; 태그의 부모
    &lt;/span&gt;
&lt;/p&gt;
</code></pre></div></div>

<ul>
  <li>
    <h4 id="형제-관계--어떤-태그-안에-같이-있는-관계">형제 관계 : 어떤 태그 안에 같이 있는 관계</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;
    &lt;span&gt;
        &lt;span&gt; 태그는 &lt;img&gt; 태그와 형제
    &lt;/span&gt;
    &lt;img&gt;
&lt;/p&gt;
</code></pre></div></div>

<ul>
  <li>
    <h4 id="캐스케이딩-cascading--부모-태그에서-정의된-속성은-자식-태그로-상속-자식-태그에-정의된-속성은-변경-가능">캐스케이딩 (<code class="language-plaintext highlighter-rouge">Cascading</code>) : 부모 태그에서 정의된 속성은 자식 태그로 상속, 자식 태그에 정의된 속성은 변경 가능</h4>
  </li>
</ul>

<p>입력 :</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p style="color: red"&gt;
    &lt;span style="color: blue"&gt;
        - CSS 우선순위 : span의 font-color 속성이 p의 font-color 속성보다 높다.
    &lt;/span&gt;
&lt;/p&gt;

</code></pre></div></div>

<p>출력 :</p>
<p style="font-size:15px; background-color: black; color: red">
    <span style="color: blue">
        CSS 우선순위 : span의 font-color 속성이 p의 font-color 속성보다 높다.
    </span>
</p>

<h3 id="css-선택자-css-selector--html-문서에-스타일을-입힐-요소를-선택하는-문자">CSS 선택자 (<code class="language-plaintext highlighter-rouge">CSS Selector</code>) : HTML 문서에 스타일을 입힐 요소를 선택하는 문자</h3>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 선택자 {
    CSS 속성 : CSS 값;
}
</code></pre></div></div>
<blockquote>
  <ul>
    <li>여러 종류의 선택자를 중첩 가능 (<code class="language-plaintext highlighter-rouge">p.span</code>)</li>
    <li>여러 종류의 선택자를 <code class="language-plaintext highlighter-rouge">space</code> 키로 구분해 동시에 선택 가능  (<code class="language-plaintext highlighter-rouge">p.span p.img</code>)</li>
  </ul>
</blockquote>

<ul>
  <li>
    <h4 id="전체-선택자---모든-요소를-선택하는-선택자">전체 선택자 <code class="language-plaintext highlighter-rouge">*</code> : 모든 요소를 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* {
  color: blue;
}
</code></pre></div></div>

<ul>
  <li>
    <h4 id="태그-선택자-tag--해당-태그의-요소를-선택하는-선택자">태그 선택자 <code class="language-plaintext highlighter-rouge">tag</code> : 해당 태그의 요소를 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tag {
  color: aqua;
}
</code></pre></div></div>

<ul>
  <li>
    <h4 id="아이디-선택자-id--해당-아이디의-요소를-선택하는-선택자">아이디 선택자 <code class="language-plaintext highlighter-rouge">#id</code> : 해당 아이디의 요소를 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#tag {
  color: red;
}
</code></pre></div></div>

<ul>
  <li>
    <h4 id="클래스-선택자-class--해당-클래스의-요소를-선택하는-선택자">클래스 선택자 <code class="language-plaintext highlighter-rouge">.class</code> : 해당 클래스의 요소를 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.tag {
  color: green;
}
</code></pre></div></div>

<blockquote>
  <p>아이디 (<code class="language-plaintext highlighter-rouge">id</code>)와 클래스 (<code class="language-plaintext highlighter-rouge">class</code>)의 차이점 : 클래스는 한 문서에 여러 개를 사용 가능하나, 아이디는 한 문서에 한번만 사용 가능</p>
</blockquote>

<ul>
  <li>
    <h4 id="후손-선택자-selector1selector2--해당-선택자의-모든-하위-요소-중-하나를-지정해-선택하는-선택자">후손 선택자 <code class="language-plaintext highlighter-rouge">(selector1)(selector2)</code> : 해당 선택자의 모든 하위 요소 중 하나를 지정해 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>div tag{
     color: yellow;
}
...
&lt;div&gt;
    &lt;tag&gt;
        hello world
    &lt;/tag&gt;
&lt;/div&gt;
&lt;div&gt;
    &lt;span&gt;
        &lt;tag&gt;
            hello world
        &lt;/tag&gt;
    &lt;/span&gt;
&lt;/div&gt;
</code></pre></div></div>

<ul>
  <li>
    <h4 id="자손-선택자-selector1selector2--해당-선택자의-자식-요소-중-하나를-지정해-선택하는-선택자">자손 선택자 <code class="language-plaintext highlighter-rouge">(selector1)&gt;(selector2)</code> : 해당 선택자의 자식 요소 중 하나를 지정해 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>div &gt; tag{
     color: purple;
}
...
&lt;div&gt;
    &lt;tag&gt;
        hello world
    &lt;/tag&gt;
&lt;/div&gt;
</code></pre></div></div>

<ul>
  <li>
    <h4 id="형제-선택자-selector1selector2--해당-선택자의-형제-요소-중-하나를-지정해-선택하는-선택자">형제 선택자 <code class="language-plaintext highlighter-rouge">(selector1)~(selector2)</code> : 해당 선택자의 형제 요소 중 하나를 지정해 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>div ~ tag{
     color: pink;
}
...
&lt;div&gt;
    hello world
&lt;/div&gt;
&lt;tag&gt;
    !
&lt;/tag&gt;
</code></pre></div></div>

<ul>
  <li>
    <h4 id="인접-형제-선택자-selector1selector2--선택자의-형제-중-바로-다음에-오는-선택자를-지정해-선택하는-선택자">인접 형제 선택자 <code class="language-plaintext highlighter-rouge">(selector1)+(selector2)</code> : 선택자의 형제 중 바로 다음에 오는 선택자를 지정해 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>div + tag{
     color: gray;
}
...
&lt;div&gt;
    hello world
&lt;/div&gt;
&lt;tag&gt;
    ?
&lt;/tag&gt;
&lt;tag&gt;
    !
&lt;/tag&gt;
/* 첫번째 형제 요소인 "?"가 회색으로 출력 */
</code></pre></div></div>

<ul>
  <li>
    <h4 id="속성-선택자-속성--태그에-해당-속성이-명시되어-있는-요소들을-선택하는-선택자">속성 선택자 <code class="language-plaintext highlighter-rouge">[속성]</code> : 태그에 해당 속성이 명시되어 있는 요소들을 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tag[attributes]{
     color: white;
}
...
&lt;tag attributes="true"&gt;
    hello world
&lt;/tag&gt;
</code></pre></div></div>

<ul>
  <li>
    <h4 id="속성-선택자-속성문자열--태그에-해당-속성이-명시되어-있고-그-값이-문자열인-요소들을-선택하는-선택자">속성 선택자 <code class="language-plaintext highlighter-rouge">[속성=문자열]</code> : 태그에 해당 속성이 명시되어 있고 그 값이 문자열인 요소들을 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tag[attributes="attr"]{
     color: yellow;
}
...
&lt;tag attributes="attr"&gt;
    hello world
&lt;/tag&gt;
</code></pre></div></div>

<h3 id="가상-요소-선택자-pseudo-elements-selector--요소의-특정-부분을-선택하는-선택자">가상 요소 선택자 (<code class="language-plaintext highlighter-rouge">Pseudo-elements Selector</code>) : 요소의 특정 부분을 선택하는 선택자</h3>
<hr />

<ul>
  <li>
    <h4 id="first-line--요소의-첫번째-줄을-선택하는-선택자"><code class="language-plaintext highlighter-rouge">::first-line</code> : 요소의 첫번째 줄을 선택하는 선택자</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tag::first-line {
  color: orange;
}
</code></pre></div></div>

<h2 id="css-속성-css-attributes--웹-사이트에-표현되는-방법을-지정하는-요소">CSS 속성 (<code class="language-plaintext highlighter-rouge">CSS attributes</code>) : 웹 사이트에 표현되는 방법을 지정하는 요소</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CSS 속성 : CSS 값;
</code></pre></div></div>

<h3 id="-폰트-font-관련-속성"># 폰트 (font) 관련 속성</h3>

<h4 id="color--색상을-지정하는-속성"><code class="language-plaintext highlighter-rouge">color:</code> : 색상을 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>color: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>#000000</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>color: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>color</td>
                                    <td>색상 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="color:red"&gt;
    hello world
&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: red; font-size: 15px; background-color: black;">
    hello world
</div>

<h4 id="font-size--글자-크기를-지정하는-속성"><code class="language-plaintext highlighter-rouge">font-size:</code> : 글자 크기를 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>font-size: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>medium</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>font-size: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>medium</td>
                                    <td>웹 브라우저에서 정한 기본값</td>
                                </tr>
                                <tr>
                                    <td>xx-small, x-small, small, large, x-large, xx-large</td>
                                    <td>기본값에 대한 상대적인 크기</td>
                                </tr>
                                <tr>
                                    <td>smaller, larger</td>
                                    <td>부모 요소의 글자 크기에 대한 상대적인 크기</td>
                                </tr>
                                <tr>
                                    <td>px</td>
                                    <td>글자 크기를 직접 지정</td>
                                </tr>
                                <tr>
                                    <td>%, em</td>
                                    <td>부모 요소의 글자 크기에 대한 상대적인 글자 크기의 비율을 직접 지정</td>
                                </tr>
                                <tr>
                                    <td>rem</td>
                                    <td>최상위 요소의 글자 크기에 대한 상대적인 글자 크기의 비율을 직접 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="font-size: xx-small"&gt;xx-small&lt;/div&gt;
&lt;div style="font-size: x-small"&gt;x-small&lt;/div&gt;
&lt;div style="font-size: small"&gt;small&lt;/div&gt;
&lt;div style="font-size: medium"&gt;medium&lt;/div&gt;
&lt;div style="font-size: large"&gt;large&lt;/div&gt;
&lt;div style="font-size: x-large"&gt;x-large&lt;/div&gt;
&lt;div style="font-size: xx-large"&gt;xx-large&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; background-color: black;">
    <div style="font-size: xx-small">xx-small</div>
    <div style="font-size: x-small">x-small</div>
    <div style="font-size: small">small</div>
    <div style="font-size: medium">medium</div>
    <div style="font-size: large">large</div>
    <div style="font-size: x-large">x-large</div>
    <div style="font-size: xx-large">xx-large</div>
</div>
<p><br />
입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="font-size: smaller"&gt;smaller&lt;/div&gt;
&lt;div&gt;medium&lt;/div&gt;
&lt;div style="font-size: larger"&gt;larger&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; background-color: black;">
    <div style="font-size: smaller">smaller</div>
    <div>medium</div>
    <div style="font-size: larger">larger</div>
</div>
<p><br />
입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="font-size: 10px"&gt;
    10px
    &lt;i style="font-size: 200%;"&gt;
        20px
        &lt;span style="font-size: 0.8em"&gt;
            16px
            &lt;b style="font-size: 1rem"&gt;
                1rem
            &lt;/b&gt;
        &lt;/span&gt;
    &lt;/i&gt;
&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; background-color: black; font-size: 10px">
    10px
    <i style="font-size: 200%;">
        20px
        <span style="font-size: 0.8em">
            16px
            <b style="font-size: 1rem">
                1rem
            </b>
        </span>
    </i>
</div>

<h4 id="font-family--글꼴을-지정하는-속성"><code class="language-plaintext highlighter-rouge">font-family:</code> : 글꼴을 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>font-family: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>웹 브라우저의 기본 글꼴</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>font-family: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>font</td>
                                    <td>글꼴 이름 / 글꼴 유형</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="font-family: (지정할 글꼴);"&gt;
    지정된 글꼴로 출력합니다.
&lt;/div&gt;
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="font-family: (지정할 글꼴1), (지정할 글꼴2);"&gt;
    지정된 글꼴1로 출력하되 (i) 해당 글꼴이 존재하지 않는다면 (ii) 표현할 수 없다면, 지정된 글꼴2로 출력합니다.
&lt;/div&gt;
</code></pre></div></div>

<h4 id="font-weight--글자의-굵기-정도를-지정하는-속성"><code class="language-plaintext highlighter-rouge">font-weight:</code> : 글자의 굵기 정도를 지정하는 속성</h4>
<hr />

<blockquote>
  <p>나타낼 수 있는 굵기의 정도는 글꼴마다 다름</p>
</blockquote>

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>font-weight: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>normal</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>font-weight: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>normal</td>
                                    <td>보통 굵기 (400)</td>
                                </tr>
                                <tr>
                                    <td>bold</td>
                                    <td>굵은 굵기 (700)</td>
                                </tr>
                                <tr>
                                    <td>bolder</td>
                                    <td>상속된 값보다 굵은 크기</td>
                                </tr>
                                <tr>
                                    <td>lighter</td>
                                    <td>상속된 값보다 얇은 크기</td>
                                </tr>
                                <tr>
                                    <td>number</td>
                                    <td>굵기 정도를 직접 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="font-weight: normal"&gt;
    &lt;div style="font-weight: lighter"&gt;normal-lighter&lt;/div&gt;
    normal
    &lt;div style="font-weight: bolder"&gt;normal-bolder&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-weight: bold"&gt;
    &lt;div style="font-weight: lighter"&gt;bold-lighter&lt;/div&gt;
    bold
    &lt;div style="font-weight: bolder"&gt;bold-bolder&lt;/div&gt;
&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; font-size: 15px; background-color: black;">
    <div style="font-weight: normal">
        <div style="font-weight: lighter">normal-lighter</div>
        normal
        <div style="font-weight: bolder">normal-bolder</div>
    </div>
    <div style="font-weight: bold">
        <div style="font-weight: lighter">bold-lighter</div>
        bold
        <div style="font-weight: bolder">bold-bolder</div>
    </div>
</div>

<h3 id="-텍스트-text-관련-속성"># 텍스트 (text) 관련 속성</h3>

<h4 id="text-align--텍스트를-정렬하는-속성"><code class="language-plaintext highlighter-rouge">text-align:</code> : 텍스트를 정렬하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>text-align: 문법</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>left</td>
                <td>왼쪽 정렬</td>
            </tr>
            <tr>
                <td>right</td>
                <td>오른쪽 정렬</td>
            </tr>
            <tr>
                <td>center</td>
                <td>가운데 정렬</td>
            </tr>
            <tr>
                <td>justify</td>
                <td>양쪽 정렬</td>
            </tr>
            <tr>
                <td>initial</td>
                <td>현재의 속성값을 기본값으로 지정</td>
            </tr>
            <tr>
                <td>inherit</td>
                <td>부모 요소의 속성값 상속</td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="text-align: left;"&gt;바다는 크레파스보다 진한 푸르고 육중한 비늘을 무겁게 뒤채면서, 숨을 쉰다.&lt;/div&gt;
&lt;div style="text-align: right;"&gt;중립국으로 가는 석방 포로를 실은 인도 배 타고르호는, 흰 페인트로 말쑥하게 칠한 삼천 톤의 몸을 떨면서, 물건처럼 빼곡이 들어찬 동지나 바다의 훈김을 헤치며 미끄려져 간다.&lt;/div&gt;
&lt;div style="text-align: center;"&gt;석방 포로 이명준(李明俊)은, 오른편의 곧장 갑판으로 통한 사닥다리를 타고 내려가, 배 뒤쪽 난간에 가서, 거기에 기대어 선다.&lt;/div&gt;
&lt;div style="text-align: justify;"&gt;담배를 꺼내 물고 라이터를 켜댔으나 바람에 이내 꺼지고 하여, 몇 번이나 그르친 끝에, 그 자리에 쭈그리고 앉아서 오른팔로 얼굴을 가리고 간신히 댕긴다.&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; font-size: 15px; background-color: black;">
    <div style="text-align: left;">바다는 크레파스보다 진한 푸르고 육중한 비늘을 무겁게 뒤채면서, 숨을 쉰다.</div>
    <div style="text-align: right;">중립국으로 가는 석방 포로를 실은 인도 배 타고르호는, 흰 페인트로 말쑥하게 칠한 삼천 톤의 몸을 떨면서, 물건처럼 빼곡이 들어찬 동지나 바다의 훈김을 헤치며 미끄려져 간다.</div>
    <div style="text-align: center;">석방 포로 이명준(李明俊)은, 오른편의 곧장 갑판으로 통한 사닥다리를 타고 내려가, 배 뒤쪽 난간에 가서, 거기에 기대어 선다.</div>
    <div style="text-align: justify;">담배를 꺼내 물고 라이터를 켜댔으나 바람에 이내 꺼지고 하여, 몇 번이나 그르친 끝에, 그 자리에 쭈그리고 앉아서 오른팔로 얼굴을 가리고 간신히 댕긴다.</div>
</div>

<h4 id="text-decoration--텍스트을-꾸미는-선을-지정하는-속성"><code class="language-plaintext highlighter-rouge">text-decoration:</code> : 텍스트을 꾸미는 선을 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>text-decoration: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>none</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>text-decoration: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>none</td>
                                    <td>선을 만들지 않음</td>
                                </tr>
                                <tr>
                                    <td>line-through</td>
                                    <td>취소선 생성</td>
                                </tr>
                                <tr>
                                    <td>overline</td>
                                    <td>윗줄 생성</td>
                                </tr>
                                <tr>
                                    <td>underline</td>
                                    <td>밑줄 생성</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="text-decoration: none"&gt;none&lt;/div&gt;
&lt;div style="text-decoration: line-through"&gt;line-through&lt;/div&gt;
&lt;div style="text-decoration: overline"&gt;overline&lt;/div&gt;
&lt;div style="text-decoration: underline"&gt;underline&lt;/div&gt;
&lt;div style="text-decoration: line-through overline underline"&gt;text-decoration&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; font-size: 15px; background-color: black;">
    <div style="text-decoration: none">none</div>
    <div style="text-decoration: line-through">line-through</div>
    <div style="text-decoration: overline">overline</div>
    <div style="text-decoration: underline">underline</div>
    <div style="text-decoration: line-through overline underline">text-decoration</div>
</div>

<h4 id="columns--여러-개의-문단을-만드는-속성"><code class="language-plaintext highlighter-rouge">columns:</code> : 여러 개의 문단을 만드는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>columns: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>auto</td>
            </tr>
            <tr>
                <td>속성값</td>
                <td>문단의 최대 개수 or 문단의 최소 가로 길이</td>
            </tr>
         </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="columns: 3;"&gt;자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; font-size: 15px; background-color: black;">
    <div style="columns: 3;">자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.</div>
</div>
<p><br />
입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="columns: 150px;"&gt;자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="color: white; font-size: 15px; background-color: black;">
    <div style="columns: 150px;">자기가 무엇에 홀려 있음을 깨닫는다. 그 넉넉한 뱃길에 여태껏 알아보지 못하고, 숨바꼭질을 하고, 피하려 하고 총으로 쏘려고까지 한 일을 생각하면, 무엇에 씌었던 게 틀림없다. 큰 새 작은 새는 좋아서 미칠 듯이, 물속에 가라앉을 듯, 탁 스치고 지나가는가 하면, 되돌아오면서, 그렇다고 한다. 무덤을 이기고 온, 못 잊을 고운 각시들이, 손짓해 본다. 내 딸아. 비로소 마음이 놓인다. 옛날, 어느 벌판에서 겪은 신내림이, 문득 떠오른다. 그러자, 언젠가 전에, 이렇게 이 배를 타고 가다가, 그 벌판을 지금처럼 떠올린 일이, 그리고 딸을 부르던 일이, 이렇게 마음이 놓이던 일이 떠올랐다. 거울 속에 비친 남자는 활짝 웃고 있다.</div>
</div>

<h3 id="-박스-모델-box-model--모든-html-엘리멘트들은-박스-모양으로-구성되어-있음"># 박스 모델 (<code class="language-plaintext highlighter-rouge">Box Model</code>) : 모든 HTML 엘리멘트들은 박스 모양으로 구성되어 있음</h3>

<div style="
    background-color: black;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    padding-top: 2%;
    padding-bottom: 2%;
    ">
    <div style="
            border-style: solid;
            border-width: 5px;
            border-color: red;
            margin-left: 10%;
            margin-right: 10%;
            padding-bottom: 2%;">
        마진 영역 (Margin Area)
        <div style="
            border-style: inherit;
            border-width: inherit;
            border-color: blue;
            margin-left: inherit;
            margin-right: inherit;
            padding-bottom: inherit;">
            테두리 영역 (Border Area)
            <div style="
                border-style: inherit;
                border-width: inherit;
                border-color: green;
                margin-left: inherit;
                margin-right: inherit;
                padding-bottom: inherit;">
                패딩 영역 (Padding Area)
                <div style="
                    border-style: inherit;
                    border-width: inherit;
                    border-color: aqua;
                    margin-left: inherit;
                    margin-right: inherit;
                    padding-bottom: inherit;">
                    컨텐츠 영역 (Content Area)
                </div>
            </div>
        </div>
    </div>
</div>

<h4 id="margin-속성--마진에-값을-부여하는-속성"><code class="language-plaintext highlighter-rouge">margin</code> 속성 : 마진에 값을 부여하는 속성</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.box {
    margin: xx yy zz ww;
    /* xx는 위쪽 마진, yy는 오른쪽 마진, zz는 아랫쪽 마진, ww는 왼쪽 마진 */
    margin-top: xx;
    margin-right: xx;
    margin-bottom: xx;
    margin-left: xx;
}
</code></pre></div></div>

<h4 id="padding-속성--패딩에-값을-부여하는-속성"><code class="language-plaintext highlighter-rouge">padding</code> 속성 : 패딩에 값을 부여하는 속성</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.box {
    padding: xx yy zz ww;
    /* xx는 위쪽 패딩, yy는 오른쪽 패딩, zz는 아랫쪽 패딩, ww는 왼쪽 패딩 */
    padding-top: xx;
    padding-right: xx;
    padding-bottom: xx;
    padding-left: xx;
}
</code></pre></div></div>

<h4 id="border-속성--테두리에-값을-부여하는-속성"><code class="language-plaintext highlighter-rouge">border</code> 속성 : 테두리에 값을 부여하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>border: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>medium, none, color</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>border: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>border-width</td>
                                    <td>
                                        <table style="font-size: 106%">
                                            <thead>
                                                <tr>
                                                    <td>border-width: 값</td>
                                                    <td>테두리의 두께 정도 지정</td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>medium</td>
                                                    <td>기본값</td>
                                                </tr>
                                                <tr>
                                                    <td>thick</td>
                                                    <td>기본값보다 굵게</td>
                                                </tr>
                                                <tr>
                                                    <td>thin</td>
                                                    <td>기본값보다 얇게</td>
                                                </tr>
                                                <tr>
                                                    <td>%, px, em, rem</td>
                                                    <td>직접 테두리의 두께 정도 지정</td>
                                                </tr>
                                                <tr>
                                                    <td>initial</td>
                                                    <td>현재의 속성값을 기본값으로 지정</td>
                                                </tr>
                                                <tr>
                                                    <td>inherit</td>
                                                    <td>부모 요소의 속성값 상속</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td>border-style</td>
                                    <td>
                                        <table style="font-size: 106%">
                                            <thead>
                                                <tr>
                                                    <td>border-style: 값</td>
                                                    <td>테두리의 모양 지정</td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>none</td>
                                                    <td>테두리를 생성하지 않음 (기본값)</td>
                                                </tr>
                                                <tr>
                                                    <td>dashed, dotted,<br />double, groove,<br />hidden, inset,<br /> outset, ridge,<br />solid</td>
                                                    <td>여러 모양의 테두리를 생성</td>
                                                </tr>
                                                <tr>
                                                    <td>initial</td>
                                                    <td>현재의 속성값을 기본값으로 지정</td>
                                                </tr>
                                                <tr>
                                                    <td>inherit</td>
                                                    <td>부모 요소의 속성값 상속</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td>border-color</td>
                                    <td>테두리의 색상 지정</td>
                                </tr>
                                <tr>
                                    <td>border-radius</td>
                                    <td>%, px, em, rem 등으로 테두리의 모서리에 대한 둥근 정도 지정
                                        <div style="text-align: left;">
                                            <li>top-left-x</li>
                                            <li>top-right-x</li>
                                            <li>bottom-right-x</li>
                                            <li>bottom-left-x</li>
                                            <li>top-left-y</li>
                                            <li>top-right-y</li>
                                            <li>bottom-right-y</li>
                                            <li>bottom-left-y</li>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="
    background-color: black;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    padding-top: 2%;
    padding-bottom: 2%;
    "&gt;
    &lt;div style="
        border: dashed 5px red;
        margin-left: 5%;
        margin-right: 5%;
        border-radius: 25%;
        padding-bottom: inherit;"&gt;
    dashed 5px red (border-radius: 25%)
        &lt;div style="
            border: dotted 3px blue;
            margin-left: inherit;
            margin-right: inherit;
            padding-bottom: inherit;"&gt;
        dotted 3px blue
            &lt;div style="
                border: double 7px green;
                margin-left: inherit;
                margin-right: inherit;
                padding-bottom: inherit;"&gt;
            double 7px green
                &lt;div style="
                    border: solid 3px gray;
                    margin-left: inherit;
                    margin-right: inherit;
                    padding-bottom: inherit;"&gt;
                    solid 3px gray
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre></div></div>

<div style="
    background-color: black;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    padding-top: 2%;
    padding-bottom: 2%;
    ">
    <div style="
        border: dashed 5px red;
        margin-left: 5%;
        margin-right: 5%;
        border-radius: 25%;
        padding-bottom: inherit;">
    dashed 5px red (border-radius: 25%)
        <div style="
            border: dotted 3px blue;
            margin-left: inherit;
            margin-right: inherit;
            padding-bottom: inherit;">
        dotted 3px blue
            <div style="
                border: double 7px green;
                margin-left: inherit;
                margin-right: inherit;
                padding-bottom: inherit;">
            double 7px green
                <div style="
                    border: solid 3px gray;
                    margin-left: inherit;
                    margin-right: inherit;
                    padding-bottom: inherit;">
                    solid 3px gray
                </div>
            </div>
        </div>
    </div>
</div>

<h4 id="width-height-속성--박스의-가로-세로-길이를-지정하는-속성"><code class="language-plaintext highlighter-rouge">width</code>, <code class="language-plaintext highlighter-rouge">height</code> 속성 : 박스의 가로, 세로 길이를 지정하는 속성</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="
    postion: relative;
    background-color: black;
    margin-left: auto;
    margin-right: auto;
    width: 200px;
    height: 200px;"&gt;
    &lt;div style="
        postion: absolute;
        background-color: white;
        margin-left: auto;
        margin-right: auto;
        width: 70%;
        height: 70%;"&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre></div></div>

<div style="
    postion: relative;
    background-color: black;
    margin-left: auto;
    margin-right: auto;
    width: 200px;
    height: 200px;">
    <div style="
        postion: absolute;
        background-color: white;
        margin-left: auto;
        margin-right: auto;
        width: 70%;
        height: 70%;">
    </div>
</div>

<h4 id="box-sizing-속성--박스-크기의-기준을-지정하는-속성"><code class="language-plaintext highlighter-rouge">box-sizing</code> 속성 : 박스 크기의 기준을 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>box-sizing: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>content-box</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>box-sizing: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>content-box</td>
                                    <td>컨텐츠 영역을 기준으로 지정</td>
                                </tr>
                                <tr>
                                    <td>border-box</td>
                                    <td>테두리 영역을 기준으로 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.cb {
    box-sizing: content-box;
}
.bb {
    box-sizing: border-box;
}
.iib {
    box-sizing: initial;
}
.ihb {
    box-sizing: inherit;
}
</code></pre></div></div>

<h3 id="-배경-background-관련-속성"># 배경 (background) 관련 속성</h3>

<h4 id="background-color--배경색을-지정하는-속성"><code class="language-plaintext highlighter-rouge">background-color:</code> : 배경색을 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>background-color: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>transparent</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>background-color: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>transparent</td>
                                    <td>배경색 없음</td>
                                </tr>
                                <tr>
                                    <td>color</td>
                                    <td>배경색 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="
    postion: relative;
    background-color: black;
    width: 200px;
    height: 200px;"&gt;
    &lt;div style="
        postion: absolute;
        background-color: white;
        margin-left: auto;
        margin-right: auto;
        width: 70%;
        height: 70%;"&gt;
        &lt;div style="
            postion: absolute;
            background-color: black;
            margin-left: auto;
            margin-right: auto;
            width: 70%;
            height: 70%;"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre></div></div>

<p>출력 :</p>
<div style="
    postion: relative;
    background-color: black;
    width: 200px;
    height: 200px;">
    <div style="
        postion: absolute;
        background-color: white;
        margin-left: auto;
        margin-right: auto;
        width: 70%;
        height: 70%;">
        <div style="
            postion: absolute;
            background-color: black;
            margin-left: auto;
            margin-right: auto;
            width: 70%;
            height: 70%;">
        </div>
    </div>
</div>

<h4 id="background-image--배경-이미지를-지정하는-속성"><code class="language-plaintext highlighter-rouge">background-image:</code> : 배경 이미지를 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>background-image: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>none</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>background-image: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>none</td>
                                    <td>배경 이미지 사용 안함</td>
                                </tr>
                                <tr>
                                    <td>url("")</td>
                                    <td>배경 이미지 URL 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="
    postion: relative;
    background-color: black;
    width: 200px;
    height: 200px;"&gt;
    &lt;div style="
        background-image: url("images/image.png");
    "&gt;
&lt;/div&gt;
</code></pre></div></div>

<h4 id="background-image--배경-이미지를-지정하는-속성-1"><code class="language-plaintext highlighter-rouge">background-image:</code> : 배경 이미지를 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>background-image: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>none</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>background-image: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>none</td>
                                    <td>배경 이미지 사용 안함</td>
                                </tr>
                                <tr>
                                    <td>url("")</td>
                                    <td>배경 이미지 URL 지정</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p>입력 :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div style="
    postion: relative;
    background-color: black;
    width: 200px;
    height: 200px;"&gt;
    &lt;div style="
        background-image: url("images/image.png");
    "&gt;
&lt;/div&gt;
</code></pre></div></div>

<h4 id="background-attachment--배경-이미지의-스크롤-여부를-지정하는-속성"><code class="language-plaintext highlighter-rouge">background-attachment:</code> : 배경 이미지의 스크롤 여부를 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>background-attachment: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>scroll</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>background-attachment: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>scroll</td>
                                    <td>내용을 스크롤하면 배경 이미지는 스크롤되지 않음</td>
                                </tr>
                                <tr>
                                    <td>fixed</td>
                                    <td>배경 이미지가 움직이지 않음</td>
                                </tr>
                                <tr>
                                    <td>local</td>
                                    <td>내용을 스크롤하면 배경 이미지는 스크롤</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h4 id="background-position--배경-이미지의-위치를-지정하는-속성"><code class="language-plaintext highlighter-rouge">background-position:</code> : 배경 이미지의 위치를 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>background-position: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>0% 0%</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>background-position: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>x y</td>
                                    <td>가로와 세로 위치 지정<br />(left-right, center, top-bottom, %, length)</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h4 id="background-size--배경-이미지의-크기를-지정하는-속성"><code class="language-plaintext highlighter-rouge">background-size:</code> : 배경 이미지의 크기를 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>background-size: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>auto</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>Y</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>background-size: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>auto</td>
                                    <td>이미지 크기 유지</td>
                                </tr>
                                <tr>
                                    <td>length</td>
                                    <td>배경 이미지의 가로와 세로 크기나 백분율을 직접 지정</td>
                                </tr>
                                <tr>
                                    <td>cover</td>
                                    <td>가로/세로 비율을 유지하면서, 배경을 다 채울 수 있도록 이미지 조절</td>
                                </tr>
                                <tr>
                                    <td>contain</td>
                                    <td>가로/세로 비율을 유지하면서, 배경을 벗어나지 않도록 이미지 조절</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h4 id="overflow--컨텐츠가-요소의-크기를-벗어날-때의-처리-방법을-지정하는-속성"><code class="language-plaintext highlighter-rouge">overflow:</code> : 컨텐츠가 요소의 크기를 벗어날 때의 처리 방법을 지정하는 속성</h4>
<hr />

<div style="text-align: center;">
    <table>
        <thead>
            <tr>
                <td>overflow: 속성</td>
                <td>설명</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>기본값</td>
                <td>visible</td>
            </tr>
            <tr>
                <td>상속 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>애니메이션 여부</td>
                <td>N</td>
            </tr>
            <tr>
                <td>문법</td>
                <td>
                    <div style="font-size: 120%">
                        <table>
                            <thead>
                                <tr>
                                    <td>overflow: 값</td>
                                    <td>설명</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>visible</td>
                                    <td>박스를 넘어가도 내용을 표시</td>
                                </tr>
                                <tr>
                                    <td>hidden</td>
                                    <td>박스를 넘어간 부분은 표시하지 않음</td>
                                </tr>
                                <tr>
                                    <td>scroll</td>
                                    <td>무조건 스크롤바 표시</td>
                                </tr>
                                <tr>
                                    <td>auto</td>
                                    <td>박스를 넘어가면 스크롤바 표시</td>
                                </tr>
                                <tr>
                                    <td>initial</td>
                                    <td>현재의 속성값을 기본값으로 지정</td>
                                </tr>
                                <tr>
                                    <td>inherit</td>
                                    <td>부모 요소의 속성값 상속</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h4 id="z-index--형제-요소들이-중첩될-때-우선순위를-지정하는-속성-숫자가-크면-위로"><code class="language-plaintext highlighter-rouge">z-index</code> : 형제 요소들이 중첩될 때 우선순위를 지정하는 속성 (숫자가 크면 위로)</h4>

<h3 id="-레이아웃-layout"># 레이아웃 (layout)</h3>

<h4 id="고정형-레이아웃">고정형 레이아웃</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">margin:</code> : 선택한 요소를 가운데에 정렬</li>
  <li><code class="language-plaintext highlighter-rouge">float:</code>, <code class="language-plaintext highlighter-rouge">clear:</code> : 다단 레이아웃 생성</li>
</ul>

<h4 id="반응형-레이아웃">반응형 레이아웃</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">@media</code> : 일정 조건일 때 특정한 작업 수행</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@media ( max-width: 1280px ) {
  body { color: blue; }
}
</code></pre></div></div>

<ul>
  <li>모바일 우선 (<code class="language-plaintext highlighter-rouge">Mobile First</code>) : 작은 가로폭부터 큰 가로폭 순서로</li>
</ul>

<blockquote>
  <p>기본 모양이 A, 768px 이상일 때는 B, 1024px 이상일 때는 C</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A
@media ( min-width: 768px ) {
  B
}
@media ( min-width: 1024px ) {
  C
}
</code></pre></div>  </div>
</blockquote>

<ul>
  <li>데스크톱 우선 (<code class="language-plaintext highlighter-rouge">Desktop First</code>) : 큰 가로폭부터 작은 가로폭 순서로</li>
</ul>

<blockquote>
  <p>기본 모양이 A, 1023px 이하일 때는 B, 767px 이하일 때는 C</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A
@media ( max-width: 1023px ) {
  B
}
@media ( max-width: 767px ) {
  C
}
</code></pre></div>  </div>
</blockquote>

<h3 id="-애니메이션-animation-관련-속성"># 애니메이션 (animation) 관련 속성</h3>
<hr />

<h4 id="animation--요소에-애니메이션의-여러-속성값을-지정해-애니메이션-효과를-넣는-속성"><code class="language-plaintext highlighter-rouge">animation:</code> : 요소에 애니메이션의 여러 속성값을 지정해 애니메이션 효과를 넣는 속성</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation: 
  (@keyframes) 
  (animation-name)
  (animation-duration)
  (animation-timing-function)
  (animation-delay)
  (animation-iteration-count)
  (animation-direction)
  (animation-fill-mode)
  (animation-play-state);
</code></pre></div></div>

<h5 id="keyframes-이름---애니메이션에-이름을-붙이고-어떤-모양에서-어떤-모양으로-바꿀지-지정함"><code class="language-plaintext highlighter-rouge">@keyframes [이름] {...}</code> : 애니메이션에 이름을 붙이고, 어떤 모양에서 어떤 모양으로 바꿀지 지정함</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">0% {}</code> : 시작할 때 요소의 모양 지정</li>
  <li><code class="language-plaintext highlighter-rouge">n% {}</code> : n%일 때 요소의 모양 지정</li>
  <li><code class="language-plaintext highlighter-rouge">100% {}</code> : 끝날 때 요소의 모양 지정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@keyframes name {
  0% { ... }
  n% { ... }
  100% { ... }
}
</code></pre></div></div>

<h5 id="animation-name--어떤-이름의-keyframes를-사용할지-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-name:</code> : 어떤 이름의 <code class="language-plaintext highlighter-rouge">@keyframes</code>를 사용할지 지정하는 속성</h5>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-name: (이름);
</code></pre></div></div>

<h5 id="animation-duration--애니메이션의-총-시간을-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-duration:</code> : 애니메이션의 총 시간을 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">time</code>: 애니메이션이 진행될 시간 지정 (단위: <code class="language-plaintext highlighter-rouge">s</code> 또는 <code class="language-plaintext highlighter-rouge">ms</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-duration: 3s;
</code></pre></div></div>

<h5 id="animation-timing-function--애니메이션의-진행-속도를-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-timing-function:</code> : 애니메이션의 진행 속도를 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">cubic-bezier(n,n,n,n)</code> 함수 : 애니메이션을 3차원 베지에 곡선에 맞게 표현
    <ul>
      <li><code class="language-plaintext highlighter-rouge">linear</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0,0,1,1)</code> 애니메이션 효과가 처음부터 끝까지 일정한 속도로 진행</li>
      <li><code class="language-plaintext highlighter-rouge">ease</code> : 기본값. <code class="language-plaintext highlighter-rouge">cubic-bezier(0.25,0.1,0.25,1)</code> 애니메이션 효과가 천천히 시작되어 빨라졌다가 다시 느려짐</li>
      <li><code class="language-plaintext highlighter-rouge">ease-in</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0.42,0,1,1)</code> 애니메이션 효과가 천천히 시작됨</li>
      <li><code class="language-plaintext highlighter-rouge">ease-out</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0,0,0.58,1)</code> 애니메이션 효과가 천천히 끝남</li>
      <li><code class="language-plaintext highlighter-rouge">ease-in-out</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0.42,0,0.58,1)</code> 애니메이션 효과가 천천히 시작되어 천천히 끝남</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">steps(1,...)</code> 함수 : 애니메이션을 스텝에 맞게 끝어서 표현
    <ul>
      <li><code class="language-plaintext highlighter-rouge">step-start</code> : <code class="language-plaintext highlighter-rouge">steps(1,start)</code> 시작하는 지점에 스텝</li>
      <li><code class="language-plaintext highlighter-rouge">step-end</code> : <code class="language-plaintext highlighter-rouge">steps(1,end)</code> 끝나는 지점에 스텝</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-timing-function: linear;
</code></pre></div></div>

<h5 id="animation-delay--애니메이션이-시작하기-전에-대기하는-시간을-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-delay:</code> : 애니메이션이 시작하기 전에 대기하는 시간을 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">time</code>: 애니메이션이 진행될 시간 지정 (단위: <code class="language-plaintext highlighter-rouge">s</code> 또는 <code class="language-plaintext highlighter-rouge">ms</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-delay: 1s;
</code></pre></div></div>

<h5 id="animation-iteration-count--애니메이션이-반복하는-횟수를-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-iteration-count:</code> : 애니메이션이 반복하는 횟수를 지정하는 속성</h5>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-iteration-count: 1;
</code></pre></div></div>

<h5 id="animation-direction--애니메이션이-진행하는-방향을-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-direction:</code> : 애니메이션이 진행하는 방향을 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">normal</code> : 기본값. 정해진 순서로 진행</li>
  <li><code class="language-plaintext highlighter-rouge">reverse</code> : 반대 순서로 진행</li>
  <li><code class="language-plaintext highlighter-rouge">alternate</code> : 정해진 순서로 진행했다가 반대 순서로 진행</li>
  <li><code class="language-plaintext highlighter-rouge">alternate-reverse</code> : 반대 순서로 진행햇다가 정해진 순서로 진행</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-direction: normal;
</code></pre></div></div>

<h5 id="animation-fill-mode--애니메이션을-종료한-후-어떤-상태로-만들지-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-fill-mode:</code> : 애니메이션을 종료한 후 어떤 상태로 만들지 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">none</code>, <code class="language-plaintext highlighter-rouge">forwards</code>, <code class="language-plaintext highlighter-rouge">backwards</code>, <code class="language-plaintext highlighter-rouge">both</code>, <code class="language-plaintext highlighter-rouge">initial</code>, <code class="language-plaintext highlighter-rouge">inherit</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-fill-mode: forwards;
</code></pre></div></div>

<h5 id="animation-play-state--애니메이션의-진행-여부를-지정하는-속성"><code class="language-plaintext highlighter-rouge">animation-play-state:</code> : 애니메이션의 진행 여부를 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">running</code> : 애니메이션을 진행함</li>
  <li><code class="language-plaintext highlighter-rouge">paused</code> : 애니메이션을 진행하지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>animation-play-state: running;
</code></pre></div></div>

<h4 id="transform--요소의-형태를-변화시키는-속성"><code class="language-plaintext highlighter-rouge">transform:</code> : 요소의 형태를 변화시키는 속성</h4>
<hr />

<h5 id="transform-rotate--요소를-회전시키는-속성"><code class="language-plaintext highlighter-rouge">transform: rotate()</code> : 요소를 회전시키는 속성</h5>
<hr />

<ul>
  <li>angle에는 각의 크기를 입력 (단위: <code class="language-plaintext highlighter-rouge">deg</code>, <code class="language-plaintext highlighter-rouge">turn</code>)</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transform: rotate( angle )
transform: rotateX( angle ) // 가로를 축으로 회전
transform: rotateY( angle ) // 세로를 축으로 회전
</code></pre></div></div>

<h5 id="transform-translate--요소를-이동시키는-속성"><code class="language-plaintext highlighter-rouge">transform: translate()</code> : 요소를 이동시키는 속성</h5>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transform: translate( Xpx, Ypx )
transform: translateX( px ) // 가로축을 기준으로 이동
transform: translateY( px ) // 세로축을 기준으로 이동
</code></pre></div></div>

<h5 id="transform-scale--요소의-크기를-변화시키는-속성"><code class="language-plaintext highlighter-rouge">transform: scale()</code> : 요소의 크기를 변화시키는 속성</h5>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transform: scale( X ) // 가로와 세로를 모두 X배만큼 확대
transform: scale( X, Y ) // 가로로 X배만큼 확대, 세로로 Y배만큼 확대
transform: scaleX( X ) // 가로로 X배만큼 확대
transform: scaleY( Y ) // 세로로 Y배만큼 확대
</code></pre></div></div>

<h5 id="transform-skew--요소를-비트는-속성"><code class="language-plaintext highlighter-rouge">transform: skew()</code> : 요소를 비트는 속성</h5>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transform: skewX( 15deg ) // 가로 뱡향으로 15도만큼 비틈
transform: skewY( 30deg ) // 세로 뱡향으로 30도만큼 비틈
transform: skewX( 45deg, 60deg ) // 가로 뱡향으로 45도만큼, 세로 방향으로 60도만큼 비틈
</code></pre></div></div>

<h4 id="transition--요소에-트랜지션의-여러-속성값을-지정해-트랜지션-효과를-넣는-속성"><code class="language-plaintext highlighter-rouge">transition:</code> : 요소에 트랜지션의 여러 속성값을 지정해 트랜지션 효과를 넣는 속성</h4>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transition: 
  (transition-property) 
  (transition-timing-function)
  (transition-duration)
  (transition-delay);
</code></pre></div></div>

<h5 id="transition-property--트랜지션의-진행-속도를-지정하는-속성"><code class="language-plaintext highlighter-rouge">transition-property:</code> : 트랜지션의 진행 속도를 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">none</code> : 모든 속성에 적용하지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">all</code> : 모든 속성에 적용</li>
  <li><code class="language-plaintext highlighter-rouge">property</code> : 속성을 지정</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<h5 id="transition-timing-function--트랜지션의-진행-속도를-지정하는-속성"><code class="language-plaintext highlighter-rouge">transition-timing-function:</code> : 트랜지션의 진행 속도를 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">cubic-bezier(n,n,n,n)</code> 함수 : 트랜지션을 3차원 베지에 곡선에 맞게 표현
    <ul>
      <li><code class="language-plaintext highlighter-rouge">linear</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0,0,1,1)</code> 트랜지션 효과가 처음부터 끝까지 일정한 속도로 진행</li>
      <li><code class="language-plaintext highlighter-rouge">ease</code> : 기본값. <code class="language-plaintext highlighter-rouge">cubic-bezier(0.25,0.1,0.25,1)</code> 트랜지션 효과가 천천히 시작되어 빨라졌다가 다시 느려짐</li>
      <li><code class="language-plaintext highlighter-rouge">ease-in</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0.42,0,1,1)</code> 트랜지션 효과가 천천히 시작됨</li>
      <li><code class="language-plaintext highlighter-rouge">ease-out</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0,0,0.58,1)</code> 트랜지션 효과가 천천히 끝남</li>
      <li><code class="language-plaintext highlighter-rouge">ease-in-out</code> : <code class="language-plaintext highlighter-rouge">cubic-bezier(0.42,0,0.58,1)</code> 트랜지션 효과가 천천히 시작되어 천천히 끝남</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">steps(1,...)</code> 함수 : 트랜지션을 스텝에 맞게 끝어서 표현
    <ul>
      <li><code class="language-plaintext highlighter-rouge">step-start</code> : <code class="language-plaintext highlighter-rouge">steps(1,start)</code> 시작하는 지점에 스텝</li>
      <li><code class="language-plaintext highlighter-rouge">step-end</code> : <code class="language-plaintext highlighter-rouge">steps(1,end)</code> 끝나는 지점에 스텝</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transition-timing-function: linear;
</code></pre></div></div>

<h5 id="transition-duration--트랜지션의-총-시간을-지정하는-속성"><code class="language-plaintext highlighter-rouge">transition-duration:</code> : 트랜지션의 총 시간을 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">time</code>: 트랜지션이 진행될 시간 지정 (단위: <code class="language-plaintext highlighter-rouge">s</code> 또는 <code class="language-plaintext highlighter-rouge">ms</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transition-duration: 3s;
</code></pre></div></div>

<h5 id="transition-delay--트랜지션이-시작하기-전에-대기하는-시간을-지정하는-속성"><code class="language-plaintext highlighter-rouge">transition-delay:</code> : 트랜지션이 시작하기 전에 대기하는 시간을 지정하는 속성</h5>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">time</code>: 트랜지션이 진행될 시간 지정 (단위: <code class="language-plaintext highlighter-rouge">s</code> 또는 <code class="language-plaintext highlighter-rouge">ms</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">initial</code> : 현재의 속성값을 기본값으로 지정</li>
  <li><code class="language-plaintext highlighter-rouge">inherit</code> : 부모 요소의 속성값 상속</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>transition-delay: 1s;
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Frontend" /><category term="HTML" /><category term="CSS" /><summary type="html"><![CDATA[이 항목은 현재 작성중입니다.&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Git] Minimal Mistakes으로 Github Blog 만들기</title><link href="http://localhost:4000/git/git1/" rel="alternate" type="text/html" title="[Git] Minimal Mistakes으로 Github Blog 만들기" /><published>2022-09-26T00:00:00+09:00</published><updated>2022-10-11T00:00:00+09:00</updated><id>http://localhost:4000/git/git1</id><content type="html" xml:base="http://localhost:4000/git/git1/"><![CDATA[<p class="notice--info"><strong>이 항목은 macOS 기반으로 작성되었습니다.</strong><br />&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="기본-환경-설정">기본 환경 설정</h2>

<h3 id="ruby-설치">Ruby 설치</h3>
<ul>
  <li>macOS에서는 Ruby가 기본적으로 설치되어 있음</li>
  <li>터미널 실행 후 다음 명령어를 입력해 설치 여부 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ruby -v
// ruby X.X.X 출력 : 정상 설치
// "zsh: command not found: ruby" 출력 : 설치 오류
</code></pre></div></div>

<h3 id="jekyll-설치">Jekyll 설치</h3>
<ul>
  <li>터미널 창에 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem install jekyll
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 Jekyll가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll -v
// jekyll X.X.X 출력 : 정상 설치
// "zsh: command not found: jekyll" 출력 : 설치 오류
</code></pre></div></div>

<h3 id="minimal-mistakes-themes-설치"><code class="language-plaintext highlighter-rouge">Minimal Mistakes Themes</code> 설치</h3>
<ul>
  <li>
    <p><a href="https://github.com/mmistakes/minimal-mistakes">minimal-mistakes Github 페이지</a>에서 .zip 파일 다운로드 후 압축 해제</p>
  </li>
  <li>아래 사진에 있는, 필요한 파일 및 폴더만 남기고 나머지는 삭제</li>
  <li>기존에는 존재하지 않는 <code class="language-plaintext highlighter-rouge">_post</code>와 <code class="language-plaintext highlighter-rouge">_page</code> 디렉토리는 생성</li>
</ul>

<p><img src="https://i.postimg.cc/855KdXRn/blog1-1.png" width="240" /></p>

<h3 id="github-repository-생성">Github Repository 생성</h3>
<ul>
  <li>Github에 <code class="language-plaintext highlighter-rouge">(Github ID).github.io</code>의 형식으로 Repository 생성</li>
</ul>

<p><img src="https://i.postimg.cc/FRFS4GcW/blog1-2.png" width="360" /></p>

<ul>
  <li>지금까지 정리한 minimal-mistakes 폴더를 github에 push</li>
  <li>
    <p>블로그 주소 : <code class="language-plaintext highlighter-rouge">https://(Github ID).github.io</code></p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">https://github.com/(Github ID)/(Github ID).github.io/actions</code>을 통해 블로그 빌드 기록 확인 가능</li>
</ul>

<h3 id="로컬-서버-설정-및-실행">로컬 서버 설정 및 실행</h3>
<ul>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">.jekyll-cache</code> 폴더와 <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> 파일 생성</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem install bundler
bundle exec jekyll serve
</code></pre></div></div>

<ul>
  <li>
    <p><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a>으로 로컬 서버 접속</p>
  </li>
  <li>
    <p><a href=" http://localhost:4000/admin/"> http://localhost:4000/admin/</a>를 통해 ADMIN 페이지 접속</p>
  </li>
</ul>

<h2 id="블로그-기본-설정">블로그 기본 설정</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>minimal_mistakes_skin    :         # 블로그의 전체적인 스킨 지정 
                                   # (Minimal Mistakes에서 기본적으로 제공)
                                   # "default" "air", "aqua", "contrast", "dark"
                                   # "dirt", "neon", "mint", "plum", "sunrise"

locale                   : "ko-KR" # 블로그에 쓰일 로컬 언어 지정
title                    :         # 메타 태그에 들어갈 블로그의 제목 지정
title_separator          : "-"          
subtitle                 :         # 블로그의 제목 하단에 위치할 부제목 지정
name                     :         # 블로그 저자 이름 지정
description              :         # SEO 향상을 위한 meta description 태그 지정
url                      :         # 블로그 url 
                                   # "https://(github ID).github.io"
baseurl                  :         # 서브 폴더를 위한 url 지정
repository               :         # github repository url
                                   # "https://github.com/(github ID)/(github ID).github.io"
teaser                   :         # 관련 포스트나 검색 등에 들어갈 미리보기 이미지 지정
                                   # ("assets/images/"로 연결)
logo                     :         # 블로그의 제목 옆에 들어갈 로고 이미지 지정
                                   # ("assets/images"로 연결)
masthead_title           :         # 블로그 프로필 상단에 위치할 사이트 제목 지정
breadcrumbs              : true    # 브래드크럼 사용 여부 지정
words_per_minute         : 200     # 포스트를 읽는 데 걸리는 시간을 계산히기 위한 분당 읽는 글자의 지정

</code></pre></div></div>

<h3 id="블로그-댓글-기능-설정-disqus">블로그 댓글 기능 설정 (disqus)</h3>
<ul>
  <li><a href="https://disqus.com">https://disqus.com</a>에 접속해 회원가입</li>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>comments:
  provider               : "disqus"
  disqus:
    shortname            :         # disqus ID 지정
</code></pre></div></div>

<h3 id="블로그-검색-기능-설정">블로그 검색 기능 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>search                   : # 블로그 검색 여부 지정
search_full_content      : # 블로그의 내용 검색 여부 지정
</code></pre></div></div>

<h3 id="google-검색-노출-살정">Google 검색 노출 살정</h3>
<ul>
  <li><a href="https://search.google.com/search-console/about">Google Search Console</a>에서 도메인 입력</li>
  <li>소유권 확인을 위해 다운로드받은 <code class="language-plaintext highlighter-rouge">HTML</code>파일을 <code class="language-plaintext highlighter-rouge">root</code>에 위치</li>
  <li>크롤링을 위해 <code class="language-plaintext highlighter-rouge">sitemap.yml</code>파일를 생성해 <code class="language-plaintext highlighter-rouge">root</code>에 위치 (<a href="https://github.com/pocj8ur4in/pocj8ur4in.github.io/blob/main/sitemap.yml">github link</a>)</li>
  <li>크롤링을 위해 <code class="language-plaintext highlighter-rouge">robots.txt</code>파일를 생성해 <code class="language-plaintext highlighter-rouge">root</code>에 위치</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 허용
User-agent: *
Allow: /

# 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 차단
User-agent: *
Disallow: /

# 구글 검색 로봇만 차단하고, 다른 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 허용
User-agent: Googlebot
Disallow: /

# 네이버 검색로봇만 차단하고, 다른 모든 웹 사이트 컨텐츠에 대한 모든 웹 크롤러의 접근 허용
User-agent: Yeti
Disallow: /

Sitemap: https://pocj8ur4in.github.io/sitemap.xml
</code></pre></div></div>

<h3 id="블로그-포스트-불러오기-설정">블로그 포스트 불러오기 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults:
  # _posts
  - scope:
      path: ""
      type: posts
    values:
      layout: single
      author_profile: true
      read_time: false
      comments: true
      share: false
      related: false
</code></pre></div></div>

<h2 id="블로그-레이아웃-설정">블로그 레이아웃 설정</h2>

<h3 id="블로그-좌측-사이드바에-위치할-프로필-설정">블로그 좌측 사이드바에 위치할 프로필 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>author:
  name             :       # 저자 이름 지정
  avatar           :       # 저자 이미지 지정
  bio              :       # 저자 바이오그래피 지정
  location         :       # 저자 위치 지정
  email            :       # 저자 이메일 지정
  links:                   # 저자 관련 사이트 링크 지정
    - label:               # 사이트 분류 지정
      icon:                # 사이트 아이콘 지정
      url:                 # 사이트 url 지정
</code></pre></div></div>

<h3 id="블로그-하단에-위치할-꼬리말-설정">블로그 하단에 위치할 꼬리말 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>footer:
  links:                   # 블로그 관련 사이트 링크 지정
    - label:               # 사이트 분류 지정
      icon:                # 사이트 아이콘 지정
      url:                 # 사이트 url 지정
</code></pre></div></div>

<h3 id="블로그-상단에-위치할-네비게이션-바-설정">블로그 상단에 위치할 네비게이션 바 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults:
  # _pages
  - scope:
      path: ""
      type: pages
    values:
      layout: single
      author_profile: true
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">_data/navigation.yml</code> 파일 수정해 원하는 네비게이션 바 설정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>main:
  - title: (카테고리)        # 화면에 보여질 세부 항목의 이름 지정
    url: /(카테고리)/        # _pages 내에 정해진 양식 파일이나 특정 링크로 연결
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">_pages</code>에 필요한 양식 (<code class="language-plaintext highlighter-rouge">.md</code>) 파일 생성</li>
</ul>

<p>예시) <code class="language-plaintext highlighter-rouge">tag-archive.md</code></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
title: "tags"
permalink: /tags/
layout: tags
author_profile: true
---
</code></pre></div></div>

<h3 id="블로그-너비-설정">블로그 너비 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_sass/minimal_mistakes/_variables.scss</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/*
   Grid
   ========================================================================== */

$right-sidebar-width-narrow: 100px !default;    // default 200px
$right-sidebar-width: 200px !default;           // default 300px
$right-sidebar-width-wide: 250px !default;      // default 400px
</code></pre></div></div>

<h3 id="블로그-폰트-크기-설정">블로그 폰트 크기 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_sass/minimal_mistakes/_reset.scss</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>html {
  /* apply a natural box layout model to all elements */
  box-sizing: border-box;
  background-color: $background-color;
  font-size: 16px;                    // Default 16px;

  @include breakpoint($medium) {
    font-size: 16px;                  // Default 18px;
  }

  @include breakpoint($large) {
    font-size: 16px;                  // Default 20px;
  }

  @include breakpoint($x-large) {
    font-size: 16px;                  // Default 22px;
  }

  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
</code></pre></div></div>

<h3 id="블로그-아이콘-설정">블로그 아이콘 설정</h3>
<ul>
  <li><a href="https://realfavicongenerator.net/">https://realfavicongenerator.net/</a>에 원하는 사진을 넣기</li>
  <li><code class="language-plaintext highlighter-rouge">_includes/_head/custom.html</code> 파일에 사이트에서 출력된 코드 삽입</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- start custom head snippets --&gt;

&lt;!-- insert favicons. use https://realfavicongenerator.net/ --&gt;
&lt;link rel="apple-touch-icon" sizes="180x180" href="/assets/logo.ico/apple-touch-icon.png"&gt;
&lt;link rel="icon" type="image/png" sizes="32x32" href="/assets/logo.ico/favicon-32x32.png"&gt;
&lt;link rel="icon" type="image/png" sizes="16x16" href="/assets/logo.ico/favicon-16x16.png"&gt;
&lt;link rel="mask-icon" href="/assets/logo.ico/safari-pinned-tab.svg" color="#ffffff"&gt;
&lt;meta name="msapplication-TileColor" content="#ffffff"&gt;
&lt;meta name="theme-color" content="#ffffff"&gt;
</code></pre></div></div>

<h2 id="블로그-포스트-작성">블로그 포스트 작성</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">_posts</code> 폴더에 <code class="language-plaintext highlighter-rouge">md</code> 파일 생성</li>
</ul>

<h3 id="포스트-이름-양식">포스트 이름 양식</h3>
<ul>
  <li>XXXX(연도)-XX(월)-XX(일)-(포스트 이름) 순으로 작성</li>
</ul>

<h3 id="포스트-내부-양식">포스트 내부 양식</h3>
<ul>
  <li>파일 상단에 <code class="language-plaintext highlighter-rouge">---</code>에 둘러싸인 내용 작성</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
title: "[Blog] macOS에서 Minimal Mistakes로 깃허브 블로그 만들기"

categories:
    - Github.io

tag:
    [HTML, JavaScript, SCSS, Ruby]

toc: true
toc_sticky: true

date: 2022-09-26
lastmod: 2022-09-26
---
</code></pre></div></div>

<table>
    <thead>
        <tr>
            <th>양식 이름</th>
            <td>양식 설명</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>title</th>
            <td>포스트 제목</td>
        </tr>
        <tr>
            <th>categories</th>
            <td>포스트 카테고리</td>
        </tr>
        <tr>
            <th>tags</th>
            <td>포스트 태그</td>
        </tr>
        <tr>
            <th>toc</th>
            <td>우측 상단의 목차</td>
        </tr>
        <tr>
            <th>toc_label</th>
            <td>목차 이름</td>
        </tr>
        <tr>
            <th>toc_icon</th>
            <td>목차 아이콘</td>
        </tr>
        <tr>
            <th>toc_sticky</th>
            <td>목차 고정 여부</td>
        </tr>
        <tr>
            <th>date</th>
            <td>포스트 작성일</td>
        </tr>
        <tr>
            <th>lastmod</th>
            <td>포스트 수정일</td>
        </tr>
        <tr>
            <th>author_profile</th>
            <td>프로필 창 표시 여부</td>
        </tr>
    </tbody>
</table>

<h3 id="포스트-내용">포스트 내용</h3>
<ul>
  <li>html 태그의 사용 방법은 <a href="_posts/2022-09-20-html1.md">해당 게시글</a>을 참고</li>
</ul>

<h3 id="포스트에-소스-코드-넣기">포스트에 소스 코드 넣기</h3>
<ul>
  <li><a href="https://gist.github.com">Github Gist</a>에서 작성 후 Embed 코드를 복사해 원하는 위치에 붙어넣기</li>
</ul>

<h3 id="포스트-내에-문자-박스-양식-넣기">포스트 내에 문자 박스 양식 넣기</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">minimal-mistakes theme</code> 내에 내장된 상자 양식을 활용</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p class="notice--primary"&gt;
  &lt;strong&gt;
    이 항목은 현재 작성중입니다.
  &lt;/strong&gt;&lt;br&gt;
    &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.
&lt;/p&gt;

&lt;p class="notice--info"&gt;
  &lt;strong&gt;
    이 항목은 macOS 기반으로 작성되었습니다.
  &lt;/strong&gt;&lt;br&gt;
    &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.
&lt;/p&gt;

&lt;p class="notice--danger"&gt;
  &lt;strong&gt;
    이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.
  &lt;/strong&gt;&lt;br&gt;
    &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.
&lt;/p&gt;

&lt;p class="notice--warning"&gt;
  &lt;strong&gt;
    이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.
  &lt;/strong&gt;&lt;br&gt;
    &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.
&lt;/p&gt;
</code></pre></div></div>

<div style="background-color: black; padding: 2% 2% 2% 2%">
  <p class="notice--primary">
    <strong>
      이 항목은 현재 작성중입니다.
    </strong><br />
      &gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.
  </p>

  <p class="notice--info">
    <strong>
      이 항목은 macOS 기반으로 작성되었습니다.
    </strong><br />
      &gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.
  </p>

  <p class="notice--danger">
    <strong>
      이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.
    </strong><br />
      &gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.
  </p>

  <p class="notice--warning">
    <strong>
      이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.
    </strong><br />
      &gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.
  </p>
</div>

<h2 id="블로그-추가-설정">블로그 추가 설정</h2>

<h3 id="js-빌드-설정">js 빌드 설정</h3>
<ul>
  <li><a href="https://pocj8ur4in.github.io/mac/homebrew1/">해당 게시글</a>을 통해 <code class="language-plaintext highlighter-rouge">homebrew</code> 설치</li>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">node.js</code> 설치</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install node
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">node.js</code>가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node -v
// "node X.X.X" 출력 : 정상 설치
// "zsh: command not found: node" 출력 : 설치 오류
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">yarn</code> 설치</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install yarn
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">yarn</code>가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn --version
// "X.X.X" 출력 : 정상 설치
// "zsh: command not found: yarn" 출력 : 설치 오류
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">package.json</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  "devDependencies": {
    "concat": "^1.0.3"
    }
  scripts": {
    "concat-js": "...assets/js/custom/custom.js",
    "uglify": "...assets/js/custom/custom.js -c -m -o assets/js/main.min.js"     
    }
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">npm</code> 설치</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력해 <code class="language-plaintext highlighter-rouge">npm</code>가 정상적으로 설치되었는지 확인</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm -v
// "X.X.X" 출력 : 정상 설치
// "zsh: command not found: npm" 출력 : 설치 오류
</code></pre></div></div>

<h3 id="admin-설정">ADMIN 설정</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Gemfile</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem 'jekyll-admin', group: :jekyll_plugins
</code></pre></div></div>

<ul>
  <li>터미널 창에 다음 명령어를 입력</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle install
jekyll serve
</code></pre></div></div>

<h3 id="블로그-방문자-통계-설정">블로그 방문자 통계 설정</h3>
<ul>
  <li><a href="https://analytics.google.com/analytics/web/provision/#/provision">Google Analytics</a>를 가입한 후 애널리틱스 데이터 스트림 설정</li>
  <li>측정 ID 복사 후 <code class="language-plaintext highlighter-rouge">_config.yml</code> 파일 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Analytics
analytics:
  provider               : "google-gtag"
  google:
    tracking_id          : "(측정 ID)"
</code></pre></div></div>

<h3 id="블로그-애드센스-광고-설정">블로그 애드센스 광고 설정</h3>
<ul>
  <li><a href="https://www.google.co.kr/adsense/start/">Google AdSense</a> 가입 후 사이트 추가</li>
  <li><code class="language-plaintext highlighter-rouge">_includes/head/custom.html</code> 파일에 코드 붙어넣기</li>
  <li><code class="language-plaintext highlighter-rouge">_includes/footer/custom.html</code> 파일에 광고 삽입</li>
</ul>

<h2 id="minimal-mistakes-themes-디렉토리-구조">Minimal Mistakes Themes 디렉토리 구조</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>minimal-mistakes
├── _data                                 # 테마를 커스터마이징하기 위한 파일을 저장하는 디렉터리 
| |                                       # (yml, yaml, json, csv, tsv 파일을 자동으로 읽어들어 site.data로 사용)
| ├── navigation.yml                      # 상단 메뉴바를 커스터마이징하기 위한 파일
| └── ui-text.yml                         # 언어별로 어떤 텍스트로 표시되는지 나열하는 파일
|
├── _site                                 # 재사용되는 html 파일을 저장하는 디렉터리 (공통된 컴포넌트들 보관)
| ├── search                              # 검색 엔진을 커스터마이징한 내용을 저장하는 디렉터리
| ├── analytics-providers
| └── custom.html                         # 분석 플랫폼 공급자를 커스터마이징한 내용을 저장하는 파일
| ├── comments-providers
| └── custom.html                         # 댓글 플랫폼 공급자를 커스터마이징한 내용을 저장하는 파일
| ├── head
| └── custom.html                         # head를 커스터마이징한 내용을 저장하는 파일
| ├── footer
| └── custom.html                         # footer를 커스마이징한 내용을 저장하는 파일
| ├── nav_list                            # 메뉴 상단바의 리스트에 대한 helper 파일
| ├── archive-single.html                 # 아카이브 문서에서 단일 문서를 표현하는 방법을 저장하는 파일
| ├── author-profiles.html                # author profile link애 대한 내용을 저장하는 파일
| ├── author-profile-custom-links.html    # author profile link를 커스마이징한 내용을 저장하는 파일
| ├── breadcrumbs.html                    # breadcrumbs에 대한 내용을 저장하는 파일
| ├── single-page
| ├── page__taxonomy.html                 # 단일 문서에서 태그와 카테고리를 표현하는 방법을 저장하는 파일
| ├── tag-list.html                       # 단일 문서에서 태그 리스트를 표현하는 방법을 저장하는 파일
| └── category-list.html                  # 단일 문서에서 카테고리 리스트를 표현하는 방법을 저장하는 파일
├── _posts                                # 블로그에 포스트한 md 파일을 저장하는 디렉터리
├── _includes
├── _layouts                              # 각 문서의 디자인과 직접적으로 연결된 전체적인 레이아웃 디렉토리
├── _sass                                 # minimal-mistakes.scss에 임포트할 수 있는 scss 파일을 저장하는 스타일시트 디렉터리
├── assets                                # css, js, 이미지 파일을 저장하는 디렉터리
| ├── _css
| ├── _images
| └── _js 
├── _config.yml                           # 블로그를 구성하기 위한 기본적인 설정값을 설정하는 yml 파일
├── Gemfile                               # 사용할 gem 플러그인 목록
├── index.html                            # 블로그 처음 홈 페이지
└── package.json
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Git" /><category term="HTML" /><category term="JavaScript" /><summary type="html"><![CDATA[이 항목은 macOS 기반으로 작성되었습니다.&gt; 프로그램, 단축키 설정 등이 다른 OS 환경과는 호환이 안되는 경우가 많으니 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 1. 알고리즘 (Algorithm)과 복잡도 (Complexity)</title><link href="http://localhost:4000/algorithm/algorithm1/" rel="alternate" type="text/html" title="[Algorithm] 1. 알고리즘 (Algorithm)과 복잡도 (Complexity)" /><published>2022-09-24T00:00:00+09:00</published><updated>2022-09-24T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/algorithm1</id><content type="html" xml:base="http://localhost:4000/algorithm/algorithm1/"><![CDATA[<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="알고리즘-algorithm--어떠한-문제를-해결하기-위한-절차나-방법">알고리즘 (Algorithm) : 어떠한 문제를 해결하기 위한 절차나 방법</h2>
<ul>
  <li>입력 : 외부에서 제공된 자료가 존재하거나 존재하지 않아야 함</li>
  <li>출력 : 최소 1개 이상의 결과를 가져야 함</li>
</ul>

<h2 id="알고리즘의-복잡도-complexity--알고리즘의-성능을-나타내는-척도">알고리즘의 복잡도 (Complexity) : 알고리즘의 성능을 나타내는 척도</h2>

<h3 id="공간-복잡도-space-complexity--문제를-해결할-때-걸리는-공간과-입력의-함수-관계">공간 복잡도 (Space Complexity) : 문제를 해결할 때 걸리는 공간과 입력의 함수 관계</h3>
<ul>
  <li>특정한 크기의 입력에 대해 알고리즘이 얼마나 많은 메모리를 차지하는가?</li>
  <li>알고리즘을 위해 필요한 메모리의 양</li>
</ul>

<h3 id="시간-복잡도-time-complexity--문제를-해결할-때-걸리는-시간과-입력의-함수-관계">시간 복잡도 (Time Complexity) : 문제를 해결할 때 걸리는 시간과 입력의 함수 관계</h3>
<ul>
  <li>특정한 크기의 입력에 대해 알고리즘이 얼마나 오래 걸리는가?</li>
  <li>알고리즘을 위해 필요한 연산의 횟수</li>
  <li>만약 프로그램을 비효율적으로 작성하여 시간 제한 (Time Limit)를 넘기면, 시간 초과 (Time Limit Exceeded)로 오답 처리</li>
</ul>

<h4 id="빅-오-표기법-big-o--최악의-경우만을-고려해-시간-복잡도를-계산">빅 오 표기법 (Big-O) : 최악의 경우만을 고려해 시간 복잡도를 계산</h4>
<ul>
  <li>이를 위해 가장 빠르게 증가할, 즉 가장 높은 차수의 항만을 고려하고 계수와 나머지 차수의 항들은 계산에서 제외</li>
  <li>만약 크기 N의 모든 입력에 대한 알고리즘에 필요한 시간이 최대 N의 식을 가진다면, 이 알고리즘의 점근적 시간 복잡도는 O(N)</li>
</ul>

<h5 id="공통-시간-복잡도-표-common-time-complexity-table">공통 시간 복잡도 표 (Common Time Complexity Table)</h5>
<table style="margin-left: 2%; margin-top: 2%;">
	<thead>
		<tr>
			<th>빅 오 표기법</th>
			<th>설명</th>
		</tr>
	</thead>
   	<tbody>
        <tr>
            <th>O(1)</th>
            <td>상수 시간</td>
        </tr>
        <tr>
            <th>O(logN)</th>
            <td>로그 시간</td>
        </tr>
        <tr>
            <th>O(N)</th>
            <td>선형 시간</td>
        </tr>
        <tr>
            <th>O(N * logN)</th>
            <td>로그 선형 시간</td>
        </tr>
        <tr>
            <th>O(N^2)</th>
            <td>2차 시간</td>
        </tr>
        <tr>
            <th>O(N^3)</th>
            <td>3차 시간</td>
        </tr>
        <tr>
            <th>O(N^4)</th>
            <td>4차 시간</td>
        </tr>
    </tbody>
</table>

<blockquote>
  <p>만약 시간 제한이 1초인 문제를 해결할 때, 시간 복잡도 …인 알고리즘을 설계해야 한다.</p>
  <ul>
    <li>N의 범위가 500인 경우 : O(N^3)</li>
    <li>N의 범위가 2,000인 경우 : O(N^2)</li>
    <li>N의 범위가 100,000인 경우 : O(N * logN)</li>
    <li>N의 범위가 10,000,000인 경우 : O(N^3)</li>
  </ul>
</blockquote>

<ul>
  <li>
    <h4 id="수행-시간-측정-code-by-python">수행 시간 측정 Code by Python</h4>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import time
start_time = time.time() # 측정 시작
...
end_time = time.time() # 측정 종료
print(end_time - start_time) # 수행 시간 출력
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><category term="Python" /><summary type="html"><![CDATA[이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.]]></summary></entry><entry><title type="html">[Algorithm] 2. 구현 알고리즘 (Implementation Algorithm)</title><link href="http://localhost:4000/algorithm/algorithm2/" rel="alternate" type="text/html" title="[Algorithm] 2. 구현 알고리즘 (Implementation Algorithm)" /><published>2022-09-24T00:00:00+09:00</published><updated>2022-09-24T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/algorithm2</id><content type="html" xml:base="http://localhost:4000/algorithm/algorithm2/"><![CDATA[<p class="notice--primary"><strong>이 항목은 현재 작성중입니다.</strong><br />&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.</p>

<p class="notice--danger"><strong>이 항목은 최신의 내용을 담고 있지 않을 수 있습니다.</strong><br />&gt; 맨 아래의 항목 업데이트 날짜와 OS나 프로그램의 버전 정보를 꼭 확인해주시기 바랍니다.</p>

<p class="notice--warning"><strong>이 항목은 검증되지 않은, 편향된, 혹은 잘못된 내용을 포함할 수 있습니다.</strong><br />&gt; 작성자 역시 공부하는 학생이기에 해당 부분을 댓글이나 이메일을 통해 지적해주신다면 정말 감사할 것 같습니다.</p>

<h2 id="구현-알고리즘-implementation-algorithm">구현 알고리즘 (Implementation Algorithm)</h2>
<ul>
  <li>구현 : 알고리즘을 소스 코드로 바꾸는 과정</li>
  <li>구현 알고리즘은 결국 모든 범위의 문제 유형을 포괄하는 개념</li>
  <li>문제 해결 분야에서의 구현 유형은 ‘풀이를 떠오르는 것은 쉽지만 소스 코드로 옮기기 어려운 문제’를 의미</li>
  <li>대체로 사소한 조건 설정이 많은 문제일수록 구현이 까다로움</li>
</ul>

<h2 id="python으로-구현-시-고려해야-할-제약-사항">Python으로 구현 시 고려해야 할 제약 사항</h2>

<h3 id="python에서의-변수-표현-범위">Python에서의 변수 표현 범위</h3>
<ul>
  <li>C/C++/JAVA와 달리, Python은 프로그래머가 직접 정수형 변수 자료형을 지정할 필요가 없고 아주 큰 수의 연산 역시 기본으로 지원</li>
  <li>실수형 변수는 유효 숫자에 따라 연산하기에 원하는 결과가 나오지 않을 수 있음</li>
</ul>

<h2 id="python에서의-list-크기">Python에서의 list 크기</h2>
<ul>
  <li>Python에서 여러 개의 변수를 사용할 때 list를 이용하는데, 이때 제한된 메모리를 초과할 수 있음</li>
</ul>

<table>
	<thead>
		<tr>
			<th>list의 길이</th>
			<th>메모리 사용량</th>
		</tr>
	</thead>
   	<tbody>
        <tr>
            <th>1,000</th>
            <td>약 4KB</td>
        </tr>
        <tr>
            <th>1,000,000</th>
            <td>약 4MB</td>
        </tr>
        <tr>
            <th>1,000,000,000</th>
            <td>약 40MB</td>
        </tr>
    </tbody>
</table>

<h2 id="문제--상하좌우">문제 : 상하좌우</h2>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><category term="Python" /><summary type="html"><![CDATA[이 항목은 현재 작성중입니다.&gt; 아직 미완성된 코드나 문장 구조가 정확하지 않은 내용이 있을 수 있으니 유의하시기 바랍니다.]]></summary></entry></feed>