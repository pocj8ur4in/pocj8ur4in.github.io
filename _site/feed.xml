<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-03-14T14:48:52+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">pocj8ur4in’s blog</title><subtitle></subtitle><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><entry><title type="html">[Algorithm] 18. 투 포인터</title><link href="http://localhost:4000/algorithm18/" rel="alternate" type="text/html" title="[Algorithm] 18. 투 포인터" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm18</id><content type="html" xml:base="http://localhost:4000/algorithm18/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 17. 최단 경로</title><link href="http://localhost:4000/algorithm17/" rel="alternate" type="text/html" title="[Algorithm] 17. 최단 경로" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm17</id><content type="html" xml:base="http://localhost:4000/algorithm17/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 16. 우선순위 큐</title><link href="http://localhost:4000/algorithm16/" rel="alternate" type="text/html" title="[Algorithm] 16. 우선순위 큐" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm16</id><content type="html" xml:base="http://localhost:4000/algorithm16/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 15. 이분 탐색</title><link href="http://localhost:4000/algorithm15/" rel="alternate" type="text/html" title="[Algorithm] 15. 이분 탐색" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm15</id><content type="html" xml:base="http://localhost:4000/algorithm15/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 14. 누적 합</title><link href="http://localhost:4000/algorithm14/" rel="alternate" type="text/html" title="[Algorithm] 14. 누적 합" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm14</id><content type="html" xml:base="http://localhost:4000/algorithm14/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 13. 동적 계획법</title><link href="http://localhost:4000/algorithm13/" rel="alternate" type="text/html" title="[Algorithm] 13. 동적 계획법" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm13</id><content type="html" xml:base="http://localhost:4000/algorithm13/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 12. 백트래킹</title><link href="http://localhost:4000/algorithm12/" rel="alternate" type="text/html" title="[Algorithm] 12. 백트래킹" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm12</id><content type="html" xml:base="http://localhost:4000/algorithm12/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 11. 정렬</title><link href="http://localhost:4000/algorithm11/" rel="alternate" type="text/html" title="[Algorithm] 11. 정렬" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm11</id><content type="html" xml:base="http://localhost:4000/algorithm11/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>

<h2 id="boj-1181번-단어-정렬-s5"><a href="https://www.acmicpc.net/problem/1181">BOJ 1181번. 단어 정렬 (<code class="language-plaintext highlighter-rouge">S5</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys

read = sys.stdin.readline

N = int(read())
words = []

for n in range(N):
    words.append(read().rstrip())

for k in range(0, 51):
    chks = set()

    for word in range(len(words)):
        if len(words[word]) == k:
            chks.add(words[word])

    chks = list(chks)
    chks.sort()

    for chk in chks:
        print(chk)
</code></pre></div></div>

<h2 id="boj-1427번-소트인사이드-s5"><a href="https://www.acmicpc.net/problem/1427">BOJ 1427번. 소트인사이드 (<code class="language-plaintext highlighter-rouge">S5</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys

read = sys.stdin.readline

N = int(read())
words = []

for n in range(N):
    words.append(read().rstrip())

for k in range(0, 51):
    chks = set()

    for word in range(len(words)):
        if len(words[word]) == k:
            chks.add(words[word])

    chks = list(chks)
    chks.sort()

    for chk in chks:
        print(chk)
</code></pre></div></div>

<h2 id="boj-2751번-수-정렬하기-2-s5"><a href="https://www.acmicpc.net/problem/2751">BOJ 2751번. 수 정렬하기 2 (<code class="language-plaintext highlighter-rouge">S5</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys
read = sys.stdin.readline

N = int(read())
L = list()

for n in range(N):
    L.append(int(read()))

L.sort()

for n in range(N):
    print(L[n])
</code></pre></div></div>

<h2 id="boj-10814번-나이순-정렬-s5"><a href="https://www.acmicpc.net/problem/10814">BOJ 10814번. 나이순 정렬 (<code class="language-plaintext highlighter-rouge">S5</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys

read = sys.stdin.readline

N = int(read())
words = []

for n in range(N):
    age, name = map(str, read().rstrip().split())
    words.append([n, int(age), name])

for i in range(1, 201):
    chks = []

    for word in words:
        if word[1] == i:
            chks.append(word[0])

    chks.sort()

    for chk in chks:
        print(words[chk][1], end=" ")
        print(words[chk][2])
</code></pre></div></div>

<h2 id="boj-11650번-좌표-정렬하기-s5"><a href="https://www.acmicpc.net/problem/11650">BOJ 11650번. 좌표 정렬하기 (<code class="language-plaintext highlighter-rouge">S5</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys

read = sys.stdin.readline

N = int(read())
D = []

for n in range(N):
    x, y = map(int, read().split())

    D.append([x, y])

D.sort()

for n in range(len(D)):
    for m in range(len(D[n])):
        print(D[n][m], end=" ")
    print()
</code></pre></div></div>

<h2 id="boj-11651번-좌표-정렬하기-2-s5"><a href="https://www.acmicpc.net/problem/11651">BOJ 11651번. 좌표 정렬하기 2 (<code class="language-plaintext highlighter-rouge">S5</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys

read = sys.stdin.readline

N = int(read())
D = []

for n in range(N):
    x, y = map(int, read().split())

    D.append([y, x])

D.sort()

for n in range(len(D)):
    for m in range(1, -1, -1):
        print(D[n][m], end=" ")
    print()
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry><entry><title type="html">[Algorithm] 10. 집합과 맵</title><link href="http://localhost:4000/algorithm10/" rel="alternate" type="text/html" title="[Algorithm] 10. 집합과 맵" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm10</id><content type="html" xml:base="http://localhost:4000/algorithm10/"><![CDATA[<h2 id="집합-set--데이터를-중복-없는-유일한-값으로-저장해-비순차적으로-처리하는-자료구조">집합 (<code class="language-plaintext highlighter-rouge">Set</code>) : 데이터를 중복 없는 유일한 값으로 저장해 비순차적으로 처리하는 자료구조</h2>

<ul>
  <li>파이썬에서는 <code class="language-plaintext highlighter-rouge">set()</code>으로 정의하고 <code class="language-plaintext highlighter-rouge">{}</code> 안에 생성되는 집합 (<code class="language-plaintext highlighter-rouge">set</code>)이 집합 자료구조
    <ul>
      <li>교집합 (<code class="language-plaintext highlighter-rouge">A &amp; B</code>), 합집합 (<code class="language-plaintext highlighter-rouge">A | B</code>), 차집합 (<code class="language-plaintext highlighter-rouge">A - B</code>) 모두 지원</li>
      <li>가변 집합을 생성하는 <code class="language-plaintext highlighter-rouge">set()</code> 대신, <code class="language-plaintext highlighter-rouge">frozenset()</code>으로 불변 집합을 생성할 수 있음</li>
    </ul>
  </li>
  <li>다른 컬렉션의 중복을 제거하거나, 순서 상관없이 두 객체를 비교하는 데에 효율적</li>
</ul>

<h2 id="맵-map--키-key와-값-value를-쌍으로-데이터를-처리하는-자료구조">맵 (<code class="language-plaintext highlighter-rouge">Map</code>) : 키 (<code class="language-plaintext highlighter-rouge">Key</code>)와 값 (<code class="language-plaintext highlighter-rouge">Value</code>)를 쌍으로 데이터를 처리하는 자료구조</h2>

<ul>
  <li>파이썬에서는 <code class="language-plaintext highlighter-rouge">{}</code>로 정의하고 키·값이 <code class="language-plaintext highlighter-rouge">:</code>으로 구분하는 딕셔너리 (<code class="language-plaintext highlighter-rouge">dictionary</code>)가 맵 자료구조</li>
  <li>변수의 이름과 값을 연결하여 데이터를 저장하고 검색하는 데에 효율적</li>
</ul>

<h2 id="boj-25192번-인사성-밝은-곰곰이-s4"><a href="https://www.acmicpc.net/problem/25192">BOJ 25192번. 인사성 밝은 곰곰이 (<code class="language-plaintext highlighter-rouge">S4</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys
read = sys.stdin.readline

N = int(read())
SET = set()
ans = 0

for n in range(N):
    S = read().rstrip()
    if S != "ENTER":
        if S not in SET:
            SET.add(S)
            ans += 1
    else:
        SET.clear()

print(str(ans))
</code></pre></div></div>

<h2 id="boj-26069번-붙임성-좋은-총총이-s4"><a href="https://www.acmicpc.net/problem/26069">BOJ 26069번. 붙임성 좋은 총총이 (<code class="language-plaintext highlighter-rouge">S4</code>)</a></h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import sys
read = sys.stdin.readline

N = int(read())
S = set()
S.add("ChongChong")

for n in range(N):
    X, Y = map(str, read().rstrip().split())
    if X in S and Y not in S:
        S.add(Y)
    elif X not in S and Y in S:
        S.add(X)

print(str(S.__len__()))
</code></pre></div></div>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[집합 (Set) : 데이터를 중복 없는 유일한 값으로 저장해 비순차적으로 처리하는 자료구조]]></summary></entry><entry><title type="html">[Algorithm] 21. 최소 신장 트리</title><link href="http://localhost:4000/algorithm21/" rel="alternate" type="text/html" title="[Algorithm] 21. 최소 신장 트리" /><published>2024-03-12T00:00:00+09:00</published><updated>2024-03-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm21</id><content type="html" xml:base="http://localhost:4000/algorithm21/"><![CDATA[<p class="notice--primary"><strong>이 포스트는 현재 작성중입니다. </strong><br />미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.</p>]]></content><author><name>pocj8ur4in</name><email>pocj8ur4in@gmail.com</email></author><category term="Algorithm" /><summary type="html"><![CDATA[이 포스트는 현재 작성중입니다. 미완성된 내용이나 코드가 존재하므로 유의하시기 바랍니다.]]></summary></entry></feed>